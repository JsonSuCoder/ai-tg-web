{"version":3,"file":"5529.359a2f0f35becf197227.js","mappings":"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,YACAqzD,aACAD,iBACAoI,aACA3X,YACA4X,kBACAC,cACAnI,iBACAllE,YACAstE,gBACAC,yBACAtI,wBACAiH,iBACAG,kBACAxB,iBACA2C,eACAvrG,QACA+jG,kBACArqC,UACAuqC,iBACAC,gBACAC,aACAG,eACAM,mBACAC,gBACAG,sBACAE,6BACAC,oBACAI,cACAH,kBACAI,eACAtgD,kBACArV,kBACAm3D,qBACA0D,qBACAz6D,eACAk5D,mBACAzD,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACAjC,gBACA7gC,kBACAomC,iBACA3F,uBACAthC,aACAuhC,WACAvkB,YACAknB,aACArkF,iBACAykF,uBACAqB,sBACAwC,iBACA19B,kBACAzuD,cACAkrF,mBACAzkG,YACAwiG,mBACAuC,sBACAE,mBACAhkB,2BACA9lC,mBACAwpD,gBACA59E,YACAokB,iBACAu6C,oBACAkf,oBACAC,sBACAnwC,yBACA85B,qBACAiU,qBACAkE,wBACApH,qBACAqD,gBACAD,gBACAE,oBACAI,0BACAuC,4BACAzC,gCACAC,oCACA4C,uBACA5G,gBACA5T,eACAvQ,yBACA9lB,sBACAouC,gBACAj3E,QACAg6E,sBACAzC,kBACAthB,UACA0Q,QACA+Q,gBACAv4D,yBACAE,eACA64D,oBACAnV,oBACA0P,kBACAx+E,mBACA6jF,iBACA3+F,WACAuhG,gCAEA,MAAM,uBACJ/nB,GAAsB,qBACtB8G,GAAoB,4BACpBkhB,GAA2B,oBAC3BC,GAAmB,+BACnBC,GAA8B,uBAC9BC,GAAsB,sBACtBC,GAAqB,iBACrBpqD,GAAgB,iBAChBqqD,KACEvqH,EAAAA,EAAAA,MAEE+P,IAAMlC,EAAAA,EAAAA,MACN28G,IAAkB38G,EAAAA,EAAAA,MAClBmwF,IAAmBnwF,EAAAA,EAAAA,MACnB48G,IAAoB58G,EAAAA,EAAAA,MAEpBmsC,IAAU95C,EAAAA,EAAAA,KACVD,IAAOo5B,EAAAA,EAAAA,MAENqxF,GAAuBC,KAA0Bh9G,EAAAA,EAAAA,KAAS,IAC1Di9G,GAAwBC,KA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CA0hG,mBACAwD,kCAAmCtH,EAASsH,kCAC5CnlG,gBACAuiG,2BACA6C,yBAA0BxvG,GAAcwvG,yBACxCC,gBAAiBzvG,GAAcyvG,gBAC/BrqH,mBACAynH,qBACAC,0BACA4C,eAAgBt7G,GAAWs7G,iBAtLb5uJ,CAtnEwB6uJ,EAC1CllJ,OACAuiJ,gBACA4C,gBACA/D,oBACAqB,yBACApyF,UACAp4B,WACAu0C,iBACAh1E,SACAgjB,WACAsmC,UACA0/F,qBACA7qF,kBACAjzC,QACAlsB,QACA6+C,gBACA8rG,gBACAV,2BACA9tC,wBACA+tC,yBACAnB,iBACA3mE,kBACAb,aACAmsE,iBACAlrE,sBACAgqD,sBACAqhB,wBACAU,4BACAtrC,gBACAsoC,cACAC,oBACAxH,0BACAuI,aACAC,iBACAjD,wBACA8C,0BACAuC,oBACAzC,uBACAM,oBACAE,uBACA5yH,mBACAttB,iBACAC,eACAggI,gBACAmgB,wBACA1D,yBACAC,4BACA3yF,qBACAC,iBACAo2F,gBACAC,cACAE,sBACAC,eACAxD,cACAD,YACAY,gBACAV,kBACAE,uBACAwD,iBACA5N,cACA+N,sBACArG,sBACAhoI,SACAirI,YACAf,+BACAwF,4BACA/hB,mBACA16F,WACA5yC,aACAupH,sBACA+iC,gBACAiC,iBACAnjD,yBACA+0C,0BACA6K,qBACAyD,eACAD,uBACAE,sBACAC,gBACAtD,uBACAzD,kBACAH,aACAoH,2BACAxO,qBACA15C,UACAglD,mBACAH,uBACAC,iBACApxC,oBACAuxC,oBACAN,mBACAwD,qCACAnlG,gBACAuiG,2BACA8C,mBACArqH,mBACAynH,qBACAC,0BACA4C,kBACAK,cACAthB,WACAztH,UACAgvI,iBAEA,MAAM,YACJjrI,GAAW,WACXkI,GAAU,WACVgjI,GAAU,cACVC,GAAa,eACbC,GAAc,kBACdC,GAAiB,mBACjBC,GAAkB,qBAClBC,GAAoB,WACpB5gE,GAAU,eACVzzB,GAAc,oBACds0F,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBpyB,GAAa,qBACbniE,GAAoB,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","sources":["webpack://TeleGPT/./src/components/common/MessageOutgoingStatus.tsx","webpack://TeleGPT/./src/components/right/DeleteMemberModal.tsx","webpack://TeleGPT/./src/hooks/useHotkeys.ts","webpack://TeleGPT/./src/util/parseHotkey.ts","webpack://TeleGPT/./src/components/story/StoryRibbon.module.scss?8966","webpack://TeleGPT/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://TeleGPT/./src/components/chatAssistant/component/button.tsx","webpack://TeleGPT/./src/util/PostMessageConnector.ts","webpack://TeleGPT/./src/components/chatAssistant/messages/ai-search-sugesstion-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/global-intoduce-message.module.scss?5de3","webpack://TeleGPT/./src/components/chatAssistant/messages/global-introduce-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/hook/useSpeechPlayer.ts","webpack://TeleGPT/./src/components/chatAssistant/messages/message-actions-button.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/global-summary-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/utils/time-zones.ts","webpack://TeleGPT/./src/components/chatAssistant/messages/google-event-create-messages.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/google-event-detail-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/google-login-auth-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/google-meet-information-suggest-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/google-meet-mention-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/google-meet-time-confirm-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/group-search-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/introduce-actions-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/introduce-meeting-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/introduce-summary-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/introduce-translation-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/room-actions-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/room-ai-des-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/room-ai-media-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/room-ai-reply-mention-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/room-ai-user-portrait.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/room-summary-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/urgent-check-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages/user-search-message.tsx","webpack://TeleGPT/./src/components/chatAssistant/markdown.tsx","webpack://TeleGPT/./src/components/chatAssistant/code-block.tsx","webpack://TeleGPT/./src/components/chatAssistant/message-actions.tsx","webpack://TeleGPT/./src/components/chatAssistant/message-reasoning.tsx","webpack://TeleGPT/./src/components/chatAssistant/preview-attachment.tsx","webpack://TeleGPT/./src/components/chatAssistant/message.tsx","webpack://TeleGPT/./src/components/chatAssistant/messages.tsx","webpack://TeleGPT/./src/components/chatAssistant/hook/use-messages.tsx","webpack://TeleGPT/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://TeleGPT/./src/components/chatAssistant/utils/ai-analyse-message.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://TeleGPT/./src/components/left/main/hooks/useOrderDiff.ts","webpack://TeleGPT/./src/components/chatAssistant/global-summary/chat-serana.teact.tsx","webpack://TeleGPT/./src/components/chatAssistant/hook/useGlobalSummaryBadge.tsx","webpack://TeleGPT/./src/components/left/main/Archive.module.scss?6d2a","webpack://TeleGPT/./src/components/left/main/Archive.tsx","webpack://TeleGPT/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://TeleGPT/./src/components/left/main/EmptyFolder.tsx","webpack://TeleGPT/./src/components/left/main/FrozenAccountNotification.tsx","webpack://TeleGPT/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://TeleGPT/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://TeleGPT/./src/components/left/main/UnconfirmedSession.tsx","webpack://TeleGPT/./src/components/left/main/ChatList.tsx","webpack://TeleGPT/./src/hooks/scroll/useTopOverscroll.tsx","webpack://TeleGPT/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://TeleGPT/./src/components/chatAssistant/component/AITextarea.tsx","webpack://TeleGPT/./src/components/right/userPortrait/UserPortraitAvatar.tsx","webpack://TeleGPT/./src/components/right/userPortrait/SummaryActivity.tsx","webpack://TeleGPT/./src/components/right/userPortrait/ActivityMessage.tsx","webpack://TeleGPT/./src/components/right/userPortrait/UserPortrait.tsx","webpack://TeleGPT/./src/components/right/hooks/usePortrait.ts","webpack://TeleGPT/./src/components/middle/composer/helpers/selection.ts","webpack://TeleGPT/./src/hooks/useForumPanelRender.ts","webpack://TeleGPT/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://TeleGPT/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://TeleGPT/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://TeleGPT/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://TeleGPT/./src/util/dates/workHours.ts","webpack://TeleGPT/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://TeleGPT/./src/components/common/profile/BusinessHours.tsx","webpack://TeleGPT/./src/components/common/profile/PortraitEntry.tsx","webpack://TeleGPT/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://TeleGPT/./src/components/common/profile/UserBirthday.tsx","webpack://TeleGPT/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://TeleGPT/./src/components/common/profile/ChatExtra.tsx","webpack://TeleGPT/./src/components/story/StoryToggler.module.scss?58fa","webpack://TeleGPT/./src/components/common/PrivateChatInfo.tsx","webpack://TeleGPT/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://TeleGPT/./src/hooks/useEnsureStory.ts","webpack://TeleGPT/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://TeleGPT/./src/hooks/usePrevDuringAnimation.ts","webpack://TeleGPT/./src/components/left/main/ChatBadge.tsx","webpack://TeleGPT/./src/components/common/ProfileInfo.module.scss?701a","webpack://TeleGPT/./src/components/common/helpers/formatUsername.ts","webpack://TeleGPT/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://TeleGPT/./src/components/middle/message/Video.tsx","webpack://TeleGPT/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://TeleGPT/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://TeleGPT/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://TeleGPT/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://TeleGPT/./src/types/electron.ts","webpack://TeleGPT/./src/hooks/reducers/useFoldersReducer.ts","webpack://TeleGPT/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://TeleGPT/./src/components/left/main/ChatCallStatus.tsx","webpack://TeleGPT/./src/components/left/main/Chat.tsx","webpack://TeleGPT/./src/components/story/helpers/ribbonAnimation.ts","webpack://TeleGPT/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://TeleGPT/./src/hooks/media/useMessageMediaHash.ts","webpack://TeleGPT/./src/util/focusEditableElement.ts","webpack://TeleGPT/./src/hooks/useMouseInside.ts","webpack://TeleGPT/./src/components/common/WebLink.tsx","webpack://TeleGPT/./src/util/memoized.ts","webpack://TeleGPT/./src/components/common/TopicIcon.tsx","webpack://TeleGPT/./src/hooks/useLongPress.ts","webpack://TeleGPT/./src/components/chatAssistant/component/Tab.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/TabList.tsx","webpack://TeleGPT/./src/util/selection.ts","webpack://TeleGPT/./src/components/story/StoryToggler.tsx","webpack://TeleGPT/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://TeleGPT/./src/util/launchMediaWorkers.ts","webpack://TeleGPT/./src/hooks/useGetSelectionRange.ts","webpack://TeleGPT/./src/components/middle/composer/DropTarget.tsx","webpack://TeleGPT/./src/components/middle/composer/DropArea.tsx","webpack://TeleGPT/./src/hooks/useReducer.ts","webpack://TeleGPT/./src/components/common/NothingFound.tsx","webpack://TeleGPT/./src/components/common/Document.tsx","webpack://TeleGPT/./src/components/chatAssistant/injectComponent.tsx","webpack://TeleGPT/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://TeleGPT/./src/components/story/helpers/videoFormats.ts","webpack://TeleGPT/./src/components/common/LinkField.module.scss?fa18","webpack://TeleGPT/./src/components/common/LinkField.tsx","webpack://TeleGPT/./src/hooks/useChatContextActions.ts","webpack://TeleGPT/./src/util/map.ts","webpack://TeleGPT/./src/components/chatAssistant/room-ai/room-ai.module.scss?b744","webpack://TeleGPT/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://TeleGPT/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://TeleGPT/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://TeleGPT/./src/components/middle/HeaderActions.tsx","webpack://TeleGPT/./src/components/middle/hooks/useHeaderPane.tsx","webpack://TeleGPT/./src/components/middle/message/MessageAppendix.tsx","webpack://TeleGPT/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://TeleGPT/./src/util/mediaSession.ts","webpack://TeleGPT/./src/components/common/GroupChatInfo.tsx","webpack://TeleGPT/./src/components/middle/message/Photo.tsx","webpack://TeleGPT/./src/util/systemFilesDialog.ts","webpack://TeleGPT/./src/components/common/File.tsx","webpack://TeleGPT/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://TeleGPT/./src/components/common/ChatForumLastMessage.tsx","webpack://TeleGPT/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://TeleGPT/./src/util/audioPlayer.ts","webpack://TeleGPT/./src/components/chatAssistant/component/message-gpt-menu.tsx","webpack://TeleGPT/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://TeleGPT/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://TeleGPT/./src/util/languageDetection.ts","webpack://TeleGPT/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://TeleGPT/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://TeleGPT/./src/components/common/embedded/EmbeddedStory.tsx","webpack://TeleGPT/./src/components/common/TopicChip.tsx","webpack://TeleGPT/./src/components/common/TopicChip.module.scss?5208","webpack://TeleGPT/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://TeleGPT/./src/components/middle/message/Album.tsx","webpack://TeleGPT/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://TeleGPT/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://TeleGPT/./src/components/middle/message/AnimatedEmoji.tsx","webpack://TeleGPT/./src/components/middle/message/CommentButton.tsx","webpack://TeleGPT/./src/components/middle/message/Contact.module.scss?fec1","webpack://TeleGPT/./src/components/middle/message/Contact.tsx","webpack://TeleGPT/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://TeleGPT/./src/components/middle/message/FactCheck.module.scss?3842","webpack://TeleGPT/./src/components/middle/message/FactCheck.tsx","webpack://TeleGPT/./src/components/middle/message/Game.tsx","webpack://TeleGPT/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://TeleGPT/./src/components/middle/message/Giveaway.tsx","webpack://TeleGPT/./src/components/middle/message/InlineButtons.tsx","webpack://TeleGPT/./src/components/middle/message/Invoice.tsx","webpack://TeleGPT/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://TeleGPT/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://TeleGPT/./src/components/middle/message/Location.tsx","webpack://TeleGPT/./src/components/middle/message/MessageMeta.tsx","webpack://TeleGPT/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://TeleGPT/./src/components/middle/message/MessagePhoneCall.tsx","webpack://TeleGPT/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://TeleGPT/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://TeleGPT/./src/components/middle/message/PollOption.tsx","webpack://TeleGPT/./src/components/middle/message/Poll.tsx","webpack://TeleGPT/./src/components/middle/message/Sticker.module.scss?30d0","webpack://TeleGPT/./src/components/middle/message/Sticker.tsx","webpack://TeleGPT/./src/components/middle/message/BaseStory.module.scss?d118","webpack://TeleGPT/./src/components/middle/message/BaseStory.tsx","webpack://TeleGPT/./src/components/middle/message/Story.tsx","webpack://TeleGPT/./src/components/middle/message/StoryMention.tsx","webpack://TeleGPT/./src/components/middle/message/TodoList.tsx","webpack://TeleGPT/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://TeleGPT/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://TeleGPT/./src/components/middle/message/WebPage.tsx","webpack://TeleGPT/./src/components/middle/message/helpers/webpageType.ts","webpack://TeleGPT/./src/components/middle/message/Message.tsx","webpack://TeleGPT/./src/components/chatAssistant/hook/useMessageGptMenuHandlers.tsx","webpack://TeleGPT/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://TeleGPT/./src/hooks/useTextLanguage.ts","webpack://TeleGPT/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://TeleGPT/./src/components/common/DeleteChatModal.tsx","webpack://TeleGPT/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://TeleGPT/./src/components/middle/composer/AttachBotIcon.tsx","webpack://TeleGPT/./src/components/middle/composer/AttachBotItem.tsx","webpack://TeleGPT/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://TeleGPT/./src/components/common/helpers/boostInfo.ts","webpack://TeleGPT/./src/components/left/search/helpers/getSenderName.ts","webpack://TeleGPT/./src/lib/utils.ts","webpack://TeleGPT/./src/components/chatAssistant/global-summary/summary-utils.ts","webpack://TeleGPT/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://TeleGPT/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://TeleGPT/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://TeleGPT/./src/util/formatTemperature.ts","webpack://TeleGPT/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://TeleGPT/./src/hooks/window/useBeforeUnload.ts","webpack://TeleGPT/./src/hooks/useScrollNotch.ts","webpack://TeleGPT/./src/util/AbsoluteVideo.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://TeleGPT/./src/components/middle/composer/TextFormatter.async.tsx","webpack://TeleGPT/./src/components/chatAssistant/utils/grammar.ts","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/useGrammarChecker.ts","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/InputErrorTooltip.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/InputGrammar.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/InputGrammarWrapper.tsx","webpack://TeleGPT/./src/components/middle/composer/MessageInput.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-translate/input-language.module.scss?791a","webpack://TeleGPT/./src/components/chatAssistant/component/input-translate/input-language-modal.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-translate/input-translate-tip.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-translate/input-translate.tsx","webpack://TeleGPT/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://TeleGPT/./src/lib/cleanDocsHtml.ts","webpack://TeleGPT/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useDraft.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useEditing.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://TeleGPT/./src/util/voiceRecording.ts","webpack://TeleGPT/./src/components/chatAssistant/utils/grammarly.ts","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/Skeleton/SkeletonScreen.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/tabs/FormalTab.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/tabs/FriendlyTab.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/tabs/ImproveTab.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/tabs/RephraseTab.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/tabs/ShortenTab.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/GrammarTool.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/GrammarToolWrapper.tsx","webpack://TeleGPT/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://TeleGPT/./src/components/middle/composer/AttachMenu.tsx","webpack://TeleGPT/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://TeleGPT/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://TeleGPT/./src/components/middle/composer/BotMenuButton.tsx","webpack://TeleGPT/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://TeleGPT/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://TeleGPT/./src/components/middle/composer/DropArea.async.tsx","webpack://TeleGPT/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://TeleGPT/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://TeleGPT/./src/components/middle/composer/PollModal.async.tsx","webpack://TeleGPT/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://TeleGPT/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://TeleGPT/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://TeleGPT/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://TeleGPT/./src/components/middle/composer/WebPagePreview.tsx","webpack://TeleGPT/./src/components/common/Composer.tsx","webpack://TeleGPT/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://TeleGPT/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://TeleGPT/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://TeleGPT/./src/hooks/useOffscreenCanvasBlur.ts","webpack://TeleGPT/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://TeleGPT/./src/components/calls/group/GroupCallTopPane.tsx","webpack://TeleGPT/./src/components/story/MediaStory.module.scss?3a87","webpack://TeleGPT/./src/components/story/MediaStory.tsx","webpack://TeleGPT/./src/hooks/useAsyncResolvers.ts","webpack://TeleGPT/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://TeleGPT/./src/components/common/helpers/waveform.ts","webpack://TeleGPT/./src/components/common/Audio.tsx","webpack://TeleGPT/./src/util/waveform.ts","webpack://TeleGPT/./src/hooks/useStreaming.ts","webpack://TeleGPT/./src/util/cycleRestrict.ts","webpack://TeleGPT/./src/hooks/useMediaWithLoadProgress.ts","webpack://TeleGPT/./src/components/chatAssistant/icons.tsx","webpack://TeleGPT/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://TeleGPT/./src/components/right/statistics/StatisticsOverview.tsx","webpack://TeleGPT/./src/hooks/useSendMessageAction.ts","webpack://TeleGPT/./src/components/chatAssistant/component/input-grammar/tabs/HighlightedText.tsx","webpack://TeleGPT/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://TeleGPT/./src/components/middle/message/MessageEffect.tsx","webpack://TeleGPT/./src/components/chatAssistant/hook/use-scroll-to-bottom.tsx","webpack://TeleGPT/./src/components/right/statistics/helpers/isGraph.ts","webpack://TeleGPT/./src/components/story/StoryRibbonButton.tsx","webpack://TeleGPT/./src/components/story/StoryRibbon.tsx","webpack://TeleGPT/./src/components/chatAssistant/component/ChatAvatar.tsx","webpack://TeleGPT/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://TeleGPT/./src/components/common/TypingStatus.tsx","webpack://TeleGPT/./src/components/common/DotAnimation.tsx","webpack://TeleGPT/./src/components/common/Media.tsx","webpack://TeleGPT/./src/components/common/LastMessageMeta.tsx","webpack://TeleGPT/./src/hooks/media/useUnsupportedMedia.ts","webpack://TeleGPT/./src/components/middle/message/RoundVideo.tsx","webpack://TeleGPT/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://TeleGPT/./src/hooks/useAudioPlayer.ts","webpack://TeleGPT/./src/components/chatAssistant/global-summary/DrawerContext.tsx","webpack://TeleGPT/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://TeleGPT/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://TeleGPT/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://TeleGPT/./src/components/left/main/EmptyForum.tsx","webpack://TeleGPT/./src/components/left/main/Topic.module.scss?d97e","webpack://TeleGPT/./src/components/left/main/Topic.tsx","webpack://TeleGPT/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://TeleGPT/./src/components/left/main/ForumPanel.tsx","webpack://TeleGPT/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://TeleGPT/./src/components/common/ProfilePhoto.tsx","webpack://TeleGPT/./src/components/common/ProfileInfo.tsx","webpack://TeleGPT/./src/components/common/hooks/usePhotosPreload.ts","webpack://TeleGPT/./src/hooks/window/useFullscreen.ts","webpack://TeleGPT/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://TeleGPT/./src/components/story/hooks/useStoryPreloader.ts","webpack://TeleGPT/./src/components/right/hooks/useAsyncRendering.ts","webpack://TeleGPT/./src/util/download.ts","webpack://TeleGPT/./src/util/progressiveLoader.ts","webpack://TeleGPT/./src/components/left/MuteChatModal.async.tsx","webpack://TeleGPT/./src/components/left/ChatFolderModal.async.tsx","webpack://TeleGPT/./src/components/chatAssistant/ErrorBoundary.tsx"],"sourcesContent":["import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable max-len */\nimport * as React from 'react';\n\nimport { cn } from '../utils/util';\n\ninterface OwnProps {\n  className?: string;\n  disabled?: boolean;\n  onClick?: (e: React.MouseEvent) => void;\n  children: React.ReactNode;\n}\nconst Button = ({\n  className,\n  disabled,\n  onClick,\n  children: content,\n}: OwnProps) => {\n  return (\n    <button\n      className={cn('w-[40px] h-[40px] p-[5px] border-none rounded-full box-border flex items-center justify-center hover:bg-[var(--color-interactive-element-hover)]', className)}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {content}\n    </button>\n  );\n};\n\nexport { Button };\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport SerenaIcon from '../assets/serena.png';\n\nconst suggestions = [\n  'Who is interested in early investments in GameFi projects?',\n  'Which meme KOLs are worth following?',\n  'Which of my contacts interacts with Paulo the most?',\n  'Which friends do Paulo and I share?',\n  'Find messages about Twitter Space collaboration.',\n];\nconst AISearchSugesstionsMessage = (props:{ handleSearch: (query:string)=>void }) => {\n  const { handleSearch } = props;\n  return (\n    <div className=\"flex flex-col mx-[22px]\">\n      <img className=\"w-[52px] h-[52px] rounded-full\" src={SerenaIcon} alt=\"\" />\n      <span className=\"font-bold text-[24px]\">AI Search</span>\n      <span className=\"mb-[12px] text-[14px]\">Intelligent deep search experience.</span>\n      {suggestions.map((item) => {\n        return (\n          <div className=\"px-[10px] py-[6px] mb-[8px] rounded-[8px] bg-[#F8F2FF] text-[14px]\" onClick={() => handleSearch(item)}>\n            {item}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AISearchSugesstionsMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"introduceSummary\":\"rf6B3If7\",\"introduceActions\":\"dJsvi1dH\",\"introduceTranslation\":\"o3wMHYSu\",\"introduceSmartreply\":\"rhP7CCVz\"};","/* eslint-disable max-len */\nimport React from 'react';\nimport { getGlobal } from '../../../global';\n\nimport eventEmitter, { Actions } from '../lib/EventEmitter';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport {\n  createIntroduceActionsMessage, createIntroduceMeetingMessage, createIntroduceSummaryMessage, createIntroduceTranslationMessage,\n} from '../global-summary/summary-utils';\nimport { useScrollToBottom } from '../hook/use-scroll-to-bottom';\nimport { ChataiStores } from '../store';\n\nimport './global-intoduce-message.scss';\nimport styles from './global-intoduce-message.module.scss';\n\nexport const GlobalIntroduceMessage = () => {\n  const global = getGlobal();\n  const { currentUserId } = global;\n  const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n  const { scrollToBottom } = useScrollToBottom();\n  const sendMeetingIntroduceMessage = () => {\n    const message = createIntroduceMeetingMessage();\n    ChataiStores.summary?.storeMessage(message);\n    eventEmitter.emit(Actions.AddSummaryMessage, message);\n    scrollToBottom();\n  };\n  const sendSmmaryIntroduceMessage = () => {\n    const message = createIntroduceSummaryMessage();\n    ChataiStores.summary?.storeMessage(message);\n    eventEmitter.emit(Actions.AddSummaryMessage, message);\n    scrollToBottom();\n  };\n  const sendActionsIntroduceMessage = () => {\n    const message = createIntroduceActionsMessage();\n    ChataiStores.summary?.storeMessage(message);\n    eventEmitter.emit(Actions.AddSummaryMessage, message);\n    scrollToBottom();\n  };\n  const sendTranslationIntroduceMessage = () => {\n    const message = createIntroduceTranslationMessage();\n    ChataiStores.summary?.storeMessage(message);\n    eventEmitter.emit(Actions.AddSummaryMessage, message);\n    scrollToBottom();\n  };\n  return (\n    <div className=\"global-summary-introduce\">\n      <h3>Hi {[currentUser?.firstName, currentUser?.lastName].filter(Boolean).join(' ')} 👋</h3>\n      <h3>How can I help you today！</h3>\n      <div className=\"rounded-[16px] p-[15px] grid grid-cols-2 gap-[12px] w-[743px] mt-[10px] mb-[20px] bg-[var(--color-background)]\">\n        <div\n          className={buildClassName(styles.introduceSummary, 'global-summary-introduce-item')}\n          onClick={sendSmmaryIntroduceMessage}\n        >\n          <div className=\"text-[18px] font-bold mb-[10px] text-[var(--color-text)]\">\n            📝 AI Summary\n          </div>\n          <div className=\"text-[14px] leading-[18px] text-[var(--color-text-secondary)] pr-[120px]\">\n            Get instant, clear takeaways during the chat\n          </div>\n        </div>\n        <div\n          className={buildClassName(styles.introduceActions, 'global-summary-introduce-item')}\n          onClick={sendActionsIntroduceMessage}\n        >\n          <div className=\"text-[18px] font-bold mb-[10px] text-[var(--color-text)]\">\n            ✅ Action Items\n          </div>\n          <div className=\"text-[14px] leading-[18px] text-[var(--color-text-secondary)] pr-[120px]\">\n            Automatically capture next steps and assignments.\n          </div>\n        </div>\n        <div\n          className={buildClassName(styles.introduceTranslation, 'global-summary-introduce-item')}\n          onClick={sendTranslationIntroduceMessage}\n        >\n          <div className=\"text-[18px] font-bold mb-[10px] text-[var(--color-text)]\">\n            📚️ Translation & Grammar Check\n          </div>\n          <div className=\"text-[14px] leading-[18px] text-[var(--color-text-secondary)] pr-[120px]\">\n            Communicate effortlessly, in any language.\n          </div>\n        </div>\n        <div\n          className={buildClassName(styles.introduceSmartreply, 'global-summary-introduce-item')}\n          onClick={sendMeetingIntroduceMessage}\n        >\n          <div className=\"text-[18px] font-bold mb-[10px] text-[var(--color-text)]\">\n            🚀 Meeting Scheduler\n          </div>\n          <div className=\"text-[14px] leading-[18px] text-[var(--color-text-secondary)] pr-[120px]\">\n            Book and organize meetings with ease.\n          </div>\n        </div>\n      </div>\n      <div>\n        <h5 className=\"text-[16px] font-normal mb-[16px]\"> You can also ask me like this</h5>\n        <div className=\"flex flex-row flex-wrap gap-[12px]\">\n          <div className=\"p-[8px] rounded-[16px] text-[14px] text-[var(--color-text)] bg-[var(--color-background)]\">\n            Summarize unread messages\n          </div>\n          <div className=\"p-[8px] rounded-[16px] text-[14px] text-[var(--color-text)] bg-[var(--color-background)]\">\n            What are the most discussed crypto today?\n          </div>\n          <div className=\"p-[8px] rounded-[16px] text-[14px] text-[var(--color-text)] bg-[var(--color-background)]\">\n            Help me schedule a meeting for 10 AM tomorrow\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable no-null/no-null */\nimport { useEffect, useRef, useState } from 'react';\n\nlet activeId: string | null = null;\n\ntype UseSpeechPlayerResult = {\n  isSpeaking: boolean;\n  speak: (text: string, options?: Partial<SpeechSynthesisUtterance>) => void;\n  stop: () => void;\n};\n\nconst listeners: Record<string, (playing: boolean) => void> = {};\n\nexport function useSpeechPlayer(id: string): UseSpeechPlayerResult {\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const localUtteranceRef = useRef<SpeechSynthesisUtterance | null>(null);\n\n  // 注册播放状态监听\n  useEffect(() => {\n    listeners[id] = (playing) => setIsSpeaking(playing);\n    return () => {\n      delete listeners[id];\n    };\n  }, [id]);\n\n  const speak = (text: string, options: Partial<SpeechSynthesisUtterance> = {}) => {\n    // 先取消全局语音\n    if (speechSynthesis.speaking || speechSynthesis.pending) {\n      speechSynthesis.cancel();\n    }\n\n    const utterance = new SpeechSynthesisUtterance(text);\n    Object.assign(utterance, options);\n    activeId = id;\n    localUtteranceRef.current = utterance;\n\n    utterance.onend = () => {\n      if (activeId === id) {\n        listeners[id]?.(false);\n        activeId = null;\n      }\n    };\n\n    utterance.onerror = () => {\n      if (activeId === id) {\n        listeners[id]?.(false);\n        activeId = null;\n      }\n    };\n\n    // 设置本组件为 speaking，其它都设为 false\n    Object.entries(listeners).forEach(([key, fn]) => fn(key === id));\n    speechSynthesis.speak(utterance);\n  };\n\n  const stop = () => {\n    if (activeId === id && (speechSynthesis.speaking || speechSynthesis.pending)) {\n      speechSynthesis.cancel();\n      listeners[id]?.(false);\n      activeId = null;\n    }\n  };\n\n  return { isSpeaking, speak, stop };\n}\n","import React, { useCallback, useRef } from 'react';\nimport type { Message } from 'ai';\nimport { getActions } from '../../../global';\n\nimport { useSpeechPlayer } from '../hook/useSpeechPlayer';\nimport {\n  CopyIcon, DeleteIcon, MessageShareIcon, VoiceIcon, VoiceingIcon,\n} from '../icons';\n\ninterface OwnProps {\n  message: Message;\n  canCopy?: boolean;\n  canVoice?: boolean;\n  canShare?: boolean;\n  canDelete?: boolean;\n  onClickShare?: () => void;\n  onDelete?: () => void;\n}\nconst MessageActionsItems = ({\n  message, canCopy, canVoice, canShare, canDelete, onClickShare, onDelete,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const { isSpeaking, speak, stop } = useSpeechPlayer(message.id);\n  const containerRef = useRef<HTMLDivElement>(undefined);\n\n  // 获取需要朗读的文本\n  const getReadableText = useCallback(() => {\n    if (!containerRef.current) return '';\n\n    // 查找父容器\n    const parentContainer = containerRef.current.closest('[data-message-container]');\n    if (!parentContainer) return '';\n\n    // 获取所有标记为需要朗读的元素\n    const readableElements = parentContainer.querySelectorAll('[data-readable], [data-readable-inline]');\n    const texts: string[] = [];\n    let currentLine = '';\n\n    readableElements.forEach((element) => {\n      const text = element.textContent?.trim();\n      if (text) {\n        if (element.hasAttribute('data-readable-inline')) {\n          // 内联文本，不换行，用空格连接\n          if (currentLine) {\n            currentLine = `${currentLine} ${text}`;\n          } else {\n            currentLine = text;\n          }\n        } else {\n          // 普通文本，需要换行\n          if (currentLine) {\n            texts.push(currentLine);\n            currentLine = '';\n          }\n          texts.push(text);\n        }\n      }\n    });\n\n    // 处理最后的内联文本\n    if (currentLine) {\n      texts.push(currentLine);\n    }\n\n    return texts.join('\\n');\n  }, []);\n\n  const handleCopy = () => {\n    const textToCopy = getReadableText();\n    if (textToCopy) {\n      navigator.clipboard.writeText(textToCopy).then(() => {\n        showNotification({ message: 'Copy successful' });\n      }).catch(() => {\n        showNotification({ message: 'Copy failed' });\n      });\n    } else {\n      showNotification({ message: 'No text to copy' });\n    }\n  };\n\n  const handleVoicePlay = () => {\n    const voiceText = getReadableText();\n    if (isSpeaking) {\n      stop();\n    } else if (voiceText) {\n      try {\n        speak(voiceText);\n      } catch (error) {\n        showNotification({ message: '语音播放失败' });\n      }\n    } else {\n      showNotification({ message: '没有可播放的内容' });\n    }\n  };\n  return (\n    <div ref={containerRef} className=\"flex items-center gap-[8px] py-[6px]\">\n      {canCopy && (\n        <div className=\"w-[24px] h-[24px] text-[#676B74] cursor-pointer\" onClick={handleCopy}>\n          <CopyIcon size={24} />\n        </div>\n      )}\n      {canVoice && (\n        <div\n          className=\"w-[24px] h-[24px] text-[#676B74] cursor-pointer\"\n          onClick={handleVoicePlay}\n        >\n          {isSpeaking ? (\n            <VoiceingIcon size={24} />\n          ) : (\n            <VoiceIcon size={24} />\n          )}\n        </div>\n      )}\n      {canShare && (\n        <div className=\"w-[24px] h-[24px] text-[#676B74] cursor-pointer\" onClick={onClickShare}>\n          <MessageShareIcon size={24} />\n        </div>\n      )}\n      {canDelete && (\n        <div className=\"w-[20px] h-[20px] cursor-pointer\" onClick={onDelete}>\n          <DeleteIcon size={20} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MessageActionsItems;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport type { Message } from 'ai';\nimport { Popover } from 'antd';\nimport { getActions, getGlobal } from '../../../global';\n\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { buildEntityTypeFromIds, getIdsFromEntityTypes, telegptSettings } from '../api/user-settings';\nimport { cn, formatTimestamp } from '../utils/util';\nimport MessageActionsItems from './message-actions-button';\n\nimport Avatar from '../component/Avatar';\nimport Icon from '../component/Icon';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { DrawerKey, useDrawerStore } from '../global-summary/DrawerContext';\n\nimport ActionsIcon from '../assets/actions.png';\nimport CalendarIcon from '../assets/calendar.png';\nimport CheckIcon from '../assets/check.png';\nimport MessageIcon from '../assets/message.png';\nimport SerenaLogoPath from '../assets/serena.png';\nimport UserIcon from '../assets/user.png';\nimport WriteIcon from '../assets/write.png';\nimport { isUserId } from '../../../util/entities/ids';\n\ninterface IProps {\n  message: Message;\n  deleteMessage: () => void;\n}\ninterface ISummaryInfo {\n  summaryMessageCount: number;\n  summaryStartTime: number;\n  summaryEndTime: number;\n  summaryChatIds: Array<string>;\n}\n\ninterface ISummaryPendingItem {\n  chatId: string;\n  chatRoomName: string;\n  summary: string;\n  relevantMessageIds: number[];\n}\ninterface ISummaryGarbageItem {\n  chatId: string;\n  chatRoomName: string;\n  summary: string;\n  level: 'high' | 'low';\n  relevantMessageIds: number[];\n}\n\ninterface SummaryTopic {\n  chatId: string;\n  chatRoomName: string;\n  mainTopics: Array<{\n    content: string;\n    relevantMessageIds: number[];\n  }>;\n  customTopics: Array<{\n    topicName: string;\n    summaryItems: Array<{\n      content: string;\n      relevantMessageIds: number[];\n    }>;\n  }>;\n}\n\n/**\n * 时间戳专用时间范围格式化工具\n * @param {number} start 开始时间戳（支持毫秒/秒级）\n * @param {number} end 结束时间戳（支持毫秒/秒级）\n * @returns {string} 格式化后的时间范围字符串\n */\nfunction formatTimestampRange(start:number | undefined, end:number | undefined) {\n  // 时间戳标准化处理（自动识别秒/毫秒）\n  const normalizeTimestamp = (ts:number) => {\n    if (ts.toString().length <= 10) return ts * 1000; // 秒级转毫秒\n    return ts; // 毫秒级直接使用\n  };\n\n  const startDate = start ? new Date(normalizeTimestamp(start)) : undefined;\n  const endDate = end ? new Date(normalizeTimestamp(end)) : undefined;\n  const now = new Date();\n\n  // 日期比较函数\n  const isSameDay = (d1:Date, d2:Date) => d1.getFullYear() === d2.getFullYear()\n    && d1.getMonth() === d2.getMonth()\n    && d1.getDate() === d2.getDate();\n\n  const isToday = (date:Date) => isSameDay(date, now);\n\n  // 时间格式化组件\n  const formatTime = (date:Date) => {\n    const pad = (n:number) => String(n).padStart(2, '0');\n    return `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n  };\n\n  const formatDate = (date:Date) => {\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December',\n    ];\n    const month = monthNames[date.getMonth()];\n    const pad = (n:number) => String(n).padStart(2, '0');\n    return `${month} ${pad(date.getDate())} / ${formatTime(date)}`;\n  };\n\n  if (!startDate && !endDate) {\n    return '';\n  }\n  if (!startDate && endDate) {\n    return `${formatDate(endDate)}`;\n  }\n  if (startDate && !endDate) {\n    return `${formatDate(startDate)}`;\n  }\n  if (startDate && endDate) {\n    // 范围判断逻辑\n    if (isToday(startDate) && isToday(endDate)) {\n      return `${formatTime(startDate)} - ${formatTime(endDate)}`;\n    } else {\n      return `${formatDate(startDate)} - ${formatDate(endDate)}`;\n    }\n  }\n  return '';\n}\n\nfunction mergeTopics(mainTopic: any[], customTopic: any[]):SummaryTopic[] {\n  const mergedMap = new Map<string, {\n    chatId: string;\n    chatRoomName: string;\n    mainTopics: Array<{ content: string; relevantMessageIds: number[] }>;\n    customTopics: Array<{\n      topicName: string;\n      summaryItems: Array<{ content: string; relevantMessageIds: number[] }>;\n    }>;\n  }>();\n\n  // 处理 mainTopic\n  if (mainTopic.length > 0) {\n    for (const item of mainTopic) {\n      const key = item.chatId;\n      if (!mergedMap.has(key)) {\n        mergedMap.set(key, {\n          chatId: item.chatId,\n          chatRoomName: item.chatRoomName,\n          mainTopics: item.summaryItems || [],\n          customTopics: [],\n        });\n      } else {\n        const existing = mergedMap.get(key)!;\n        existing.mainTopics.push(...(item.summaryItems || []));\n      }\n    }\n  }\n\n  // 处理 customTopic\n  if (customTopic.length > 0) {\n    for (const item of customTopic) {\n      const key = item.chatId;\n      if (!mergedMap.has(key)) {\n        mergedMap.set(key, {\n          chatId: item.chatId,\n          chatRoomName: item.chatRoomName,\n          mainTopics: [],\n          customTopics: [{\n            topicName: item.topicName,\n            summaryItems: item.summaryItems || [],\n          }],\n        });\n      } else {\n        const existing = mergedMap.get(key)!;\n        existing.customTopics.push({\n          topicName: item.topicName,\n          summaryItems: item.summaryItems || [],\n        });\n      }\n    }\n  }\n\n  return Array.from(mergedMap.values());\n}\n\nconst ChatAvatar = ({\n  chatId, classNames, size, style, tooltip,\n}: { chatId: string; classNames?: string; size:number;style?: { [key:string]:string } ;tooltip?: boolean }) => {\n  const global = getGlobal();\n  let peer;\n  if (isUserId(chatId)) {\n    peer = selectUser(global, chatId);\n  } else {\n    peer = selectChat(global, chatId);\n  }\n\n  return (\n    <Avatar\n      style={style}\n      key={chatId}\n      className={cn(classNames, 'overlay-avatar inline-block cursor-pointer')}\n      size={size}\n      peer={peer}\n      tooltip={tooltip}\n    />\n  );\n};\n\nconst SummaryTopicItem = ({ chatId, topicItem }: {\n  chatId: string;\n  topicItem:{ content:string; relevantMessageIds: number[] }[];\n}) => {\n  const { openDrawer } = useDrawerStore();\n  const showMessageDetail = (chatId: string, relevantMessageIds: number[]) => {\n    openDrawer(DrawerKey.OriginalMessages, {\n      relevantMessages: [{ chatId, messageIds: relevantMessageIds }],\n    });\n  };\n  return (\n    <ErrorBoundary>\n      <ul className=\"list-disc pl-[18px] text-[16px] list-inside\">\n        {topicItem.map((summaryItem: any) => {\n          const { content, relevantMessageIds } = summaryItem;\n          if (!content) return null;\n          return (\n            <li\n              role=\"button\"\n              className=\"cursor-pointer text-[15px] break-words\"\n              onClick={() => showMessageDetail(chatId, relevantMessageIds)}\n              data-readable\n            >\n              {content}\n            </li>\n          );\n        })}\n      </ul>\n    </ErrorBoundary>\n  );\n};\n\nconst SummaryPenddingItem = ({ pendingItem }: { pendingItem: ISummaryPendingItem }) => {\n  const { openDrawer } = useDrawerStore();\n  const showMessageDetail = () => {\n    openDrawer(DrawerKey.OriginalMessages, {\n      relevantMessages: [{ chatId: pendingItem.chatId, messageIds: pendingItem.relevantMessageIds }],\n    });\n  };\n  return (\n    <ErrorBoundary>\n      <div\n        className=\"flex gap-[8px] my-[4px] cursor-pointer\"\n        key={pendingItem.chatId}\n        onClick={showMessageDetail}\n      >\n        <img className=\"w-[18px] h-[18px] mt-[2px]\" src={CheckIcon} alt=\"\" />\n        <span className=\"text-[15px]\" data-readable>{pendingItem.summary}</span>\n        <ChatAvatar size={20} chatId={pendingItem.chatId} />\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nconst SummaryGarbageItem = ({ garBageItem }: { garBageItem: ISummaryGarbageItem }) => {\n  const {\n    chatId, chatRoomName, level, summary, relevantMessageIds,\n  } = garBageItem;\n  const { openDrawer } = useDrawerStore();\n  const showMessageDetail = (chatId: string, relevantMessageIds: number[]) => {\n    openDrawer(DrawerKey.OriginalMessages, {\n      relevantMessages: [{ chatId, messageIds: relevantMessageIds }],\n    });\n  };\n  if (!isUserId(chatId)) {\n    return undefined;\n  }\n  return (\n    <ErrorBoundary>\n      <div\n        className=\"flex justify-start gap-[8px] my-[16px]\"\n        key={garBageItem.chatId}\n        onClick={() => { showMessageDetail(chatId, relevantMessageIds); }}\n      >\n        <ChatAvatar chatId={chatId} size={44} />\n        <div>\n          <p className=\"text-[16px] font-semibold leading-[20px] mb-[4px]\">{chatRoomName}</p>\n          <div className=\"flex justify-start gap-[4px]\">\n            {level === 'high' ? (\n              <span className=\"text-[#FF543D] text-[14px] whitespace-nowrap\">🔴 High-Risk</span>\n            ) : (\n              <span className=\"text-[#FF9B05] text-[14px] whitespace-nowrap\">🟡 Low-Risk</span>\n            )}\n            <span className=\"text-[14px] text-[var(--color-text-secondary)]\">{summary}</span>\n          </div>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nconst SummaryInfoContent = ({ summaryInfo }:{ summaryInfo:ISummaryInfo }) => {\n  return (\n    <ErrorBoundary>\n      <div className=\"mb-[6px]\">\n        <div className=\"flex items-center gap-[8px]\">\n          <img className=\"w-[52px] h-[52px] rounded-full ml-[-60px]\" src={SerenaLogoPath} alt=\"\" />\n          <div>\n            <p className=\"text-[16px] font-semibold\">Tely AI</p>\n            {summaryInfo?.summaryEndTime ? (\n              <p className=\"text-[14px] text-[#A8A6AC]\">{formatTimestamp(summaryInfo.summaryEndTime)}</p>\n            ) : null}\n          </div>\n        </div>\n        <p className=\"text-[22px] font-bold mb-[16px]\" data-readable>Chat Summary</p>\n        <div className=\"flex items-center gap-[20px]\">\n          <p className=\"flex items-center gap-[8px]\">\n            <img className=\"w-[16px] h-[16px]\" src={CalendarIcon} alt=\"\" />\n            <div className=\"flex items-center gap-[4px]\">\n              <span className=\"mr-[4px] font-bold text-[14px]\" data-readable data-readable-inline>Time range:</span>\n              <span data-readable data-readable-inline>{formatTimestampRange(summaryInfo?.summaryStartTime, summaryInfo?.summaryEndTime)}</span>\n            </div>\n          </p>\n          <p className=\"flex items-center gap-[8px]\">\n            <img className=\"w-[16px] h-[16px]\" src={MessageIcon} alt=\"\" />\n            <div className=\"flex items-center gap-[4px]\">\n              <span className=\"font-bold text-[14px]\" data-readable data-readable-inline>Messages:</span>\n              {summaryInfo?.summaryMessageCount ? (\n                <span data-readable data-readable-inline>{summaryInfo?.summaryMessageCount}</span>\n              ) : null}\n            </div>\n          </p>\n        </div>\n        {summaryInfo?.summaryChatIds ? (\n          <div className=\"flex items-center gap-[8px]\">\n            <img className=\"w-[16px] h-[16px]\" src={UserIcon} alt=\"\" />\n            <span className=\"font-bold text-[14px]\">Groups/friends: </span>\n            <div className=\"flex items-center\">\n              {summaryInfo.summaryChatIds.slice(0, 10).map((id: string, index: number) => {\n                return (\n                  <ChatAvatar\n                    style={{ zIndex: `${String(summaryInfo.summaryChatIds.length - index)};` }}\n                    chatId={id}\n                    size={24}\n                    classNames=\"summary-avatar-group !border-solid-[2px] !border-white ml-[-4px]\"\n                    key={id}\n                  />\n                );\n              })}\n              {summaryInfo.summaryChatIds.length > 10 ? (\n                <div className=\"w-[24px] h-[24px] rounded-full bg-[#979797] text-[12px] whitespace-nowrap flex items-center justify-center\">{summaryInfo.summaryChatIds.length - 10}+</div>\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nconst IgnoreSummaryButton = ({ chatId, handleIgnore }:{ chatId:string ;handleIgnore:(id:string) => void }) => {\n  return (\n    <div\n      className=\"flex items-center gap-[4px] cursor-pointer transition-colors duration-200 text-[14px] text-[var(--color-text)]\"\n      onClick={() => handleIgnore(chatId)}\n    >\n      <Icon name=\"eye-crossed\" />\n      <span className=\"font-semibold\">Ignore this chat</span>\n    </div>\n  );\n};\n\nconst MainSummaryContent = ({\n  messageId,\n  summaryInfo,\n  summaryTopic,\n  pendingMatters,\n  deleteMessage,\n}: {\n  messageId:string;\n  summaryInfo: ISummaryInfo | null;\n  summaryTopic:SummaryTopic[];\n  pendingMatters: ISummaryPendingItem[];\n  deleteMessage: () => void;\n}) => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const { ignored_summary_chat_ids } = telegptSettings.telegptSettings;\n  const ignoredChatIds = getIdsFromEntityTypes(ignored_summary_chat_ids);\n  const [ignoredIds, setIgnoredIds] = useState<string[]>(ignoredChatIds);\n  const handleIgnore = useCallback((id:string) => {\n    const newSelected = [...new Set([...ignoredIds, id])];\n    const entityTypes = buildEntityTypeFromIds(newSelected);\n    setIgnoredIds(newSelected);\n    telegptSettings.setSettingOption({\n      ignored_summary_chat_ids: entityTypes,\n    }, (res) => {\n      if (res.code === 0) {\n        getActions().showNotification({\n          message: 'This chat will no longer be included in future summaries.',\n        });\n      }\n    });\n  }, [ignoredIds]);\n  return (\n    <div\n      className=\"w-max-[693px] rounded-[10px] pl-[82px] pr-[25px] pt-[20px] pb-[25px] bg-[var(--color-background)]\"\n      data-message-container\n    >\n      {/* summary info  */}\n      {summaryInfo && <SummaryInfoContent summaryInfo={summaryInfo} />}\n      {summaryTopic.length > 0 && (\n        <div>\n          <p className=\"flex items-center gap-[8px] mb-[16px]\">\n            <span className=\"text-[18px] font-bold\" data-readable>Key Topics</span>\n            <img className=\"w-[16px] h-[16px]\" src={WriteIcon} alt=\"\" />\n          </p>\n          {\n            summaryTopic.map((item, index) => {\n              return (\n                <div>\n                  <div className=\"flex items-center justify-between gap-[8px]\">\n                    {ignoredIds.includes(item.chatId) ? (\n                      <div className=\"flex items-center gap-[8px]\">\n                        <p className=\"text-[16px] font-bold\" data-readable>{index + 1}.{item.chatRoomName}</p>\n                        <ChatAvatar size={20} chatId={item.chatId} />\n                      </div>\n                    ) : (\n                      <Popover\n                        className=\"room-info-popover\"\n                        placement=\"top\"\n                        content={\n                          <IgnoreSummaryButton chatId={item.chatId} handleIgnore={handleIgnore} />\n                        }\n                      >\n                        <div className=\"flex items-center gap-[8px]\">\n                          <p className=\"text-[16px] font-bold\" data-readable>{index + 1}.{item.chatRoomName}</p>\n                          <ChatAvatar size={20} chatId={item.chatId} />\n                        </div>\n                      </Popover>\n                    )}\n\n                  </div>\n                  <ul className=\"list-disc pl-[2px] text-[16px] list-inside\">\n                    {item.mainTopics.length > 0 && (\n                      <li>\n                        <span className=\"text-[16px] font-bold\" data-readable>Key Points</span>\n                        <SummaryTopicItem chatId={item.chatId} topicItem={item.mainTopics} />\n                      </li>\n                    )}\n                    {\n                      item.customTopics.length > 0 && (\n                        item.customTopics.map((customTopic) => {\n                          return (\n                            <li>\n                              <span className=\"text-[16px] font-bold\" data-readable>{customTopic.topicName}</span>\n                              <SummaryTopicItem chatId={item.chatId} topicItem={customTopic.summaryItems} />\n                            </li>\n                          );\n                        })\n                      )\n                    }\n                  </ul>\n                </div>\n              );\n            })\n          }\n        </div>\n      )}\n      {/* pending actions  */}\n      {pendingMatters.length > 0 && (\n        <div>\n          <p className=\"flex items-center gap-[8px] mb-[16px]\">\n            <span className=\"text-[18px] font-bold\" data-readable>Actions Items</span>\n            <img className=\"w-[16px] h-[16px]\" src={ActionsIcon} alt=\"\" />\n          </p>\n          {pendingMatters.map((item) => (<SummaryPenddingItem pendingItem={item} />))}\n        </div>\n      )}\n      {/* action buttons  */}\n      <MessageActionsItems\n        canCopy\n        canVoice\n        canDelete\n        onDelete={deleteMessage}\n        message={{ id: messageId } as Message}\n      />\n    </div>\n  );\n};\nconst SummaryContent = ({\n  messageId,\n  summaryInfo,\n  summaryTopic,\n  pendingMatters,\n  garbageMessage,\n  deleteMessage,\n}:\n{\n  messageId: string;\n  summaryInfo: ISummaryInfo | null;\n  summaryTopic: SummaryTopic[];\n  pendingMatters: ISummaryPendingItem[];\n  garbageMessage: ISummaryGarbageItem[];\n  deleteMessage: () => void;\n}) => {\n  return (\n    <>\n      {(!summaryTopic.length && !pendingMatters.length) ? null : (\n        <MainSummaryContent\n          messageId={messageId}\n          summaryInfo={summaryInfo}\n          summaryTopic={summaryTopic}\n          pendingMatters={pendingMatters}\n          deleteMessage={deleteMessage}\n        />\n      )}\n\n      {garbageMessage && garbageMessage.length > 0 && (\n        <div className=\"w-max-[693px] rounded-[10px] bg-[var(--color-background)] pl-[82px] pr-[25px] pt-[20px] pb-[25px] mt-[10px]\">\n          <div className=\"flex items-center gap-[8px]\">\n            <img className=\"w-[52px] h-[52px] rounded-full ml-[-60px]\" src={SerenaLogoPath} alt=\"\" />\n            <div>\n              <p className=\"text-[16px] font-semibold\">Tely AI</p>\n              {summaryInfo?.summaryEndTime ? (\n                <p className=\"text-[14px] text-[#A8A6AC]\">{formatTimestamp(summaryInfo.summaryEndTime)}</p>\n              ) : null}\n            </div>\n          </div>\n          <p className=\"text-[22px] font-bold mb-[16px]\">Spam Filtering</p>\n          <div className=\"flex items-center gap-[20px]\">\n            <p className=\"flex items-center gap-[8px]\">\n              <img className=\"w-[16px] h-[16px]\" src={CalendarIcon} alt=\"\" />\n              <div className=\"flex items-center\">\n                <span className=\"mr-[4px]\">Time range:</span>\n                {formatTimestampRange(summaryInfo?.summaryStartTime, summaryInfo?.summaryEndTime)}\n              </div>\n            </p>\n          </div>\n          {garbageMessage.map((item) => (<SummaryGarbageItem garBageItem={item} />))}\n        </div>\n      )}\n    </>\n  );\n};\nconst GlobalSummaryMessage = (props: IProps) => {\n  const { message, deleteMessage } = props;\n  const [summaryInfo, setSummaryInfo] = useState<ISummaryInfo | null>(null);\n  const [pendingMatters, setPendingMatters] = useState<ISummaryPendingItem[]>([]);\n  const [garbageMessage, setGarbageMessage] = useState<ISummaryGarbageItem[]>([]);\n  const [summaryTopic, setSummaryTopic] = useState<SummaryTopic[]>([]);\n  const parseMessage = useCallback((messageContent: string) => {\n    const messageObj = JSON.parse(messageContent);\n    const {\n      mainTopic = [], pendingMatters, garbageMessage, customTopic = [], summaryInfo,\n    } = messageObj;\n    if (pendingMatters) {\n      setPendingMatters(pendingMatters as ISummaryPendingItem[]);\n    }\n    if (garbageMessage) {\n      setGarbageMessage(garbageMessage as ISummaryGarbageItem[]);\n    }\n    if (summaryInfo) {\n      setSummaryInfo(summaryInfo as ISummaryInfo);\n    }\n    const mergeSummaryTopics = mergeTopics(mainTopic, customTopic);\n    setSummaryTopic(mergeSummaryTopics);\n  }, []);\n  useEffect(() => {\n    try {\n      parseMessage(message.content);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }, [message, parseMessage]);\n  if (!summaryInfo) {\n    return null;\n  }\n  return (\n    <SummaryContent\n      messageId={message.id}\n      summaryInfo={summaryInfo}\n      summaryTopic={summaryTopic}\n      pendingMatters={pendingMatters}\n      garbageMessage={garbageMessage}\n      deleteMessage={deleteMessage}\n    />\n  );\n};\n\nexport default GlobalSummaryMessage;\n","/* eslint-disable no-mixed-operators */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable max-len */\n/* eslint-disable no-return-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-null/no-null */\nimport { useMemo } from 'react';\nimport spacetime from 'spacetime';\nimport soft from 'timezone-soft';\n\n// type ICustomTimezone = {\n//   [key: string]: string;\n// };\n\n// type ILabelStyle = 'original' | 'altName' | 'abbrev' | 'offsetHidden';\n// type IDisplayValue = 'GMT' | 'UTC';\ntype ITimezoneOption = {\n  value: string;\n  label: string;\n  abbrev?: string;\n  altName?: string;\n  offset?: number;\n};\ntype ITimezone = ITimezoneOption | string;\n\nconst allTimezones = {\n  'Pacific/Midway': 'Midway Island, Samoa',\n  'Pacific/Honolulu': 'Hawaii',\n  'America/Juneau': 'Alaska',\n  'America/Boise': 'Mountain Time',\n  'America/Dawson': 'Dawson, Yukon',\n  'America/Chihuahua': 'Chihuahua, La Paz, Mazatlan',\n  'America/Phoenix': 'Arizona',\n  'America/Chicago': 'Central Time',\n  'America/Regina': 'Saskatchewan',\n  'America/Mexico_City': 'Guadalajara, Mexico City, Monterrey',\n  'America/Belize': 'Central America',\n  'America/Detroit': 'Eastern Time',\n  'America/Bogota': 'Bogota, Lima, Quito',\n  'America/Caracas': 'Caracas, La Paz',\n  'America/Santiago': 'Santiago',\n  'America/St_Johns': 'Newfoundland and Labrador',\n  'America/Sao_Paulo': 'Brasilia',\n  'America/Tijuana': 'Tijuana',\n  'America/Montevideo': 'Montevideo',\n  'America/Argentina/Buenos_Aires': 'Buenos Aires, Georgetown',\n  'America/Godthab': 'Greenland',\n  'America/Los_Angeles': 'Pacific Time',\n  'Atlantic/Azores': 'Azores',\n  'Atlantic/Cape_Verde': 'Cape Verde Islands',\n  GMT: 'UTC',\n  'Europe/London': 'Edinburgh, London',\n  'Europe/Dublin': 'Dublin',\n  'Europe/Lisbon': 'Lisbon',\n  'Africa/Casablanca': 'Casablanca, Monrovia',\n  'Atlantic/Canary': 'Canary Islands',\n  'Europe/Belgrade': 'Belgrade, Bratislava, Budapest, Ljubljana, Prague',\n  'Europe/Sarajevo': 'Sarajevo, Skopje, Warsaw, Zagreb',\n  'Europe/Brussels': 'Brussels, Copenhagen, Madrid, Paris',\n  'Europe/Amsterdam': 'Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',\n  'Africa/Algiers': 'West Central Africa',\n  'Europe/Bucharest': 'Bucharest',\n  'Africa/Cairo': 'Cairo',\n  'Europe/Helsinki': 'Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius',\n  'Europe/Athens': 'Athens',\n  'Asia/Jerusalem': 'Jerusalem',\n  'Africa/Harare': 'Harare, Pretoria',\n  'Europe/Moscow': 'Istanbul, Minsk, Moscow, St. Petersburg, Volgograd',\n  'Asia/Kuwait': 'Kuwait, Riyadh',\n  'Africa/Nairobi': 'Nairobi',\n  'Asia/Baghdad': 'Baghdad',\n  'Asia/Tehran': 'Tehran',\n  'Asia/Dubai': 'Abu Dhabi, Muscat',\n  'Asia/Baku': 'Baku, Tbilisi, Yerevan',\n  'Asia/Kabul': 'Kabul',\n  'Asia/Yekaterinburg': 'Ekaterinburg',\n  'Asia/Karachi': 'Islamabad, Karachi, Tashkent',\n  'Asia/Kolkata': 'Chennai, Kolkata, Mumbai, New Delhi',\n  'Asia/Kathmandu': 'Kathmandu',\n  'Asia/Dhaka': 'Astana, Dhaka',\n  'Asia/Colombo': 'Sri Jayawardenepura',\n  'Asia/Almaty': 'Almaty, Novosibirsk',\n  'Asia/Rangoon': 'Yangon Rangoon',\n  'Asia/Bangkok': 'Bangkok, Hanoi, Jakarta',\n  'Asia/Krasnoyarsk': 'Krasnoyarsk',\n  'Asia/Shanghai': 'Beijing, Chongqing, Hong Kong SAR, Urumqi',\n  'Asia/Kuala_Lumpur': 'Kuala Lumpur, Singapore',\n  'Asia/Taipei': 'Taipei',\n  'Australia/Perth': 'Perth',\n  'Asia/Irkutsk': 'Irkutsk, Ulaanbaatar',\n  'Asia/Seoul': 'Seoul',\n  'Asia/Tokyo': 'Osaka, Sapporo, Tokyo',\n  'Asia/Yakutsk': 'Yakutsk',\n  'Australia/Darwin': 'Darwin',\n  'Australia/Adelaide': 'Adelaide',\n  'Australia/Sydney': 'Canberra, Melbourne, Sydney',\n  'Australia/Brisbane': 'Brisbane',\n  'Australia/Hobart': 'Hobart',\n  'Asia/Vladivostok': 'Vladivostok',\n  'Pacific/Guam': 'Guam, Port Moresby',\n  'Asia/Magadan': 'Magadan, Solomon Islands, New Caledonia',\n  'Asia/Kamchatka': 'Kamchatka, Marshall Islands',\n  'Pacific/Fiji': 'Fiji Islands',\n  'Pacific/Auckland': 'Auckland, Wellington',\n  'Pacific/Tongatapu': \"Nuku'alofa\",\n};\n\n// src/index.tsx\nexport function useTimezoneSelect() {\n  const timezones = allTimezones;\n  const displayValue = 'GMT';\n  const options = useMemo(() => {\n    return Object.entries(timezones).map((zone) => {\n      let _a; let _b; let _c; let\n        _d;\n      try {\n        const now = spacetime.now().goto(zone[0]);\n        const isDstString = now.isDST() ? 'daylight' : 'standard';\n        const tz = now.timezone();\n        const tzStrings = soft(zone[0]);\n        const abbr = (_b = (_a = tzStrings == null ? void 0 : tzStrings[0]) == null ? void 0 : _a[isDstString]) == null ? void 0 : _b.abbr;\n        const altName = (_d = (_c = tzStrings == null ? void 0 : tzStrings[0]) == null ? void 0 : _c[isDstString]) == null ? void 0 : _d.name;\n        const min = tz.current.offset * 60;\n        const hr = `${Math.floor(min / 60)}:${min % 60 === 0 ? '00' : Math.abs(min % 60)}`;\n        const prefix = `(${displayValue}${hr.includes('-') ? hr : `+${hr}`}) ${zone[1]}`;\n        return {\n          value: tz.name,\n          label: prefix,\n          offset: tz.current.offset,\n          abbrev: abbr,\n          altName,\n        };\n      } catch (e) {\n        return null;\n      }\n    }).filter(Boolean).sort((a, b) => a.offset - b.offset) as ITimezoneOption[];\n  }, [timezones]);\n  const findFuzzyTz = (zone:any) => {\n    let _a;\n    let _b;\n    let currentTime;\n    try {\n      currentTime = spacetime.now().goto(zone);\n    } catch (err) {\n      currentTime = spacetime.now().goto('GMT');\n    }\n    return (_b = (_a = options.filter((tz:any) => tz.offset === currentTime.timezone().current.offset).map((tz:any) => {\n      let score = 0;\n      if (currentTime.timezones[tz.value.toLowerCase()] && !!currentTime.timezones[tz.value.toLowerCase()].dst === currentTime.timezone().hasDst) {\n        if (tz.value.toLowerCase().indexOf(currentTime.tz.substring(currentTime.tz.indexOf('/') + 1)) !== -1) {\n          score += 8;\n        }\n        if (tz.label.toLowerCase().indexOf(currentTime.tz.substring(currentTime.tz.indexOf('/') + 1)) !== -1) {\n          score += 4;\n        }\n        if (tz.value.toLowerCase().indexOf(currentTime.tz.substring(0, currentTime.tz.indexOf('/'))) !== -1) {\n          score += 2;\n        }\n        score += 1;\n      } else if (tz.value === 'GMT') {\n        score += 1;\n      }\n      return { tz, score };\n    }).sort((a, b) => b.score - a.score)) == null ? void 0 : _a[0]) == null ? void 0 : _b.tz;\n  };\n  function isObject(item:any) {\n    return typeof item === 'object' && !Array.isArray(item) && item !== null;\n  }\n  const parseTimezone = (zone:ITimezone) => {\n    if (typeof zone === 'string') {\n      return options.find((tz:any) => tz.value === zone) || zone.indexOf('/') !== -1 && findFuzzyTz(zone);\n    } else if (isObject(zone) && !zone.label) {\n      return options.find((tz:any) => tz.value === zone.value);\n    } else {\n      return zone;\n    }\n  };\n  return { options, parseTimezone };\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-console */\n/* eslint-disable no-null/no-null */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport type { Message } from 'ai';\nimport {\n  Button, ConfigProvider, DatePicker, Input,\n  Select,\n  theme,\n} from 'antd';\nimport type { RangePickerProps } from 'antd/es/date-picker';\nimport type { Dayjs } from 'dayjs';\nimport dayjs from 'dayjs';\nimport type { ITimezoneOption } from 'react-timezone-select/dist/index.d';\nimport { getGlobal } from '../../../global';\n\nimport eventEmitter, { Actions } from '../lib/EventEmitter';\nimport { selectTheme } from '../../../global/selectors';\nimport { CloseIcon } from '../icons';\nimport { createGoogleMeet } from '../utils/google-api';\nimport { getAuthState } from '../utils/google-auth';\nimport { useTimezoneSelect } from '../utils/time-zones';\n\nimport CalendarIcon from '../assets/calendar.png';\nimport DefaultAvatar from '../assets/default-avatar.png';\nimport GoogleMeetIcon from '../assets/google-meet.png';\nimport UserIcon from '../assets/user.png';\nimport WriteIcon from '../assets/write.png';\n\nexport const FormLabel = (props: { lable: 'title' | 'time' | 'guests' | 'meet' }) => {\n  const [title, setTitle] = useState('');\n  const [icon, setIcon] = useState('');\n  const { lable: label } = props;\n  useEffect(() => {\n    switch (label) {\n      case 'title':\n        setIcon(WriteIcon);\n        setTitle('Title');\n        break;\n      case 'time':\n        setIcon(CalendarIcon);\n        setTitle('Time');\n        break;\n      case 'guests':\n        setIcon(UserIcon);\n        setTitle('Guests');\n        break;\n      case 'meet':\n        setIcon(GoogleMeetIcon);\n        setTitle('Meeting link');\n        break;\n    }\n  }, [label]);\n  return (\n    <div className=\"flex items-center gap-[8px]\">\n      <img src={icon} alt=\"\" className=\"w-[16px] h-[16px]\" />\n      <span className=\"text-[14px] font-semibold\">{title}</span>\n    </div>\n  );\n};\n\nconst ErrorTip = ({ message }: { message: string }) => {\n  return (\n    <div className=\"text-[12px] leading-[18px] text-red-400\">{message}</div>\n  );\n};\n\nconst EmailItem = ({ email, onDelete }: { email: string; onDelete: (email: string) => void }) => {\n  return (\n    <div className=\"flex items-center gap-[8px] py-[10px]\">\n      <img className=\"w-[24px] h-[24px] rounded-full\" src={DefaultAvatar} alt=\"\" />\n      <span className=\"text-[14px] text-black\">{email}</span>\n      <div\n        className=\"ml-auto cursor-pointer w-[20px] h-[20px] rounded-full text-[#979797] bg-[#F3F3F3] flex items-center justify-center\"\n        onClick={() => onDelete(email)}\n      >\n        <CloseIcon size={14} />\n      </div>\n    </div>\n  );\n};\nconst GoogleEventCreateMessage = ({ message }: { message: Message }) => {\n  const disabledDate: RangePickerProps['disabledDate'] = useCallback((current: dayjs.Dayjs) => {\n    // Can not select days before today and today\n    return current && current < dayjs().startOf('day');\n  }, []);\n  const { options: timeZoneOptions, parseTimezone } = useTimezoneSelect();\n  const { RangePicker } = DatePicker;\n  const [title, setTitle] = useState('');\n  const [email, setEmail] = useState('');\n  const [startDate, setStartDate] = useState<string>('');\n  const [endDate, setEndDate] = useState<string>('');\n  const [emails, setEmails] = useState<string[]>([]);\n  const [emailError, setEmailError] = useState('');\n  const [dateError, setDateError] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [selectedTimezone, setSelectedTimezone] = useState<string>(\n    Intl.DateTimeFormat().resolvedOptions().timeZone,\n  );\n  const global = getGlobal();\n  const themeKey = selectTheme(global);\n  useEffect(() => {\n    console.log('selectedTimezone', selectedTimezone);\n  }, [selectedTimezone]);\n  const validateEmail = (email: string) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n  };\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    if (e.target.value) {\n      setTitleError('');\n    }\n  }, []);\n  const handleTimeZoomChange = useCallback((item: ITimezoneOption) => {\n    setSelectedTimezone(item.value);\n  }, []);\n  const handleTimeChange = useCallback((dates: null | (Dayjs | null)[], dateStrings: string[]) => {\n    if (dates) {\n      console.log('From: ', dates[0], ', to: ', dates[1]);\n      console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n      setStartDate(dateStrings[0]);\n      setEndDate(dateStrings[1]);\n      setDateError('');\n    }\n  }, []);\n  const handleEmailChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(e.target.value);\n  }, []);\n  const handleEmailComplete = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const emailStr = e.target.value;\n    if (!emailStr) {\n      setEmail('');\n      return;\n    }\n    if (validateEmail(emailStr)) {\n      setEmails((prev) => [...prev, emailStr]);\n      setEmail('');\n      setEmailError('');\n    } else {\n      setEmailError('Please enter the correct email address');\n    }\n  }, []);\n  const handleEmailEnter = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    const emailStr = e.currentTarget.value;\n    if (!emailStr) {\n      setEmail('');\n      return;\n    }\n    if (validateEmail(emailStr)) {\n      setEmails((prev) => [...prev, emailStr]);\n      setEmail('');\n      setEmailError('');\n    } else {\n      setEmailError('Please enter the correct email address');\n    }\n  }, []);\n  const handleDeleteEmail = useCallback((email: string) => {\n    setEmails((prev) => prev.filter((item) => item !== email));\n  }, []);\n  const handleSubmit = useCallback(() => {\n    if (isSubmitting) {\n      return;\n    }\n    if (!title) {\n      setTitleError('Please enter the title');\n      return;\n    }\n    if (!startDate || !endDate) {\n      setDateError('Please select the date');\n      return;\n    }\n    if (!emails.length) {\n      setEmailError('Please enter the email');\n      return;\n    }\n    setIsSubmitting(true);\n    const auth = getAuthState();\n    const attendees: { email: string }[] = [];\n    if (emails.length) {\n      emails.forEach((email) => {\n        attendees.push({\n          email,\n        });\n      });\n    }\n    createGoogleMeet({\n      title,\n      startDate: new Date(startDate),\n      endDate: new Date(endDate),\n      selectedTimezone,\n      emails,\n      googleToken: auth?.accessToken!,\n    }).then((res) => {\n      eventEmitter.emit(Actions.CreateCalendarSuccess, {\n        message,\n        response: res,\n      });\n    }).catch((err) => {\n      console.log(err);\n    }).finally(() => {\n      setIsSubmitting(false);\n    });\n  }, [emails, endDate, isSubmitting, message, selectedTimezone, startDate, title]);\n  return (\n    <ConfigProvider theme={{ algorithm: themeKey === 'dark' ? theme.darkAlgorithm : theme.defaultAlgorithm }}>\n      <div className=\"google-event-create-message px-[12px]\">\n        <div className=\"p-[10px] border border-solid border-[#D9D9D9] rounded-[16px] w-[326px] bg-white dark:bg-[#292929] dark:border-[#292929]\">\n          <span className=\"text-[14px] font-semibold mb-[16px]\">Please tell me the event details. </span>\n          <div className=\"flex flex-col gap-[8px] mb-[12px]\">\n            <FormLabel lable=\"title\" />\n            <Input value={title} onChange={handleTitleChange} />\n            {titleError && <ErrorTip message={titleError} />}\n          </div>\n          <div className=\"flex flex-col gap-[8px] mb-[12px]\">\n            <FormLabel lable=\"time\" />\n            <div className=\"flex flex-col items-center gap-[8px]\">\n              <RangePicker\n                disabledDate={disabledDate}\n                presets={[\n                  {\n                    label: <span aria-label=\"Current Time to End of Day\">Now ~ EOD</span>,\n                    value: () => [dayjs(), dayjs().endOf('day')], // 5.8.0+ support function\n                  },\n                ]}\n                showTime\n                format=\"YYYY/MM/DD HH:mm\"\n                onChange={handleTimeChange}\n              />\n              <Select\n                className=\"w-full\"\n                placeholder=\"Please select\"\n                onChange={handleTimeZoomChange}\n                options={timeZoneOptions}\n                value={parseTimezone(selectedTimezone)}\n              />\n            </div>\n            {dateError && <ErrorTip message={dateError} />}\n          </div>\n          <div className=\"flex flex-col gap-[8px] mb-[12px]\">\n            <FormLabel lable=\"guests\" />\n            <Input\n              value={email}\n              onChange={handleEmailChange}\n              onBlur={handleEmailComplete}\n              onPressEnter={handleEmailEnter}\n            />\n            {emailError && <ErrorTip message={emailError} />}\n            {emails.length > 0 && (\n              emails.map((email) => (\n                <EmailItem email={email} key={email} onDelete={handleDeleteEmail} />\n              ))\n            )}\n          </div>\n          <Button\n            type=\"primary\"\n            className=\"!bg-[#8C42F0] w-full\"\n            htmlType=\"submit\"\n            onClick={handleSubmit}\n            loading={isSubmitting}\n            disabled={isSubmitting}\n          >\n            Confirm\n          </Button>\n        </div>\n      </div>\n    </ConfigProvider>\n  );\n};\n\nexport default GoogleEventCreateMessage;\n","/* eslint-disable max-len */\n/* eslint-disable no-console */\n/* eslint-disable no-null/no-null */\nimport React, { useEffect, useRef, useState } from 'react';\nimport type { Message } from 'ai';\nimport { toBlob } from 'html-to-image';\nimport { getGlobal } from '../../../global';\n\nimport { selectUser } from '../../../global/selectors';\nimport { formatMeetingTimeRange } from '../utils/schedule-meeting';\nimport { FormLabel } from './google-event-create-messages';\nimport MessageActionsItems from './message-actions-button';\n\nimport Avatar from '../component/Avatar';\n\nimport SerenaPath from '../assets/serena.png';\nimport ShareHeaderBg from '../assets/share-header-bg.png';\n\nconst GoogleEventDetailMessage = ({ message }: { message: Message }) => {\n  const [messageContent, setMessageContent] = useState<any>(null);\n  const [capturing, setCapturing] = useState(false);\n\n  useEffect(() => {\n    try {\n      const parsedMessage = JSON.parse(message.content);\n      setMessageContent(parsedMessage);\n    } catch (error) {\n      console.error('Error parsing message content:', error);\n    }\n  }, [message]);\n  if (!messageContent) {\n    return null;\n  }\n\n  const contentJSX = (\n    <>\n      <div>\n        <FormLabel lable=\"title\" data-readable />\n        <span className=\"text-[14px]\" data-readable>{messageContent?.summary}</span>\n      </div>\n      <div>\n        <FormLabel lable=\"time\" data-readable />\n        <div className=\"flex flex-col\">\n          <span className=\"text-[14px]\" data-readable>\n            {formatMeetingTimeRange(messageContent.start.dateTime, messageContent.end.dateTime)}\n          </span>\n          <span className=\"text-[14px] text-[#979797]\" data-readable>{messageContent.start.timeZone}</span>\n        </div>\n      </div>\n      {messageContent?.attendees?.length > 0 && (\n        <div>\n          <FormLabel lable=\"guests\" data-readable />\n          {messageContent?.attendees?.map((attendee: any) => (\n            <div className=\"text-[14px]\" key={attendee.email} data-readable>{attendee.email}</div>\n          ))}\n        </div>\n      )}\n      <div>\n        <FormLabel lable=\"meet\" data-readable />\n        <span className=\"text-[14px]\" data-readable>{messageContent?.hangoutLink}</span>\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"px-[12px]\">\n      <div className=\"flex-col gap-[12px] p-[10px] border border-solid  border-[#D9D9D9] rounded-[16px] w-[326px] bg-white dark:bg-[#292929] dark:border-[#292929]\" data-message-container>\n        <div className=\"text-[14px] font-semibold\" data-readable>Event details</div>\n        {contentJSX}\n        <MessageActionsItems\n          canCopy\n          canVoice\n          canShare\n          message={message}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClickShare={() => {\n            setCapturing(true);\n          }}\n        />\n      </div>\n      <ShareCard\n        capturing={capturing}\n        // eslint-disable-next-line react/jsx-no-bind\n        captureCallback={() => {\n          setCapturing(false);\n        }}\n      >\n        {contentJSX}\n      </ShareCard>\n    </div>\n  );\n};\n\nfunction ShareCard({\n  capturing = false,\n  children,\n  captureCallback = () => { },\n}: {\n  capturing: boolean;\n  children?: any;\n  captureCallback?: () => void;\n}) {\n  const domRef = useRef<HTMLDivElement | undefined>(undefined);\n  const global = getGlobal();\n  const { currentUserId } = global;\n  const currentUser = selectUser(global, currentUserId!);\n\n  useEffect(() => {\n    if (domRef.current) {\n      setTimeout(() => {\n        toBlob(domRef.current!, {\n          width: 330,\n          pixelRatio: 2, // Higher pixel ratio for better quality\n          quality: 1, // Maximum quality\n        })\n          .then((blob) => {\n            // return 123;\n            const file = new File([blob!], 'telegpt.org.png', { type: 'image/png' });\n            // @ts-ignore\n            globalThis?.p__handleFileSelect?.([file], true);\n            captureCallback();\n          });\n      }, 100);\n    }\n  }, [capturing, captureCallback]);\n\n  if (!capturing) return null;\n\n  return (\n    <div className=\"fixed top-0 left-0 translate-x-[-1000000px] translate-y-[-100000px]\">\n      <div\n        ref={domRef}\n        className=\"relative w-[330px] box-content overflow-hidden bg-white text-black\"\n      >\n        <div className=\"absolute top-0 left-0 w-full blur-xl pointer-events-none\">\n          <img src={ShareHeaderBg} alt=\"\" className=\"w-full\" />\n        </div>\n        <div className=\"relative py-3 px-4 flex flex-col gap-2\">\n          <div className=\"flex flex-row justify-end items-center gap-2 text-xs text-[#979797]\">\n            <Avatar\n              className=\"w-[20px] h-[20px]\"\n              peer={currentUser}\n            />\n            <span>{currentUser?.firstName}</span>\n            <span>{currentUser?.lastName}</span>\n          </div>\n          <div className=\"text-[20px] font-bold\">Meeting Invitation</div>\n          {children}\n        </div>\n        <section className=\"flex flex-row gap-1 items-center justify-center py-2 text-xs bg-[#F7FAFF]\">\n          <img className=\"inline w-[20px] h-[20px] rounded-full\" src={SerenaPath} alt=\"Serena\" />\n          Powered by\n          <span className=\"text-[#2996FF]\">telepgt.org</span>\n        </section>\n      </div>\n    </div>\n\n  );\n}\n\nexport default GoogleEventDetailMessage;\n","import React, {\n  useCallback,\n} from 'react';\nimport { Button, message as showMessage } from 'antd';\n\nimport eventEmitter, { Actions } from '../lib/EventEmitter';\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport { loginWithGoogle } from '../utils/google-api';\nimport { setAuthState } from '../utils/google-auth';\n\nimport GoogleIcon from '../assets/google.png';\n\ninterface IProps {\n  deleteMessage: () => void;\n}\n\nconst GoogleLoginAuthMessage = (props:IProps) => {\n  const { deleteMessage } = props;\n\n  const handleAuth = useCallback(() => {\n    if (IS_ELECTRON) {\n      window.electron!.googleLogin().then((res) => {\n        const authState = {\n          isLoggedIn: true,\n          accessToken: res.access_token,\n          idToken: res.id_token,\n          grantedScopes: res.scope,\n          expiresAt: res.expiry_date,\n        };\n        setAuthState(authState);\n        eventEmitter.emit(Actions.GoogleAuthSuccess);\n        deleteMessage();\n      }).catch((error) => {\n        console.error('Google login failed:', error);\n      });\n    } else {\n      loginWithGoogle().then((authState) => {\n        console.log(authState);\n        eventEmitter.emit(Actions.GoogleAuthSuccess);\n        deleteMessage();\n      }).catch((error) => {\n        console.error('Google login failed:', error);\n        showMessage.info('Google login failed');\n      });\n    }\n  }, [deleteMessage]);\n\n  return (\n    <div className=\"px-[12px]\">\n      <div className=\"p-[10px] border-solid border-[#D9D9D9] rounded-[16px] w-[316px] bg-white dark:bg-[#292929]\">\n        <span>This service requires access to your Google Calendar.</span>\n        <Button\n          className=\"w-auto mt-[4px] flex items-center cursor-pointer hover:opacity-80 hover:!bg-[#F3F3F3]  gap-[8px] bg-[#F3F3F3] px-[12px] py-[10px] rounded-[6px] dark:!bg-[#383838] h-[36px] border-none\"\n          onClick={handleAuth}\n        >\n          <img src={GoogleIcon} alt=\"\" className=\"w-[16px] h-[16px]\" />\n          <span className=\"text-[var(--color-text)]\">Google authorization</span>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default GoogleLoginAuthMessage;\n","/* eslint-disable max-len */\n/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport type { Message } from 'ai';\nimport { getActions, getGlobal } from '../../../global';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ChataiStores } from '../store';\nimport { parseMessage2StoreMessage } from '../store/messages-store';\nimport { userInformationCollection } from '../utils/user-information-collection';\n\nconst GoogleMeetInformationSuggestMessage = ({ message }:{ message:Message }) => {\n  const {\n    chatId, messageId, emailConfirmed, calendlyConfirmed, suggestType,\n  } = JSON.parse(message.content) || {};\n  const [mergeEmailConfirmed, setMergeEmailConfirmed] = useState(emailConfirmed);\n  const [mergeCalendlyConfirmed, setMergeCalendlyConfirmed] = useState(calendlyConfirmed);\n  const { emails, calendlyUrls } = userInformationCollection.informations;\n  const global = getGlobal();\n  const renderName = () => {\n    const user = selectUser(global, chatId);\n    const fullName = user ? getUserFullName(user) : '';\n    return fullName;\n  };\n  const handleCalendlyUrlClick = (url:string) => {\n    if (mergeCalendlyConfirmed) {\n      return;\n    }\n    getActions().sendMessage({\n      messageList: {\n        chatId,\n        threadId: '-1',\n        type: 'thread',\n      },\n      text: url,\n    });\n    setMergeCalendlyConfirmed(true);\n    message.content = JSON.stringify({\n      chatId,\n      messageId,\n      emailConfirmed,\n      calendlyConfirmed: true,\n      suggestType,\n    });\n    ChataiStores?.message?.storeMessage(parseMessage2StoreMessage(chatId, [message])[0]);\n  };\n\n  const handleEmailClick = (email:string) => {\n    if (mergeEmailConfirmed) {\n      return;\n    }\n    getActions().sendMessage({\n      messageList: {\n        chatId,\n        threadId: '-1',\n        type: 'thread',\n      },\n      text: email,\n    });\n    setMergeEmailConfirmed(true);\n    message.content = JSON.stringify({\n      chatId,\n      messageId,\n      emailConfirmed: true,\n      calendlyConfirmed,\n      suggestType,\n    });\n    ChataiStores?.message?.storeMessage(parseMessage2StoreMessage(chatId, [message])[0]);\n  };\n\n  if (suggestType === 'both' && !calendlyUrls.length && !emails.length) {\n    return undefined;\n  } else if (suggestType === 'email' && !emails.length) {\n    return undefined;\n  } else if (suggestType === 'time' && !calendlyUrls.length) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"px-[12px] text-[15px]\">\n      <div\n        className=\"p-[10px] border border-solid border-[#D9D9D9] rounded-[16px] w-full bg-white dark:bg-[#292929] dark:border-[#292929]\"\n      >\n        <p>\n          🔔 {renderName()} would like to schedule a meeting with you. Would you like to send your calendar link or email address?\n        </p>\n        <ul className=\"list-disc pl-[18px] mb-[4px]\">\n          {(suggestType === 'both' || suggestType === 'time') && calendlyUrls.length > 0 && (\n            <>\n              {calendlyUrls.map((url: any) => {\n                return (\n                  <li className=\"word-break break-all\">\n                    <b>Calendar:</b>{url}\n                    {!mergeCalendlyConfirmed && (\n                      <span\n                        className=\"mx-[2px] outline-none border-none focus:outline-none focus:ring-0 underline decoration-2\"\n                        onClick={() => handleCalendlyUrlClick(url)}\n                      >\n                        Send👉\n                      </span>\n                    )}\n                  </li>\n                );\n              })}\n            </>\n          )}\n          {(suggestType === 'both' || suggestType === 'email') && emails.length > 0 && (\n            <>\n              {emails.map((email: any) => {\n                return (\n                  <li className=\"word-break break-all\">\n                    <b>Email:</b>{email}\n                    {!mergeEmailConfirmed && (\n                      <span\n                        className=\"mx-[2px] outline-none border-none focus:outline-none focus:ring-0 underline decoration-2\"\n                        onClick={() => handleEmailClick(email)}\n                      >\n                        Send👉\n                      </span>\n                    )}\n\n                  </li>\n                );\n              })}\n            </>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default GoogleMeetInformationSuggestMessage;\n","/* eslint-disable max-len */\n/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport type { Message } from 'ai';\nimport cx from 'classnames';\nimport { getGlobal } from '../../../global';\n\nimport { getMessageContent, getUserFullName, hasMessageText } from '../../../global/helpers';\nimport { selectChatLastMessageId, selectChatMessage, selectUser } from '../../../global/selectors';\nimport { ChataiStores } from '../store';\nimport { parseMessage2StoreMessage } from '../store/messages-store';\nimport { createAuthConfirmModal } from '../utils/google-api';\nimport { getAuthState, isTokenValid } from '../utils/google-auth';\nimport ScheduleMeeting from '../utils/schedule-meeting';\n\nconst GoogleMeetMentionMessage = ({ message }:{ message:Message }) => {\n  const { chatId, messageId, isConfirmed } = JSON.parse(message.content) || {};\n  const [mergeConfirmed, setMergeConfirmed] = useState(isConfirmed);\n\n  const renderName = () => {\n    const global = getGlobal();\n    const user = selectUser(global, chatId);\n    const fullName = user ? getUserFullName(user) : '';\n    return fullName;\n  };\n\n  const handleConfirm = () => {\n    const global = getGlobal();\n    // TODO: get meeting info from recent message\n    let messageString = '';\n    const chatLastMessageId = selectChatLastMessageId(global, chatId) || 0;\n    for (let i = messageId; i <= chatLastMessageId; i++) {\n      const messageItem = selectChatMessage(global, chatId, i);\n      if (messageItem && hasMessageText(messageItem) && !messageItem.isOutgoing) {\n        const text = getMessageContent(messageItem).text?.text;\n        messageString += `;${text}`;\n      }\n    }\n    const scheduleMeeting = ScheduleMeeting.create({ chatId });\n    scheduleMeeting.start({\n      chatId,\n      text: messageString,\n    });\n    setMergeConfirmed(true);\n    message.content = JSON.stringify({\n      chatId,\n      messageId,\n      isConfirmed: true,\n    });\n    ChataiStores?.message?.storeMessage(parseMessage2StoreMessage(chatId, [message])[0]);\n  };\n  const handleClick = () => {\n    if (mergeConfirmed) {\n      return;\n    }\n    if (!chatId || !messageId) {\n      return;\n    }\n\n    const auth = getAuthState();\n    if (!auth || !isTokenValid(auth)) {\n      createAuthConfirmModal({\n        onOk: () => {\n          handleConfirm();\n        },\n      });\n    } else {\n      handleConfirm();\n    }\n  };\n\n  return (\n    <div className=\"px-[12px] text-[15px]\">\n      <div\n        className=\"p-[10px] border border-solid border-[#D9D9D9] rounded-[16px] w-full bg-white dark:bg-[#292929] dark:border-[#292929]\"\n      >\n        <div>\n          🔔 I noticed that {renderName()} wants to schedule a meeting with you. Would you like me to help set it up?\n        </div>\n        <div>\n          👉 Click\n          <span\n            className={cx('mx-[2px] outline-none border-none focus:outline-none focus:ring-0', {\n              'underline decoration-2': !mergeConfirmed,\n            })}\n            onClick={handleClick}\n          >\n            \"Yes\"\n          </span>\n          to proceed, or ignore this message.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GoogleMeetMentionMessage;\n","/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport type { Message } from '@ai-sdk/react';\nimport cx from 'classnames';\nimport { getActions } from '../../../global';\n\nimport type { ICreateMeetResponse } from '../utils/google-api';\n\nimport { ChataiStores } from '../store';\nimport { parseMessage2StoreMessage } from '../store/messages-store';\nimport { createAuthConfirmModal, createGoogleMeet } from '../utils/google-api';\nimport { getAuthState, isTokenValid } from '../utils/google-auth';\nimport ScheduleMeeting, { formatMeetingTimeRange } from '../utils/schedule-meeting';\n\nconst GoogleMeetTimeConfirmMessage = ({ message }: { message: Message }) => {\n  const { content } = message;\n  const {\n    chatId, date, email, isConfirmed,\n  } = JSON.parse(content || '{}') || {};\n  const [mergeConfirmed, setMergeConfirmed] = useState(isConfirmed);\n  const handleCreateGoogleMeet = ({\n    token,\n    start,\n    end,\n    email,\n  }: {\n    token: string;\n    start: string;\n    end: string;\n    email: string[];\n  }) => {\n    createGoogleMeet({\n      startDate: new Date(start),\n      endDate: new Date(end),\n      selectedTimezone: Intl.DateTimeFormat().resolvedOptions().timeZone, // Add timezone\n      emails: email,\n      googleToken: token,\n    }).then((createMeetResponse: ICreateMeetResponse) => {\n      // console.log('createMeetResponse', createMeetResponse);\n      if (createMeetResponse) {\n        const eventMessage = `Event details \\n📝 Title\\n${createMeetResponse.summary}\\n👥 Guests\\n${createMeetResponse.attendees.map((attendee) => attendee.email).join('\\\\n')}\\n📅 Time\\n${formatMeetingTimeRange(createMeetResponse.start.dateTime, createMeetResponse.end.dateTime)}\\n${createMeetResponse.start.timeZone}\\n🔗 Meeting link\\n${createMeetResponse.hangoutLink}\n            `;\n        getActions().sendMessage({\n          messageList: {\n            chatId,\n            threadId: '-1',\n            type: 'thread',\n          },\n          text: eventMessage,\n        });\n      }\n    });\n  };\n  const handleTimeSelect = (time: { start: string; end: string }) => {\n    if (mergeConfirmed) {\n      return;\n    }\n    if (email.length > 0) {\n      const auth = getAuthState();\n      if (!auth || !isTokenValid(auth)) {\n        createAuthConfirmModal({\n          onOk: (accessToken: string) => {\n            handleCreateGoogleMeet({\n              token: accessToken,\n              start: time.start,\n              end: time.end,\n              email,\n            });\n          },\n        });\n      } else {\n        handleCreateGoogleMeet({\n          token: auth.accessToken!,\n          start: time.start,\n          end: time.end,\n          email,\n        });\n      }\n    } else {\n      const scheduleMeeting = ScheduleMeeting.create({ chatId, date: [time], hasConfirmed: true });\n      const auth = getAuthState();\n      if (!auth || !isTokenValid(auth)) {\n        createAuthConfirmModal({\n          onOk: () => {\n            scheduleMeeting.start();\n          },\n        });\n      } else {\n        scheduleMeeting.start();\n      }\n    }\n    message.content = JSON.stringify({\n      chatId,\n      date,\n      email,\n      isConfirmed: true,\n    });\n    ChataiStores?.message?.storeMessage(parseMessage2StoreMessage(chatId, [message])[0]);\n    setMergeConfirmed(true);\n  };\n\n  return (\n    <div className=\"px-[12px] text-[14px]\">\n      <div className=\"p-[10px] border border-solid border-[#D9D9D9] rounded-[16px] w-[326px] bg-white dark:bg-[#292929] dark:border-[#292929]\">\n        <div>\n          📅 I’ve checked your calendar. Here are some available time slots in the coming days:\n        </div>\n        <ul className=\"list-decimal pl-[18px] mb-[4px]\">\n          {date && date.map((item: any) => {\n            return (\n              <li>\n                <div\n                  className={cx('font-semibold cursor-pointer bg-transparent border-none p-0', {\n                    'underline decoration-2': !mergeConfirmed,\n                  })}\n                  onClick={() => handleTimeSelect(item)}\n                >\n                  {formatMeetingTimeRange(item.start, item.end)}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n        <div>\n          <span>Which time would you like to choose? Or 📆 </span>\n          <a\n            href=\"https://calendar.google.com/\"\n            target=\"_blank\"\n            className=\"underline decoration-2 font-semibold\"\n            rel=\"noreferrer\"\n          >\n            View Full Calendar\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GoogleMeetTimeConfirmMessage;\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\nimport React, { useEffect, useState } from 'react';\nimport type { Message } from 'ai';\nimport { getActions, getGlobal } from '../../../global';\n\nimport { getChatTitle } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport useOldLang from '../hook/useOldLang';\n\nimport Avatar from '../component/Avatar';\nimport { isUserId } from '../../../util/entities/ids';\n\nexport const GroupSearchMessage = ({ message }: { message: Message }) => {\n  const [chatIds, setChatIds] = useState<string[]>([]);\n  const global = getGlobal();\n  const lang = useOldLang();\n\n  const handleClick = (chatId: string) => {\n    const chat = selectChat(global, chatId);\n    if (chat) {\n      getActions().openChat({ id: chatId });\n    }\n  };\n  const renderChatAvatar = (chatId: string) => {\n    if (isUserId(chatId)) {\n      return null;\n    }\n    let membersCount:number;\n    let title:string;\n    const chat = selectChat(global, chatId);\n    if (chat) {\n      membersCount = chat?.membersCount as number;\n      title = getChatTitle(lang, chat);\n    } else {\n      return null;\n    }\n    return (\n      <div\n        className=\"flex flex-row items-center gap-[8px] cursor-pointer px-[12px] py-[8px] rounded-[12px] hover:bg-[#D9D9D9]\"\n        onClick={() => { handleClick(chatId); }}\n      >\n        <Avatar\n          key={chatId}\n          className=\"overlay-avatar inline-block cursor-pointer\"\n          size={44}\n          peer={chat}\n        />\n        <div className=\"flex flex-col justify-center gap-[4px]\">\n          <span className=\"text-[15px] font-semibold text-black leading-[18px]\">{title}</span>\n          <span className=\"text-[14px] text-[#5E6272] leading-[18px]\">{membersCount} Members</span>\n        </div>\n      </div>\n    );\n  };\n  useEffect(() => {\n    try {\n      const ids = JSON.parse(message.content);\n      setChatIds(ids || []);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }, [message]);\n  if (chatIds.length === 0) {\n    return <span>未找到相关群组</span>;\n  }\n  return (\n    <div className=\"p-[10px] mx-[22px] rounded-[16px] border-[1px] border-[#D9D9D9] bg-white dark:bg-[#292929]\">\n      <div className=\"flex flex-col gap-[12px]\">\n        {chatIds.splice(0, 10).map((id) => {\n          return (\n            <>\n              {renderChatAvatar(id)}\n            </>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport ActionsBg from '../assets/summary-introduce/actions.png';\n\nconst listStyle = 'text-[15px] text-[var(--color-text)]';\nconst IntroduceActionsMessage = () => {\n  return (\n    <div className=\"rounded-[16px] w-[488px] bg-[var(--color-background)]\">\n      <img src={ActionsBg} alt=\"\" className=\"w-[490px] h-[259px]\" />\n      <div className=\"py-[14px] px-[12px]\">\n        <h3>✅  Action Items</h3>\n        <p className={listStyle}>\n          During message summarization, the AI assistant automatically identifies actionable tasks and follow-ups from your chats. No need to take notes—your to-do list is generated in real time, helping you stay organized and never miss a beat.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default IntroduceActionsMessage;\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport ScheduleMeetBg from '../assets/summary-introduce/schedule-meeting.png';\n\nconst listStyle = 'text-[15px] text-[var(--color-text)]';\nconst IntroduceMeetingMessage = () => {\n  return (\n    <div className=\"rounded-[16px] w-[488px] bg-[var(--color-background)]\">\n      <img src={ScheduleMeetBg} alt=\"\" className=\"w-[490px] h-[259px]\" />\n      <div className=\"py-[14px] px-[12px]\">\n        <h3>🔥 Meeting Scheduler 🔥</h3>\n        <ul className=\"pl-[24px] list-disc\">\n          <li className={listStyle}>\n            Automatic Detection & Smart Coordination\n            The AI assistant instantly recognizes meeting-related messages, asks for time, participants, and other details—all through natural chat flow.\n          </li>\n          <li className={listStyle}>\n            Instant Invite Delivery\n            Once confirmed, it auto-generates and sends calendar invites, keeping everyone in sync without ever leaving the conversation.\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default IntroduceMeetingMessage;\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport SummaryBg from '../assets/summary-introduce/summarize.png';\n\nconst listStyle = 'text-[15px] text-[var(--color-text)]';\nconst IntroduceSummaryMessage = () => {\n  return (\n    <div className=\"rounded-[16px] w-[488px] bg-[var(--color-background)]\">\n      <img src={SummaryBg} alt=\"\" className=\"w-[490px] h-[259px]\" />\n      <div className=\"py-[14px] px-[12px]\">\n        <h3>🔥 Message Summarization 🔥</h3>\n        <p className={listStyle}>\n          The Message Summarization feature uses AI to automatically extract key content from IM conversations and periodically generate summary reports. It helps users efficiently grasp important group updates, improve information retrieval, and avoid missing critical messages.\n        </p>\n        <h3>🔑 Key Capabilities:</h3>\n        <ul className=\"pl-[24px] list-disc\">\n          <li className={listStyle}>\n            🔍 Automatically extracts topics, key figures, time references, and user insights from chat messages\n          </li>\n          <li className={listStyle}>\n            🧠 Intelligently identifies and groups content by chat, ensuring clarity and structure\n          </li>\n          <li className={listStyle}>\n            🕒 Automatically generates summary reports during active hours, adapting to peak and off-peak periods\n          </li>\n          <li className={listStyle}>\n            🎯 Supports personalized summary customization, allowing users to focus on specific chats or content types\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default IntroduceSummaryMessage;\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport SummaryBg from '../assets/summary-introduce/summarize.png';\n\nconst listStyle = 'text-[15px] text-[var(--color-text)]';\nconst IntroduceTranslationMessage = () => {\n  return (\n    <div className=\"rounded-[16px] w-[488px] bg-[var(--color-background)]\">\n      <img src={SummaryBg} alt=\"\" className=\"w-[490px] h-[259px]\" />\n      <div className=\"py-[14px] px-[12px]\">\n\n        <h3>🔥 Real-time Translation 🔥</h3>\n        <ul className=\"pl-[24px] list-disc\">\n          <li className={listStyle}>\n            <b>Instant Translation While Typing:</b> Automatically detects the source language and translates it into the target language in real time.\n          </li>\n          <li className={listStyle}>\n            <b>Multi-language Support:</b> Covers major languages, including English, Chinese, Japanese, French, German, Spanish, and more.\n          </li>\n          <li className={listStyle}>\n            <b>Context-aware Translation:</b> Enhances accuracy and fluency by leveraging message context and chat history.\n          </li>\n        </ul>\n        <h3>🔥 Grammar & Style Check 🔥</h3>\n        <ul className=\"pl-[24px] list-disc\">\n          <li className={listStyle}>\n            <b>Automatic Error Detection:</b> Identifies spelling, grammar, and sentence structure issues.\n          </li>\n          <li className={listStyle}>\n            <b>Expression Optimization:</b> Suggests more natural and professional phrasing suitable for business or formal messages.\n          </li>\n          <li className={listStyle}>\n            <b>Multilingual Correction:</b> Supports grammar checks not only in English but also in other languages, such as Chinese.\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default IntroduceTranslationMessage;\n","/* eslint-disable @stylistic/max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable no-console */\nimport React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nimport type { Message } from 'ai';\nimport { getGlobal } from '../../../global';\n\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { isUserId } from '../../../util/entities/ids';\nimport { cn, formatTimestamp } from '../utils/util';\nimport MessageActionsItems from './message-actions-button';\n\nimport Avatar from '../component/Avatar';\nimport ErrorBoundary from '../ErrorBoundary';\n\nimport ActionsIcon from '../assets/actions.png';\nimport CalendarIcon from '../assets/calendar.png';\nimport CheckIcon from '../assets/check.png';\nimport MessageIcon from '../assets/message.png';\nimport UserIcon from '../assets/user.png';\n\ninterface IProps {\n  message: Message;\n}\ninterface ISummaryInfo {\n  summaryTime: number;\n  messageCount: number;\n  userIds: Array<string>;\n}\n\ninterface ISummaryPendingItem {\n  summary: string;\n  relevantMessageIds: number[];\n}\n\nconst ChatAvatar = ({\n  chatId, classNames, size, style,\n}: { chatId: string; classNames?: string; size: number; style?: Record<string, string> }) => {\n  if (!chatId) return null;\n  const global = getGlobal();\n  let peer;\n  if (isUserId(chatId)) {\n    peer = selectUser(global, chatId);\n  } else {\n    peer = selectChat(global, chatId);\n  }\n\n  return (\n    <Avatar\n      style={style}\n      key={chatId}\n      className={cn(classNames, 'overlay-avatar inline-block cursor-pointer')}\n      size={size}\n      peer={peer}\n    />\n  );\n};\n\nconst SummaryPenddingItem = ({ pendingItem }: { pendingItem: ISummaryPendingItem }) => {\n  return (\n    <ErrorBoundary>\n      <div className=\"flex gap-[8px] my-[4px] cursor-pointer\">\n        <img className=\"w-[18px] h-[18px] mt-[2px]\" src={CheckIcon} alt=\"\" />\n        <span className=\"text-[15px]\" data-readable>{pendingItem.summary}</span>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nconst ActionsItems = ({\n  messageId,\n}: {\n  messageId: string;\n}) => {\n  return (\n    <MessageActionsItems\n      canCopy\n      canVoice\n      message={{ id: messageId } as Message}\n    />\n  );\n};\n\nconst ActionInfoContent = ({ summaryInfo }: { summaryInfo: ISummaryInfo }) => {\n  return (\n    <ErrorBoundary>\n      <div>\n        <p className=\"flex items-center gap-[8px] mb-[16px]\">\n          <span className=\"text-[18px] font-bold\" data-readable>Actions Items</span>\n          <img className=\"w-[16px] h-[16px]\" src={ActionsIcon} alt=\"\" />\n        </p>\n        <div className=\"flex items-center gap-[20px]\">\n          <p className=\"flex items-center gap-[8px]\">\n            <img className=\"w-[16px] h-[16px]\" src={CalendarIcon} alt=\"\" />\n            <div className=\"flex items-center gap-[4px]\">\n              <span className=\"mr-[4px] font-bold text-[14px]\" data-readable-inline>Time:</span>\n              {summaryInfo?.summaryTime ? (\n                <p className=\"text-[14px] text-[#A8A6AC]\" data-readable-inline>\n                  {formatTimestamp(summaryInfo.summaryTime)}\n                </p>\n              ) : null}\n            </div>\n          </p>\n          <p className=\"flex items-center gap-[8px]\">\n            <img className=\"w-[16px] h-[16px]\" src={MessageIcon} alt=\"\" />\n            <div className=\"flex items-center gap-[4px]\">\n              <span className=\"font-bold text-[14px]\" data-readable-inline>Messages:</span>\n              {summaryInfo?.messageCount ? (\n                <span data-readable-inline>{summaryInfo?.messageCount}</span>\n              ) : null}\n            </div>\n          </p>\n        </div>\n        {summaryInfo?.userIds ? (\n          <div className=\"flex items-center gap-[8px] mb-[18px]\">\n            <img className=\"w-[16px] h-[16px]\" src={UserIcon} alt=\"\" />\n            <span className=\"font-bold text-[14px]\" data-readable>Groups/friends: </span>\n            <div className=\"flex items-center\">\n              {summaryInfo.userIds.slice(0, 5).map((id: string, index: number) => {\n                return (\n                  <ChatAvatar\n                    style={{ zIndex: `${String(summaryInfo.userIds.length - index)};` }}\n                    chatId={id}\n                    size={24}\n                    classNames=\"summary-avatar-group !border-solid-[2px] !border-white ml-[-4px]\"\n                    key={id}\n                  />\n                );\n              })}\n              {summaryInfo.userIds.length > 10 ? (\n                <div className=\"w-[24px] h-[24px] rounded-full bg-[#979797] text-[12px] whitespace-nowrap flex items-center justify-center\" data-readable>\n                  {summaryInfo.userIds.length - 10}\n                  +\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nconst RoomActionMessage = (props: IProps) => {\n  const { message } = props;\n  const [summaryInfo, setSummaryInfo] = useState<ISummaryInfo | null>(null);\n  const [pendingMatters, setPendingMatters] = useState<ISummaryPendingItem[]>([]);\n  const parseMessage = useCallback((messageContent: string) => {\n    const messageObj = JSON.parse(messageContent);\n    const { pendingMatters, summaryInfo } = messageObj;\n    if (pendingMatters) {\n      setPendingMatters(pendingMatters as ISummaryPendingItem[]);\n    }\n    if (summaryInfo) {\n      setSummaryInfo(summaryInfo as ISummaryInfo);\n    }\n  }, []);\n  useEffect(() => {\n    try {\n      parseMessage(message.content);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [message, parseMessage]);\n  if (!summaryInfo) {\n    return null;\n  }\n  return (\n    <div className=\"px-[12px] w-full\">\n      {(!pendingMatters.length) ? null : (\n        <div className=\"mx-auto rounded-[10px] px-3 py-2 bg-white dark:bg-[#292929]\" data-message-container>\n          {/* summary info  */}\n          {summaryInfo && <ActionInfoContent summaryInfo={summaryInfo} />}\n          {/* pending actions  */}\n          {pendingMatters.length > 0 && (\n            <div>\n              {pendingMatters.map((item) => (<SummaryPenddingItem pendingItem={item} />))}\n            </div>\n          )}\n          {/* action buttons  */}\n          <ActionsItems messageId={message.id} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoomActionMessage;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport type { Message } from '@ai-sdk/react';\nimport { getGlobal } from '../../../global';\n\nimport eventEmitter, { Actions } from '../lib/EventEmitter';\nimport { selectChat } from '../../../global/selectors';\n\nconst actionItemClassName = 'h-[40px] w-fit px-[12px] py-[8px] rounded-[6px] bg-[#F5F1FF] text-[14px] text-[var(--color-text)] dark:bg-[#383838]';\n\nconst RoomAIDescriptionMessage = ({ message }:{ message:Message }) => {\n  const { content: chatId } = message;\n  const global = getGlobal();\n  const chat = selectChat(global, chatId);\n  const handleSummarize = () => {\n    eventEmitter.emit(Actions.RoomAIActions, {\n      chatId,\n      action: 'summary',\n    });\n  };\n  const handleScheduleMeeting = () => {\n    eventEmitter.emit(Actions.RoomAIActions, {\n      chatId,\n      action: 'schedule-meet',\n    });\n  };\n  const handleActionItems = () => {\n    eventEmitter.emit(Actions.RoomAIActions, {\n      chatId,\n      action: 'todo',\n    });\n  };\n  const handleNewFeature = () => {\n    eventEmitter.emit(Actions.RoomAIActions, {\n      chatId,\n      action: 'new-feature',\n    });\n  };\n  return (\n    <div className=\"px-[12px]\">\n      <div className=\"px-3 py-2 rounded-xl text-[var(--color-text)] bg-white dark:bg-[#292929]\">\n        <p className=\"text-[14px]\">\n          👋 Hi, welcome to 【{chat?.title}】!\n          I’m Tely AI 🤖, your smart assistant here.\n        </p>\n        <div className=\"mt-[0.5rem]\">\n          <h3 className=\"text-[14px] font-semibold\">🚀 Here’s what I can help you with:</h3>\n          <div className=\"flex flex-col gap-[8px] mt-[0.5rem]\">\n            <div className={actionItemClassName} onClick={handleSummarize}>\n              🧠 Chat Summary\n            </div>\n            <div className={actionItemClassName} onClick={handleScheduleMeeting}>\n              📅 Schedule Meeting\n            </div>\n            <div className={actionItemClassName} onClick={handleActionItems}>\n              ✅ Action Items\n            </div>\n            <div className={actionItemClassName} onClick={handleNewFeature}>\n              🔍 Group Search\n            </div>\n            <div className={actionItemClassName} onClick={handleNewFeature}>\n              👮 User Portrait\n            </div>\n            <div className={actionItemClassName} onClick={handleNewFeature}>\n              🎯 Project Tracking\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-[0.5rem]\">\n          <h3 className=\"text-[14px] font-semibold\">📍 You can ask me things like:</h3>\n          <ul className=\"list-disc pl-[24px] text-[14px] text-[var(--color-text)]\">\n            <li>What was discussed in the group yesterday?</li>\n            <li>\n              Has there been any mention of client feedback in the group?\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomAIDescriptionMessage;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Message } from \"ai\";\nimport { SVGProps } from \"react\";\nimport { ThinkingMessage } from \"../message\";\nimport buildClassName from \"../../../util/buildClassName\";\nimport { ApiMediaFormat, ApiMessage } from \"../../../api/types\";\nimport { getPhotoMediaHash, isOwnMessage } from \"../../../global/helpers\";\nimport { getActions, getGlobal } from \"../../../global\";\nimport { selectTheme } from \"../../../global/selectors\";\nimport { useWaveformCanvas } from \"../../common/Audio\";\nimport useMedia from \"../hook/useMedia\";\nimport { MediaViewerOrigin } from \"../../../types\";\nimport SerenaPath from \"../../chatAssistant/assets/serena.png\";\nimport { checkIsImage, checkIsUrl } from \"../utils/ai-analyse-message\";\nimport MessageActionsItems from \"./message-actions-button\";\n\ntype IProps = {\n  message: Message;\n};\n\nexport type MessageStatus = \"loading\" | \"success\" | \"error\";\n\nconst RoomAIMediaMessage: React.FC<IProps> = (props) => {\n  const global = getGlobal();\n  const theme = selectTheme(global);\n\n  let content: any = {};\n  let message: ApiMessage | undefined = undefined;\n  let summaryInfo: any = undefined;\n  let isAuto: boolean = false;\n  let status: MessageStatus = \"loading\";\n  try {\n    content = JSON.parse(props?.message.content);\n    message = content?.message;\n    try {\n      summaryInfo = JSON.parse(content?.summaryInfo);\n    } catch (error) { }\n    isAuto = content?.isAuto;\n    status = content?.status;\n  } catch (error) { }\n\n  const isOwn = message ? isOwnMessage(message) : false;\n  const waveformCanvasRef = message?.content?.voice\n    ? useWaveformCanvas(theme, message?.content?.voice, 1, isOwn)\n    : undefined;\n\n  const imgBlobUrl = message?.content?.photo\n    ? useMedia(\n      message?.content?.photo\n        ? getPhotoMediaHash(message?.content?.photo, \"inline\")\n        : undefined,\n      false,\n      ApiMediaFormat.BlobUrl\n    )\n    : undefined;\n  const fullMediaData = message?.content?.photo?.blobUrl || imgBlobUrl;\n  const forcedWidth = message?.content?.photo?.thumbnail?.width;\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  function getType() {\n    if (!message) return \"\";\n\n    const { webPage, photo, document, audio, voice, video } = message?.content;\n    const isUrl = checkIsUrl(message?.content?.text?.text);\n    const isImage = document ? checkIsImage(document?.mimeType) : false;\n    if (webPage || isUrl) {\n      return \"website page\";\n    } else if (photo || isImage) {\n      return \"image\";\n    } else if (document) {\n      return \"file\";\n    } else if (audio) {\n      return \"audio\";\n    } else if (voice) {\n      return \"voice\";\n    } else if (video) {\n      return \"video\";\n    }\n  }\n\n  function onPreviewClick() {\n    const { openMediaViewer } = getActions();\n\n    openMediaViewer({\n      chatId: message?.chatId,\n      threadId: -1,\n      messageId: message?.id,\n      origin: MediaViewerOrigin.Inline,\n      withDynamicLoading: true,\n    });\n  }\n\n  function renderMessageContent() {\n    if (!message) return \"\";\n\n    const { webPage, photo, document, audio, voice, video } = message?.content;\n    const isUrl = checkIsUrl(message?.content?.text?.text);\n    if (webPage || isUrl) {\n      return (\n        <div className={buildClassName(\"flex\", !isAuto ? \"justify-end\" : \"\")}>\n          <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[var(--color-text)] break-all\">\n            {webPage\n              ? message?.content?.webPage?.url\n              : message?.content?.text?.text}\n          </div>\n        </div>\n      );\n    } else if (photo) {\n      return (\n        fullMediaData && (\n          <div className={buildClassName(\"flex\", !isAuto ? \"justify-end\" : \"\")}>\n            <img\n              src={fullMediaData}\n              className={buildClassName(\n                \"full-media cursor-pointer\",\n                withBlurredBackground && \"with-blurred-bg\"\n              )}\n              alt=\"\"\n              style={{ width: `${forcedWidth ?? 0}px` } as React.CSSProperties}\n              onClick={onPreviewClick}\n            />\n          </div>\n        )\n      );\n    } else if (document) {\n      return (\n        <div className={buildClassName(\"flex\", !isAuto ? \"justify-end\" : \"\")}>\n          <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[var(--color-text)] break-all\">\n            {message?.content.document?.fileName}\n          </div>\n        </div>\n      );\n    } else if (audio) {\n      return (\n        <div className={buildClassName(\"flex\", !isAuto ? \"justify-end\" : \"\")}>\n          <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[var(--color-text)] break-all\">\n            {message?.content.audio?.fileName}\n          </div>\n        </div>\n      );\n    } else if (voice) {\n      return (\n        <div className={buildClassName(\"flex\", !isAuto ? \"justify-end\" : \"\")}>\n          <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[var(--color-text)] break-all\">\n            {message?.content?.voice && (\n              <div className=\"waveform-wrapper\">\n                <div className=\"waveform\" draggable={false}>\n                  <canvas ref={waveformCanvasRef} />\n                </div>\n              </div>\n            )}\n            {message?.content?.audio && (\n              <p\n                className=\"title\"\n                dir=\"auto\"\n                title={message?.content?.audio?.title}\n              >\n                {message?.content?.audio?.title}\n              </p>\n            )}\n          </div>\n        </div>\n      );\n    } else if (video) {\n      return (\n        <div className={buildClassName(\"flex\", !isAuto ? \"justify-end\" : \"\")}>\n          <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[var(--color-text)] break-all\">\n            {message?.content.video?.fileName}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function renderSummary() {\n    if (!message) return \"\";\n\n    const { webPage, photo, document } = message?.content;\n    const isUrl = checkIsUrl(message?.content?.text?.text);\n    const isImage = document ? checkIsImage(document?.mimeType) : false;\n    if (webPage || isUrl) {\n      return summaryInfo?.title ? (\n        <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[var(--color-text)]\">\n          <div className=\"font-[600] text-[16px]\" data-readable>\n            Summary of the Article: \"{summaryInfo?.title}\"\n          </div>\n          <div className=\"flex flex-col gap-[6px] mt-3\">\n            <div className=\"font-[600]\" data-readable>Key Highlights:</div>\n            <div className=\"flex flex-col\">\n              {summaryInfo?.highlights?.map((item: any, index: number) => {\n                return (\n                  <div className=\"flex flex-col\" key={index}>\n                    <div className=\"flex flex-row items-center flex-wrap\">\n                      <span className=\"mr-[24px]\" data-readable>\n                        {index + 1}. {item?.title}\n                      </span>\n                    </div>\n                    <ul className=\"list-disc list-inside ml-3 mb-1\">\n                      {item?.content?.map(\n                        (contentItem: any, contentIndex: number) => {\n                          return (\n                            <li className=\"break-word\" key={contentIndex} data-readable>\n                              {contentItem}\n                            </li>\n                          );\n                        }\n                      )}\n                    </ul>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <MessageActionsItems canCopy canVoice message={props.message} />\n        </div>\n      ) : (\n        <NoSummaryContent content=\"website page\" message={props.message} />\n      );\n    } else if (photo || isImage) {\n      return (\n        <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] text-[var(--color-text)] p-3 text-[14px]\">\n          {isAuto ? (\n            <div className=\"font-[600]\" data-readable>Image summarize</div>\n          ) : (\n            <div className=\"flex items-center gap-2\" data-readable>\n              <img src={SerenaPath} className=\"w-[18px] h-[18px]\" />\n              Tely AI\n            </div>\n          )}\n          <div className=\"flex flex-col gap-[6px] mt-2\" data-readable>\n            {summaryInfo?.text}\n          </div>\n          <MessageActionsItems canCopy canVoice message={props.message} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[var(--color-text)]\">\n          <div className=\"font-[600] text-[16px]\" data-readable>Key Highlights:</div>\n          <div className=\"flex flex-col mt-2\">\n            {summaryInfo?.map((item: any, index: number) => {\n              return (\n                <div className=\"flex flex-col\" key={index}>\n                  <div className=\"flex flex-row items-center flex-wrap\">\n                    <span className=\"mr-[24px] font-[600]\" data-readable>{item?.title}</span>\n                  </div>\n                  <ul className=\"list-disc list-inside ml-3 mb-1\">\n                    {item?.content?.map(\n                      (contentItem: any, contentIndex: number) => {\n                        return (\n                          <li className=\"break-word\" key={contentIndex} data-readable>\n                            {contentItem}\n                          </li>\n                        );\n                      }\n                    )}\n                  </ul>\n                </div>\n              );\n            })}\n          </div>\n          <MessageActionsItems canCopy canVoice message={props.message} />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col gap-2 px-3 text-[14px]\" data-message-container>\n      {!isAuto && (\n        <div className=\"text-right\">\n          <AIRoomBubble>Summarize this {getType()}</AIRoomBubble>\n        </div>\n      )}\n      {renderMessageContent()}\n      {status === \"loading\" ? (\n        <ThinkingMessage />\n      ) : status === \"error\" ? (\n        <NoSummaryContent content={getType() || \"\"} message={props.message} />\n      ) : (\n        renderSummary()\n      )}\n    </div>\n  );\n};\n\nexport default RoomAIMediaMessage;\n\nexport const AIRoomBubble = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"bg-[var(--color-ai-room-bubble-bg)] py-2 px-3 rounded-t-[16px] rounded-bl-[16px] text-right inline-flex relative\">\n      {children}\n      <div className=\"absolute bottom-[-3px] right-[-9px] text-[var(--color-ai-room-bubble-bg)]\">\n        <AppendixIcon />\n      </div>\n    </div>\n  );\n};\n\nexport const AppendixIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg width={9} height={20} {...props}>\n    <defs>\n      <filter\n        id=\"a\"\n        width=\"200%\"\n        height=\"141.2%\"\n        x=\"-50%\"\n        y=\"-14.7%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feOffset dy={1} in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n        <feGaussianBlur\n          in=\"shadowOffsetOuter1\"\n          result=\"shadowBlurOuter1\"\n          stdDeviation={1}\n        />\n        <feColorMatrix\n          in=\"shadowBlurOuter1\"\n          values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n        />\n      </filter>\n    </defs>\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <path\n        fill=\"currentColor\"\n        d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 0 1 6 17z\"\n        filter=\"url(#a)\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 0 1 6 17z\"\n      />\n    </g>\n  </svg>\n);\n\nconst NoSummaryContent = ({ content, message }: { content: string; message: Message }) => {\n  return (\n    <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[var(--color-text)]\">\n      <span data-readable>\n        I couldn't find any accessible content from the {content} you provided. It\n        appears the search query didn't return any results. Could you please paste\n        the text you want summarized? That way, I can give you a clear and\n        accurate summary!\n      </span>\n      <MessageActionsItems canCopy canVoice message={message} />\n    </div>\n  );\n};\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport { getActions, getGlobal } from \"../../../global\";\nimport { Message } from \"ai\";\nimport { selectCurrentChat } from \"../../../global/selectors\";\nimport { ApiDraft } from \"../../../api/types\";\nimport { ChataiStores } from \"../store\";\nimport buildClassName from \"../../../util/buildClassName\";\nimport { MessageStatus } from \"./room-ai-media-message\";\nimport { ThinkingMessage } from \"../message\";\n\ntype IProps = {\n  message: Message;\n};\nconst ReplyMentionMessage = (props: IProps) => {\n  const { message } = props;\n  let content: any = {};\n  let messageId: number = 0;\n  let status: MessageStatus = \"loading\";\n  let replys: any[] = [];\n  try {\n    content = JSON.parse(message.content);\n    messageId = content?.messageId;\n    status = content?.status;\n    try {\n      replys = JSON.parse(content?.replys?.replace(/'/g, '\"')?.replace(/,\\s+/g, ','));\n    } catch (error) {\n      // console.log(\"aiChatFoldersTask----replys\", error);\n    }\n  } catch (error) {}\n\n  const [disabled, setDisabled] = useState<boolean>(false)\n\n  function onReplyClick(text: string) {\n    if (disabled) return;\n    const global = getGlobal();\n    const { saveReplyDraft, sendMessage, clearDraft } = getActions();\n    const currentChat = selectCurrentChat(global);\n    if (currentChat && messageId) {\n      const chatId = currentChat.id;\n      const threadId = -1;\n      saveReplyDraft({\n        chatId,\n        threadId,\n        draft: {\n          replyInfo: {\n            type: \"message\",\n            replyToMsgId: messageId,\n            replyToPeerId: undefined,\n          },\n        } as ApiDraft,\n        isLocalOnly: true,\n      });\n      sendMessage({\n        messageList: {\n          chatId,\n          threadId,\n          type: \"thread\",\n        },\n        text,\n      });\n      clearDraft({ chatId, isLocalOnly: true });\n      // disable the reply button\n      setDisabled(true)\n      ChataiStores.message?.storeMessage({\n        ...message,\n        chatId,\n        timestamp: new Date().getTime(),\n        content: JSON.stringify({\n          disabled: true,\n          ...content,\n        }),\n      });\n    }\n  }\n\n  useEffect(()=>{\n    setDisabled(content?.disabled)\n  }, [message])\n\n  //  console.log(\"aiChatFoldersTask----message\", content);\n\n  return (\n    <div className=\"rounded-[16px] bg-[var(--color-background)] text-[var(--color-text)] mx-2 p-3 w-full text-[14px]\">\n      <div className=\"font-[600]\">You were mentioned:</div>\n      <div>\"{content?.content}\"</div>\n      {status == \"loading\" ? (\n        <ThinkingMessage />\n      ) : status === \"error\" ? (\n        <div className=\"rounded-[16px] bg-[#FFF9F9] text-[#000] p-3 text-[14px] border-[1px] border-[#FFC7C7]\">\n          {content?.errorMsg}\n        </div>\n      ) : (\n        <>\n          <div>Here are a few reply suggestions for you 👇</div>\n          <div className=\"flex flex-col gap-[6px] mt-2\">\n            {replys?.map((reply: any, index: number) => {\n              return (\n                <div\n                  className={buildClassName(\n                    \"bg-[var(--color-ai-room-mention-reply-bg)] rounded-[6px] p-[6px] \",\n                    disabled\n                      ? \"cursor-not-allowed opacity-50\"\n                      : \"cursor-pointer hover:opacity-80\"\n                  )}\n                  key={index}\n                  onClick={() => onReplyClick(reply)}\n                >\n                  \"{reply}\"\n                </div>\n              );\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ReplyMentionMessage;\n","/* eslint-disable */\nimport React from \"react\";\nimport { getActions, getGlobal } from \"../../../global\";\nimport { selectUser } from \"../../../global/selectors\";\nimport SerenaPath from \"../../chatAssistant/assets/serena.png\";\nimport useLastCallback from \"../../../hooks/useLastCallback\";\nimport Avatar from \"../component/Avatar\";\n\ntype IProps = {\n  userId: string;\n};\n\nexport type MessageStatus = \"loading\" | \"success\" | \"error\";\n\nconst RoomAIUserPortraitMessage: React.FC<IProps> = (props) => {\n  const global = getGlobal();\n  const { openUserPortrait } = getActions();\n  const userId = props?.userId;\n  const user = userId ? selectUser(global, userId) : undefined;\n\n  const handlePortraitClick = useLastCallback(() => {\n    openUserPortrait({ userId });\n  });\n\n  return (\n    <div className=\"flex flex-col gap-2 px-3 text-[14px]\">\n      <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] text-[var(--color-text)] p-3 text-[14px]\">\n        <div className=\"flex items-center gap-2\">\n          <img src={SerenaPath} className=\"w-[18px] h-[18px]\" />\n          Tely AI\n        </div>\n        {user ? (\n          <div\n            onClick={handlePortraitClick}\n            className=\"flex flex-row items-center gap-2 mt-2 cursor-pointer hover:opacity-80\"\n          >\n            <Avatar peer={user} size=\"small\" />\n            {`${user?.firstName || \"\"} ${user?.lastName || \"\"}`} 's Portrait\n          </div>\n        ) : (\n          <div>Couldn't find the user.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomAIUserPortraitMessage;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useRef, useState,\n} from 'react';\nimport type { Message } from 'ai';\nimport { toBlob } from 'html-to-image';\nimport { getGlobal } from '../../../global';\n\nimport {\n  selectChat, selectCurrentMessageList, selectUser,\n} from '../../../global/selectors';\nimport { cn, formatTimestamp } from '../utils/util';\nimport MessageActionsItems from './message-actions-button';\n\nimport Avatar from '../component/Avatar';\nimport ErrorBoundary from '../ErrorBoundary';\n\nimport ActionsIcon from '../assets/actions.png';\nimport CalendarIcon from '../assets/calendar.png';\nimport CheckIcon from '../assets/check.png';\nimport MessageIcon from '../assets/message.png';\nimport SerenaPath from '../assets/serena.png';\nimport ShareHeaderBg from '../assets/share-header-bg.png';\nimport UserIcon from '../assets/user.png';\nimport WriteIcon from '../assets/write.png';\nimport { isUserId } from '../../../util/entities/ids';\n\ninterface IProps {\n  message: Message;\n}\ninterface ISummaryInfo {\n  summaryTime: number;\n  messageCount: number;\n  userIds: Array<string>;\n}\n\ninterface ISummaryTopicItem {\n  title: string;\n  summaryItems: Array<{\n    content: string;\n    relevantMessageIds: Array<number>;\n  }>;\n}\n\ninterface ISummaryPendingItem {\n  summary: string;\n  relevantMessageIds: number[];\n}\n\nconst ChatAvatar = ({\n  chatId, classNames, size, style,\n}: { chatId: string; classNames?: string; size:number;style?: { [key:string]:string } }) => {\n  if (!chatId) return null;\n  const global = getGlobal();\n  let peer;\n  if (isUserId(chatId)) {\n    peer = selectUser(global, chatId);\n  } else {\n    peer = selectChat(global, chatId);\n  }\n\n  return (\n    <Avatar\n      style={style}\n      key={chatId}\n      className={cn(classNames, 'overlay-avatar inline-block cursor-pointer')}\n      size={size}\n      peer={peer}\n    />\n  );\n};\n\nconst SummaryTopicItem = ({ topicItem, index }: { topicItem: ISummaryTopicItem; index: number }) => {\n  const { title, summaryItems } = topicItem;\n  if (!summaryItems.length) return null;\n  if (!title) return null;\n  return (\n    <ErrorBoundary>\n      <div>\n        <div className=\"flex flex-row items-center flex-wrap\">\n          <span className=\"text-[16px] font-bold mr-[24px]\" data-readable>{index + 1}. {title}</span>\n        </div>\n        <ul className=\"list-disc pl-[2px] text-[16px] list-inside\">\n          {summaryItems.map((summaryItem: any) => {\n            const { content } = summaryItem;\n            if (!content) return null;\n            return (\n              <li\n                role=\"button\"\n                className=\"cursor-pointer text-[15px] break-words\"\n                data-readable\n              >\n                {content}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nconst SummaryPenddingItem = ({ pendingItem }: { pendingItem: ISummaryPendingItem }) => {\n  return (\n    <ErrorBoundary>\n      <div className=\"flex gap-[8px] my-[4px] cursor-pointer\">\n        <img className=\"w-[18px] h-[18px] mt-[2px]\" src={CheckIcon} alt=\"\" />\n        <span className=\"text-[15px]\" data-readable>{pendingItem.summary}</span>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nconst SummaryInfoContent = ({\n  summaryInfo,\n  title = <>Chat Summary</>,\n}:{\n  summaryInfo: ISummaryInfo;\n  title?: any;\n}) => {\n  return (\n    <ErrorBoundary>\n      <div>\n        <p className=\"text-[22px] font-bold mb-[16px]\" data-readable>{title}</p>\n        <div className=\"flex items-center flex-wrap\">\n          <p className=\"flex items-center gap-[8px] pr-[20px]\">\n            <img className=\"w-[16px] h-[16px]\" src={CalendarIcon} alt=\"\" />\n            <div className=\"flex items-center gap-[4px]\">\n              <span className=\"mr-[4px] font-bold text-[14px]\" data-readable-inline>Time:</span>\n              {summaryInfo?.summaryTime ? (\n                <p className=\"text-[14px] text-[#A8A6AC] whitespace-nowrap\" data-readable-inline>\n                  {formatTimestamp(summaryInfo.summaryTime)}\n                </p>\n              ) : null}\n            </div>\n          </p>\n          <p className=\"flex items-center gap-[8px]\">\n            <img className=\"w-[16px] h-[16px]\" src={MessageIcon} alt=\"\" />\n            <div className=\"flex items-center gap-[4px]\">\n              <span className=\"font-bold text-[14px]\" data-readable data-readable-inline>Messages:</span>\n              {summaryInfo?.messageCount ? (\n                <span data-readable data-readable-inline>{summaryInfo?.messageCount}</span>\n              ) : null}\n            </div>\n          </p>\n        </div>\n        {summaryInfo?.userIds ? (\n          <div className=\"flex items-center gap-[8px] mb-[18px]\">\n            <img className=\"w-[16px] h-[16px]\" src={UserIcon} alt=\"\" />\n            <span className=\"font-bold text-[14px]\">Main speakers: </span>\n            <div className=\"flex items-center\">\n              {summaryInfo.userIds.slice(0, 5).map((id: string, index: number) => {\n                return (\n                  <ChatAvatar\n                    style={{ zIndex: `${String(summaryInfo.userIds.length - index)};` }}\n                    chatId={id}\n                    size={24}\n                    classNames=\"summary-avatar-group !border-solid-[2px] !border-white ml-[-4px]\"\n                    key={id}\n                  />\n                );\n              })}\n              {summaryInfo.userIds.length > 10 ? (\n                <div className=\"w-[24px] h-[24px] rounded-full bg-[#979797] text-[12px] whitespace-nowrap flex items-center justify-center\">{summaryInfo.userIds.length - 10}+</div>\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nconst MainSummaryContent = ({\n  messageId,\n  summaryInfo,\n  mainTopic,\n  pendingMatters,\n}: {\n  messageId:string;\n  summaryInfo: ISummaryInfo | null;\n  mainTopic: ISummaryTopicItem[];\n  pendingMatters: ISummaryPendingItem[];\n}) => {\n  const [capturing, setCapturing] = useState(false);\n  const global = getGlobal();\n  const { chatId } = selectCurrentMessageList(global) || {};\n  const chat = selectChat(global, chatId!);\n\n  return (\n    <div className=\"mx-auto rounded-[10px] px-3 py-2 dark:bg-[#292929] bg-white\" data-message-container>\n      {/* summary info  */}\n      {summaryInfo && (\n        <SummaryInfoContent summaryInfo={summaryInfo} />\n      )}\n      {/* maintopic  */}\n      {mainTopic.length > 0 && (\n        <div>\n          <p className=\"flex items-center gap-[8px] mb-[16px]\">\n            <span className=\"text-[18px] font-bold\" data-readable>Key Topics</span>\n            <img className=\"w-[16px] h-[16px]\" src={WriteIcon} alt=\"\" />\n          </p>\n          {mainTopic.map((item, index) => (\n            <SummaryTopicItem topicItem={item} index={index} />\n          ))}\n        </div>\n      )}\n      {/* pending actions  */}\n      {pendingMatters.length > 0 && (\n        <div>\n          <p className=\"flex items-center gap-[8px] mb-[16px]\">\n            <span className=\"text-[18px] font-bold\" data-readable>Actions Items</span>\n            <img className=\"w-[16px] h-[16px]\" src={ActionsIcon} alt=\"\" />\n          </p>\n          {pendingMatters.map((item) => (<SummaryPenddingItem pendingItem={item} />))}\n        </div>\n      )}\n      {/* action buttons  */}\n      <MessageActionsItems\n        canCopy\n        canVoice\n        canShare\n        message={{ id: messageId } as Message}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClickShare={() => {\n          setCapturing(true);\n        }}\n      />\n      <ShareCard\n        capturing={capturing}\n        // eslint-disable-next-line react/jsx-no-bind\n        captureCallback={() => {\n          setCapturing(false);\n        }}\n      >\n        {summaryInfo && (\n          <SummaryInfoContent\n            summaryInfo={summaryInfo}\n            title={(\n              <>\n                Chat Summary\n                <span className=\"ml-2 text-xs text-[#979797]\">[{chat?.title}]</span>\n              </>\n            )}\n          />\n        )}\n        {/* maintopic  */}\n        {mainTopic.length > 0 && (\n          <div>\n            <p className=\"flex items-center gap-[8px]\">\n              <span className=\"text-[18px] font-bold\" data-readable>Key Topics</span>\n              <img className=\"w-[16px] h-[16px]\" src={WriteIcon} alt=\"\" />\n            </p>\n            {mainTopic.map((item, index) => (\n              <SummaryTopicItem topicItem={item} index={index} />\n            ))}\n          </div>\n        )}\n        {/* pending actions  */}\n        {pendingMatters.length > 0 && (\n          <div>\n            <p className=\"flex items-center gap-[8px]\">\n              <span className=\"text-[18px] font-bold\" data-readable>Actions Items</span>\n              <img className=\"w-[16px] h-[16px]\" src={ActionsIcon} alt=\"\" />\n            </p>\n            {pendingMatters.map((item) => (<SummaryPenddingItem pendingItem={item} />))}\n          </div>\n        )}\n      </ShareCard>\n    </div>\n  );\n};\nconst RoomSummaryMessage = (props: IProps) => {\n  const { message } = props;\n  const [summaryInfo, setSummaryInfo] = useState<ISummaryInfo | null>(null);\n  const [mainTopic, setMainTopic] = useState<ISummaryTopicItem[]>([]);\n  const [pendingMatters, setPendingMatters] = useState<ISummaryPendingItem[]>([]);\n  const parseMessage = useCallback((messageContent: string) => {\n    const messageObj = JSON.parse(messageContent);\n    const {\n      mainTopic, pendingMatters, summaryInfo,\n    } = messageObj;\n    if (mainTopic) {\n      setMainTopic(mainTopic as ISummaryTopicItem[]);\n    }\n    if (pendingMatters) {\n      setPendingMatters(pendingMatters as ISummaryPendingItem[]);\n    }\n    if (summaryInfo) {\n      setSummaryInfo(summaryInfo as ISummaryInfo);\n    }\n  }, []);\n  useEffect(() => {\n    try {\n      parseMessage(message.content);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }, [message, parseMessage]);\n  if (!summaryInfo) {\n    return null;\n  }\n  return (\n    <div className=\"px-[12px] w-full\">\n      {(!mainTopic.length && !pendingMatters.length) ? null : (\n        <MainSummaryContent\n          messageId={message.id}\n          summaryInfo={summaryInfo}\n          mainTopic={mainTopic}\n          pendingMatters={pendingMatters}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction ShareCard({\n  capturing = false,\n  children,\n  captureCallback = () => {},\n}: {\n  capturing: boolean;\n  children?: any;\n  captureCallback?: () => void;\n}) {\n  const domRef = useRef<HTMLDivElement>();\n  const global = getGlobal();\n  const { currentUserId } = global;\n  const currentUser = selectUser(global, currentUserId!);\n\n  useEffect(() => {\n    if (domRef.current) {\n      setTimeout(() => {\n        toBlob(domRef.current!, {\n          pixelRatio: 2, // Higher pixel ratio for better quality\n          quality: 1, // Maximum quality\n        })\n          .then((blob) => {\n            const file = new File([blob!], 'telegpt.org.png', { type: 'image/png' });\n            // @ts-ignore\n            globalThis?.p__handleFileSelect?.([file], true);\n            captureCallback();\n          });\n      }, 100);\n    }\n  }, [capturing, captureCallback]);\n\n  if (!capturing) return null;\n\n  return (\n    <div className=\"fixed top-0 left-0 translate-x-[-1000000px] translate-y-[-100000px]\">\n      <div\n        ref={domRef}\n        className=\"relative w-[390px] box-content overflow-hidden bg-white text-black\"\n      >\n        <div className=\"absolute top-0 left-0 w-full blur-xl pointer-events-none\">\n          <img src={ShareHeaderBg} alt=\"\" className=\"w-full\" />\n        </div>\n        <div className=\"relative py-3 px-4 flex flex-col gap-2\">\n          <div className=\"flex flex-row justify-end items-center gap-2 text-xs text-[#979797]\">\n            <Avatar\n              className=\"w-[20px] h-[20px]\"\n              peer={currentUser}\n            />\n            <span>{currentUser?.firstName}</span>\n            <span>{currentUser?.lastName}</span>\n          </div>\n\n          {children}\n        </div>\n        <section className=\"flex flex-row gap-1 items-center justify-center py-2 text-xs bg-[#F7FAFF]\">\n          <img className=\"inline w-[20px] h-[20px] rounded-full\" src={SerenaPath} alt=\"Serena\" />\n          Powered by\n          <span className=\"text-[#2996FF]\">telepgt.org</span>\n        </section>\n      </div>\n    </div>\n\n  );\n}\n\nexport default RoomSummaryMessage;\n","/* eslint-disable max-len */\n/* eslint-disable no-console */\n/* eslint-disable no-null/no-null */\nimport React, { useEffect, useState } from 'react';\nimport type { Message } from 'ai';\n\nimport { formatTimestamp } from '../utils/util';\nimport MessageActionsItems from './message-actions-button';\n\nimport ChatAvatar from '../component/ChatAvatar';\nimport { DrawerKey, useDrawerStore } from '../global-summary/DrawerContext';\n\nimport DangerIcon from '../assets/danger.png';\nimport SerenaLogoPath from '../assets/serena.png';\n\ninterface IProps {\n  message: Message;\n  deleteMessage: () => void;\n}\n\ninterface UrgentMessage {\n  chatId: string;\n  messageId:number;\n  content:string;\n}\n\nconst UrgentCheckMessage = (props:IProps) => {\n  const { message, deleteMessage } = props;\n  const [urgentMessage, setUrgentMessage] = useState<UrgentMessage[]>([]);\n  const { openDrawer } = useDrawerStore();\n  useEffect(() => {\n    const parsedMessage = JSON.parse(message.content);\n    if (parsedMessage && typeof parsedMessage === 'object' && parsedMessage.length > 0) {\n      setUrgentMessage(parsedMessage);\n    }\n  }, [message]);\n  if (!urgentMessage || urgentMessage.length === 0) {\n    return null;\n  }\n  const showMessageDetail = (item:UrgentMessage) => {\n    openDrawer(DrawerKey.OriginalMessages, { relevantMessages: [{ chatId: item.chatId, messageIds: [item.messageId] }] });\n  };\n  return (\n    <div className=\"w-max-[693px] rounded-[10px] bg-[var(--color-urgent-message-bg)] pl-[82px] pr-[25px] pt-[20px] pb-[25px] border-[1px] border-[#FFC7C7] dark:border-none\" data-message-container>\n      <div className=\"flex items-center gap-[8px]\">\n        <img className=\"w-[52px] h-[52px] rounded-full ml-[-60px]\" src={SerenaLogoPath} alt=\"\" />\n        <div>\n          <p className=\"text-[16px] font-semibold\">Tely AI</p>\n          {message.createdAt && (\n            <p className=\"text-[14px] text-[#A8A6AC]\">{formatTimestamp(new Date(message.createdAt).getTime())}</p>\n          )}\n        </div>\n      </div>\n      <div className=\"flex flex-row items-center gap-[8px] mb-[10px]\">\n        <img src={DangerIcon} alt=\"\" className=\"w-[26px] h-[26px]\" />\n        <span className=\"text-[20px] text-[#FF543D] font-bold\" data-readable>Urgent Alert</span>\n      </div>\n      <ul className=\"list-disc pl-[24px]\">\n        {urgentMessage.map((item) => {\n          return (\n            <li className=\"flex flex-row items-top gap-[8px]\">\n              <span className=\"text-[15px] break-words\" data-readable onClick={() => showMessageDetail(item)}>{item.content}</span>\n              <ChatAvatar size={20} chatId={item.chatId} />\n            </li>\n          );\n        })}\n      </ul>\n      <MessageActionsItems\n        canCopy\n        canVoice\n        canDelete\n        onDelete={deleteMessage}\n        message={message}\n      />\n    </div>\n  );\n};\n\nexport default UrgentCheckMessage;\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\nimport React, { useEffect, useState } from 'react';\nimport type { Message } from 'ai';\nimport { getActions, getGlobal } from '../../../global';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\n\nimport Avatar from '../component/Avatar';\nimport { isUserId } from '../../../util/entities/ids';\n\nexport const UserSearchMessage = ({ message }: { message: Message }) => {\n  const [senderIds, setSenderIds] = useState<string[]>([]);\n  const global = getGlobal();\n  const handleClick = (userId: string) => {\n    const chat = selectChat(global, userId);\n    if (chat) {\n      getActions().openChat({ id: userId });\n    }\n  };\n  const renderChatAvatar = (userId: string) => {\n    if (!isUserId(userId)) {\n      return null;\n    }\n    let title:string | undefined;\n    const peer = selectUser(global, userId);\n    if (peer) {\n      title = getUserFullName(peer);\n    } else {\n      return null;\n    }\n    return (\n      <div\n        className=\"flex flex-row items-center gap-[8px] cursor-pointer px-[12px] py-[8px] rounded-[12px] hover:bg-[#D9D9D9]\"\n        onClick={() => { handleClick(userId); }}\n      >\n        <Avatar\n          key={userId}\n          className=\"overlay-avatar inline-block cursor-pointer\"\n          size={44}\n          peer={peer}\n        />\n        <div className=\"flex flex-col justify-center gap-[4px]\">\n          <span className=\"text-[15px] font-semibold text-black leading-[18px]\">{title}</span>\n        </div>\n      </div>\n    );\n  };\n  useEffect(() => {\n    try {\n      const ids = JSON.parse(message.content);\n      setSenderIds(ids || []);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }, [message]);\n  if (senderIds.length === 0) {\n    return null;\n  }\n  return (\n    <div className=\"p-[10px] mx-[22px] rounded-[16px] border-[1px] border-[#D9D9D9] bg-white dark:bg-[#292929]\">\n      <div className=\"flex flex-col gap-[12px]\">\n        {senderIds.splice(0, 10).map((id) => {\n          return (\n            <>\n              {renderChatAvatar(id)}\n            </>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-no-useless-fragment */\n// @ts-nocheck\nimport React, { memo } from 'react';\nimport ReactMarkdown, { type Components } from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nimport { CodeBlock } from './code-block';\n\nconst components: Partial<Components> = {\n  code: CodeBlock,\n  pre: ({ children }) => <>{children}</>,\n  ol: ({ node, children, ...props }) => {\n    return (\n      <ol className=\"list-decimal list-outside ml-4\" {...props}>\n        {children}\n      </ol>\n    );\n  },\n  li: ({ node, children, ...props }) => {\n    return (\n      <li className=\"py-1\" {...props}>\n        {children}\n      </li>\n    );\n  },\n  ul: ({ node, children, ...props }) => {\n    return (\n      <ul className=\"list-decimal list-outside ml-4\" {...props}>\n        {children}\n      </ul>\n    );\n  },\n  strong: ({ node, children, ...props }) => {\n    return (\n      <span className=\"font-semibold\" {...props}>\n        {children}\n      </span>\n    );\n  },\n  a: ({ node, children, ...props }) => {\n    return (\n      <a\n        className=\"text-blue-500 hover:underline\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {children}\n      </a>\n    );\n  },\n  h1: ({ node, children, ...props }) => {\n    return (\n      <h1 className=\"text-3xl font-semibold mt-6 mb-2\" {...props}>\n        {children}\n      </h1>\n    );\n  },\n  h2: ({ node, children, ...props }) => {\n    return (\n      <h2 className=\"text-2xl font-semibold mt-6 mb-2\" {...props}>\n        {children}\n      </h2>\n    );\n  },\n  h3: ({ node, children, ...props }) => {\n    return (\n      <h3 className=\"text-xl font-semibold mt-6 mb-2\" {...props}>\n        {children}\n      </h3>\n    );\n  },\n  h4: ({ node, children, ...props }) => {\n    return (\n      <h4 className=\"text-lg font-semibold mt-6 mb-2\" {...props}>\n        {children}\n      </h4>\n    );\n  },\n  h5: ({ node, children, ...props }) => {\n    return (\n      <h5 className=\"text-base font-semibold mt-6 mb-2\" {...props}>\n        {children}\n      </h5>\n    );\n  },\n  h6: ({ node, children, ...props }) => {\n    return (\n      <h6 className=\"text-sm font-semibold mt-6 mb-2\" {...props}>\n        {children}\n      </h6>\n    );\n  },\n};\n\nconst remarkPlugins = [remarkGfm];\n\nconst NonMemoizedMarkdown = ({ children }: { children: string }) => {\n  return (\n    <ReactMarkdown remarkPlugins={remarkPlugins} components={components}>\n      {children}\n    </ReactMarkdown>\n  );\n};\n\nexport const Markdown = memo(\n  NonMemoizedMarkdown,\n  (prevProps, nextProps) => prevProps.children === nextProps.children,\n);\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable max-len */\n/* eslint-disable react/react-in-jsx-scope */\nimport React from 'react';\n\ninterface CodeBlockProps {\n  node: any;\n  inline: boolean;\n  className: string;\n  children: any;\n}\n\nexport function CodeBlock({\n  node,\n  inline,\n  className,\n  children,\n  ...props\n}: CodeBlockProps) {\n  if (!inline) {\n    return (\n      <div className=\"not-prose flex flex-col\">\n        <pre\n          {...props}\n          className=\"text-sm w-full overflow-x-auto dark:bg-zinc-900 p-4 border border-zinc-200 dark:border-zinc-700 rounded-xl dark:text-zinc-50 text-zinc-900\"\n        >\n          <code className=\"whitespace-pre-wrap break-words\">{children}</code>\n        </pre>\n      </div>\n    );\n  } else {\n    return (\n      <code\n        className={`${className} text-sm bg-zinc-100 dark:bg-zinc-800 py-0.5 px-1 rounded-md`}\n        {...props}\n      >\n        {children}\n      </code>\n    );\n  }\n}\n","\nimport React from 'react';\nimport type { Message } from 'ai';\nimport copy from 'copy-to-clipboard';\nimport { getActions } from '../../global';\n\nimport { useSpeechPlayer } from './hook/useSpeechPlayer';\nimport {\n  CopyIcon, VoiceIcon, VoiceingIcon,\n} from './icons';\n\nexport const MessageActions = ({ message }: { message:Message }) => {\n  const { showNotification } = getActions();\n  const { isSpeaking, speak, stop } = useSpeechPlayer(message.id);\n  const handleCopy = () => {\n    copy(message.content);\n    showNotification({\n      message: 'TextCopied',\n    });\n  };\n  const handleVoicePlay = () => {\n    const voiceText = message.content;\n    if (isSpeaking) {\n      stop();\n    } else {\n      speak(voiceText);\n    }\n  };\n  return (\n    <div className=\"message-actions flex items-center gap-[8px]\">\n      <div className=\"w-[24px] h-[24px] text-[#676B74] cursor-pointer\" onClick={handleCopy}>\n        <CopyIcon size={24} />\n      </div>\n      {isSpeaking ? (\n        <div\n          className=\"w-[24px] h-[24px] text-[#676B74] cursor-pointer\"\n          onClick={stop}\n        >\n          <VoiceingIcon size={24} />\n        </div>\n      ) : (\n        <div\n          className=\"w-[24px] h-[24px] text-[#676B74] cursor-pointer\"\n          onClick={handleVoicePlay}\n        >\n          <VoiceIcon size={24} />\n        </div>\n      )}\n    </div>\n  );\n};\n","\n// @ts-nocheck\nimport React, { useState } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nimport { ChevronDownIcon, LoaderIcon } from './icons';\nimport { Markdown } from './markdown';\n\ninterface MessageReasoningProps {\n  isLoading: boolean;\n  reasoning: string;\n}\n\nexport function MessageReasoning({\n  isLoading,\n  reasoning,\n}: MessageReasoningProps) {\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  const variants = {\n    collapsed: {\n      height: 0,\n      opacity: 0,\n      marginTop: 0,\n      marginBottom: 0,\n    },\n    expanded: {\n      height: 'auto',\n      opacity: 1,\n      marginTop: '1rem',\n      marginBottom: '0.5rem',\n    },\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      {isLoading ? (\n        <div className=\"flex flex-row gap-2 items-center\">\n          <div className=\"font-medium\">Reasoning</div>\n          <div className=\"animate-spin\">\n            <LoaderIcon />\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex flex-row gap-2 items-center\">\n          <div className=\"font-medium\">Reasoned for a few seconds</div>\n          <div\n            className=\"cursor-pointer\"\n            onClick={() => {\n              setIsExpanded(!isExpanded);\n            }}\n          >\n            <ChevronDownIcon />\n          </div>\n        </div>\n      )}\n\n      <AnimatePresence initial={false}>\n        {isExpanded && (\n          <motion.div\n            key=\"content\"\n            initial=\"collapsed\"\n            animate=\"expanded\"\n            exit=\"collapsed\"\n            variants={variants}\n            transition={{ duration: 0.2, ease: 'easeInOut' }}\n            className=\"pl-4 text-zinc-600 dark:text-zinc-400 border-l flex flex-col gap-4 overflow-hidden\"\n          >\n            <Markdown>{reasoning}</Markdown>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","\nimport React from 'react';\nimport type { Attachment } from 'ai';\n\nimport { LoaderIcon } from './icons';\n\nexport const PreviewAttachment = ({\n  attachment,\n  isUploading = false,\n}: {\n  attachment: Attachment;\n  isUploading?: boolean;\n}) => {\n  const { name, url, contentType } = attachment;\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <div className=\"w-20 h-16 aspect-video bg-muted rounded-md relative flex flex-col items-center justify-center\">\n        {contentType ? (\n          contentType.startsWith('image') ? (\n            // NOTE: it is recommended to use next/image for images\n            <img\n              key={url}\n              src={url}\n              alt={name ?? 'An image attachment'}\n              className=\"rounded-md size-full object-cover\"\n            />\n          ) : (\n            <div className=\"\" />\n          )\n        ) : (\n          <div className=\"\" />\n        )}\n\n        {isUploading && (\n          <div className=\"animate-spin absolute text-zinc-500\">\n            <LoaderIcon />\n          </div>\n        )}\n      </div>\n      <div className=\"text-xs text-zinc-500 max-w-16 truncate\">{name}</div>\n    </div>\n  );\n};\n","\n/* eslint-disable @stylistic/max-len */\n\n// @ts-nocheck\nimport React from 'react';\nimport { memo, useMemo } from 'react';\nimport type { Message } from 'ai';\nimport cx from 'classnames';\nimport equal from 'fast-deep-equal';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nimport { cn } from '../../lib/utils';\nimport AISearchSugesstionsMessage from './messages/ai-search-sugesstion-message';\nimport { GlobalIntroduceMessage } from './messages/global-introduce-message';\nimport GlobalSummaryMessage from './messages/global-summary-message';\nimport GoogleEventCreateMessage from './messages/google-event-create-messages';\nimport GoogleEventDetailMessage from './messages/google-event-detail-message';\nimport GoogleLoginAuthMessage from './messages/google-login-auth-message';\nimport GoogleMeetInformationSuggestMessage from './messages/google-meet-information-suggest-message';\nimport GoogleMeetMentionMessage from './messages/google-meet-mention-message';\nimport GoogleMeetTimeConfirmMessage from './messages/google-meet-time-confirm-message';\nimport { GroupSearchMessage } from './messages/group-search-message';\nimport IntroduceActionsMessage from './messages/introduce-actions-message';\nimport IntroduceMeetingMessage from './messages/introduce-meeting-message';\nimport IntroduceSummaryMessage from './messages/introduce-summary-message';\nimport IntroduceTranslationMessage from './messages/introduce-translation-message';\nimport RoomActionMessage from './messages/room-actions-message';\nimport RoomAIDescriptionMessage from './messages/room-ai-des-message';\nimport RoomAIMediaMessage from './messages/room-ai-media-message';\nimport ReplyMentionMessage from './messages/room-ai-reply-mention-message';\nimport RoomAIUserPortraitMessage from './messages/room-ai-user-portrait';\nimport RoomSummaryMessage from './messages/room-summary-message';\n// import SummaryMessage from './summary-message';\nimport UrgentCheckMessage from './messages/urgent-check-message';\n// import { useScrollToBottom } from './use-scroll-to-bottom';\nimport { UserSearchMessage } from './messages/user-search-message';\nimport { LoadingIcon } from './icons';\nimport { Markdown } from './markdown';\nimport { MessageActions } from './message-actions';\nimport { MessageReasoning } from './message-reasoning';\nimport { PreviewAttachment } from './preview-attachment';\n\nimport ErrorBoundary from './ErrorBoundary';\n\nexport enum AIMessageType {\n  GlobalSummary = 'global-summary',\n  UrgentCheck = 'urgent-message-check',\n  GroupSearch = 'group-search',\n  UserSearch = 'user-search',\n  GoogleAuth = 'google-auth',\n  GoogleEventInsert = 'google-event-insert',\n  GoogleEventDetail = 'google-event-detail',\n  GoogleMeetTimeConfirm = 'google-meet-time-confirm',\n  GoogleMeetMention = 'google-meet-mention',\n  GoogleMeetInformationSuggest = 'google-meet-information-suggest',\n  RoomSummary = 'room-summary',\n  RoomActions = 'room-actions',\n  MeetingIntroduce = 'global-meeting-introduce',\n  SummaryIntroduce = 'global-summary-introduce',\n  TranslationIntroduce = 'global-translation-introduce',\n  ActionsIntroduce = 'global-actions-introduce',\n  GlobalIntroduce = 'global-introduce',\n  RoomAIDescription = 'room-ai-description',\n  AISearchSugesstion = 'ai-search-sugesstion',\n  AIReplyMention = 'room-ai-reply-mention',\n  AIMediaSummary = 'room-ai-media-summary',\n  UserPortrait = 'user-portrait',\n  Default = 'default',\n}\n\nconst DefaultMessage = ({ message, isLoading }: {\n  message: Message;\n  isLoading: boolean;\n}) => {\n  return (\n    <motion.div\n      className=\"w-full px-[12px] group/message\"\n      initial={{ y: 5, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      data-role={message.role}\n    >\n      <div className=\"flex gap-4 w-full group-data-[role=user]/message:ml-auto group-data-[role=user]/message:max-w-2xl\">\n        <div className=\"flex flex-col gap-4 w-full\">\n          {message.experimental_attachments && (\n            <div className=\"flex flex-row justify-end gap-2\">\n              {message.experimental_attachments.map((attachment) => (\n                <PreviewAttachment\n                  key={attachment.url}\n                  attachment={attachment}\n                />\n              ))}\n            </div>\n          )}\n\n          {message.reasoning && (\n            <MessageReasoning\n              isLoading={isLoading}\n              reasoning={message.reasoning}\n            />\n          )}\n\n          {(message.content || message.reasoning) && (\n            <div className=\"flex flex-row gap-2 items-start w-full\">\n              <div\n                className={cn('w-auto flex flex-col gap-4 bg-white text-[var(--color-text)] px-3 py-2 rounded-xl dark:bg-[#292929]', {\n                  '!bg-[#E8D7FF] text-black ml-auto':\n                      message.role === 'user',\n                })}\n              >\n                <Markdown>{message.content}</Markdown>\n                {message.role !== 'user' && (\n                  <MessageActions message={message} />\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\nconst PurePreviewMessage = ({\n  message,\n  isLoading,\n  deleteMessage,\n}: {\n  message: Message;\n  isLoading: boolean;\n  deleteMessage?: (messageId: string) => void;\n}) => {\n  const messageType: AIMessageType | undefined = useMemo(() => {\n    const matched = message?.annotations?.find(\n      (item) => item\n        && typeof item === 'object'\n        && 'type' in item\n        && Object.values(AIMessageType).includes(item.type as AIMessageType),\n    );\n\n    const type = matched?.type as AIMessageType || AIMessageType.Default;\n    return type;\n  }, [message]);\n\n  const renderMessageComponent = () => {\n    switch (messageType) {\n      case AIMessageType.GlobalSummary:\n        return (\n          <ErrorBoundary>\n            <GlobalSummaryMessage\n              message={message}\n              deleteMessage={() => deleteMessage?.(message.id)}\n            />\n          </ErrorBoundary>\n        );\n      case AIMessageType.UrgentCheck:\n        return (\n          <UrgentCheckMessage\n            message={message}\n            deleteMessage={() => deleteMessage?.(message.id)}\n          />\n        );\n      case AIMessageType.GroupSearch:\n        return <GroupSearchMessage message={message} />;\n      case AIMessageType.UserSearch:\n        return <UserSearchMessage message={message} />;\n      case AIMessageType.GoogleAuth:\n        return (\n          <GoogleLoginAuthMessage\n            deleteMessage={() => deleteMessage?.(message.id)}\n          />\n        );\n      case AIMessageType.GoogleEventInsert:\n        return <GoogleEventCreateMessage message={message} />;\n      case AIMessageType.GoogleEventDetail:\n        return <GoogleEventDetailMessage message={message} />;\n      case AIMessageType.GoogleMeetTimeConfirm:\n        return <GoogleMeetTimeConfirmMessage message={message} />;\n      case AIMessageType.GoogleMeetMention:\n        return <GoogleMeetMentionMessage message={message} />;\n      case AIMessageType.GoogleMeetInformationSuggest:\n        return <GoogleMeetInformationSuggestMessage message={message} />;\n      case AIMessageType.RoomSummary:\n        return <RoomSummaryMessage message={message} />;\n      case AIMessageType.RoomActions:\n        return <RoomActionMessage message={message} />;\n      case AIMessageType.MeetingIntroduce:\n        return <IntroduceMeetingMessage />;\n      case AIMessageType.SummaryIntroduce:\n        return <IntroduceSummaryMessage />;\n      case AIMessageType.TranslationIntroduce:\n        return <IntroduceTranslationMessage />;\n      case AIMessageType.ActionsIntroduce:\n        return <IntroduceActionsMessage />;\n      case AIMessageType.GlobalIntroduce:\n        return <GlobalIntroduceMessage />;\n      case AIMessageType.RoomAIDescription:\n        return <RoomAIDescriptionMessage message={message} />;\n      case AIMessageType.AISearchSugesstion:\n        return <AISearchSugesstionsMessage />;\n      case AIMessageType.AIReplyMention:\n        return <ReplyMentionMessage message={message} />;\n      case AIMessageType.AIMediaSummary:\n        return <RoomAIMediaMessage message={message} />;\n      case AIMessageType.UserPortrait:\n        return <RoomAIUserPortraitMessage userId={message?.content} />;\n      case AIMessageType.Default:\n      default:\n        return <DefaultMessage message={message} isLoading={isLoading} />;\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      {renderMessageComponent()}\n    </AnimatePresence>\n  );\n};\n\nexport const PreviewMessage = memo(\n  PurePreviewMessage,\n  (prevProps, nextProps) => {\n    if (prevProps.isLoading !== nextProps.isLoading) return false;\n    if (prevProps.message.reasoning !== nextProps.message.reasoning) return false;\n    if (prevProps.message.content !== nextProps.message.content) return false;\n    if (\n      !equal(\n        prevProps.message.toolInvocations,\n        nextProps.message.toolInvocations,\n      )\n    ) return false;\n    return true;\n  },\n);\n\nexport const ThinkingMessage = () => {\n  const role = 'assistant';\n\n  return (\n    <motion.div\n      className=\"w-full px-[12px] group/message \"\n      initial={{ y: 5, opacity: 0 }}\n      animate={{ y: 0, opacity: 1, transition: { delay: 1 } }}\n      data-role={role}\n    >\n      <div\n        className={cx(\n          'flex gap-4 group-data-[role=user]/message:px-3 w-full group-data-[role=user]/message:w-fit group-data-[role=user]/message:ml-auto group-data-[role=user]/message:max-w-2xl group-data-[role=user]/message:py-2 rounded-xl',\n          {\n            'group-data-[role=user]/message:bg-muted': true,\n          },\n        )}\n      >\n        <LoadingIcon size={40} />\n      </div>\n    </motion.div>\n  );\n};\n","\n/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\nimport React, {\n  memo, useRef,\n} from 'react';\nimport type { UseChatHelpers } from '@ai-sdk/react';\nimport type { Message } from 'ai';\nimport equal from 'fast-deep-equal';\nimport { motion } from 'framer-motion';\n\nimport { useMessages } from './hook/use-messages';\nimport { cn } from './utils/util';\nimport { PreviewMessage, ThinkingMessage } from './message';\nimport RoomStorage from './room-storage';\nimport { GLOBAL_SUMMARY_CHATID } from './variables';\n\nimport './messages.scss';\n\ninterface MessagesProps {\n  chatId: string;\n  className?: string;\n  isLoading?: boolean;\n  status: UseChatHelpers['status'];\n  messages: Array<Message>;\n  hasMore?: boolean;\n  deleteMessage?: (messageId: string) => void;\n  loadMore: () => Promise<void>;\n}\nfunction PureMessages({\n  chatId,\n  className,\n  isLoading,\n  status,\n  messages,\n  hasMore,\n  deleteMessage,\n  loadMore,\n}: MessagesProps) {\n  const upLoadRef = useRef(false);\n  const anchorRef = useRef<HTMLDivElement | null>(null);\n  const {\n    containerRef: messagesContainerRef,\n    endRef: messagesEndRef,\n    isAtBottom,\n    onViewportEnter,\n    onViewportLeave,\n  } = useMessages({\n    chatId: chatId!,\n    status,\n  });\n  if (isAtBottom) {\n    RoomStorage.updateRoomAIData(GLOBAL_SUMMARY_CHATID, 'unreadCount', 0);\n  }\n  const isAuxiliary = (message: Message) => {\n    return message?.annotations?.some((item) => item && typeof item === 'object' && 'isAuxiliary' in item && item.isAuxiliary === true) ?? false;\n  };\n  const handleScroll = () => {\n    const container = messagesContainerRef.current;\n    if (!container || upLoadRef.current) return;\n\n    const { scrollTop } = container;\n\n    if (scrollTop === 0 && hasMore) {\n      upLoadRef.current = true;\n      const anchor = container.firstChild?.firstChild as HTMLDivElement || null;\n      anchorRef.current = anchor;\n      loadMore().finally(() => {\n        upLoadRef.current = false;\n        if (anchorRef.current) {\n          anchorRef.current.scrollIntoView({ behavior: 'instant', block: 'start' });\n        }\n        // scrollBuffer.current = calculateBuffer();\n      });\n    }\n  };\n\n  return (\n    <div\n      ref={messagesContainerRef}\n      onScroll={handleScroll}\n      className={cn('ai-message-container custom-scroll flex flex-col min-w-0 gap-[10px] h-full overflow-y-auto relative pt-4 overflow-x-hidden', className)}\n    >\n      {messages.map((message, index) => {\n        if (!isAuxiliary(message)) {\n          return (\n            <PreviewMessage\n              message={message}\n              deleteMessage={deleteMessage}\n              key={message.id}\n              isLoading={status === 'streaming' && messages.length - 1 === index}\n            />\n          );\n        } else {\n          return null;\n        }\n      })}\n\n      {\n        (\n          (status === 'submitted'\n          && messages.length > 0\n          && messages[messages.length - 1].role === 'user') || isLoading\n        ) && <ThinkingMessage />\n      }\n      <motion.div\n        ref={messagesEndRef}\n        className=\"shrink-0 min-w-[24px] min-h-[24px]\"\n        onViewportLeave={onViewportLeave}\n        onViewportEnter={onViewportEnter}\n      />\n    </div>\n\n  );\n}\nexport const Messages = memo(PureMessages, (prevProps, nextProps) => {\n  if (prevProps.status !== nextProps.status) return false;\n  if (prevProps.status && nextProps.status) return false;\n  if (prevProps.messages.length !== nextProps.messages.length) return false;\n  if (!equal(prevProps.messages, nextProps.messages)) return false;\n\n  return true;\n});\n","import { useEffect, useRef, useState } from 'react';\nimport type { UseChatHelpers } from '@ai-sdk/react';\n\nimport { useScrollToBottom } from './use-scroll-to-bottom';\n\nfunction scrollUntilStable({\n  container,\n  scrollToBottom,\n  maxAttempts = 30,\n  interval = 50,\n}: {\n  container: HTMLElement;\n  scrollToBottom: (behavior?: ScrollBehavior) => void;\n  maxAttempts?: number;\n  interval?: number;\n}) {\n  let lastScrollHeight = container.scrollHeight;\n  let attempts = 0;\n\n  const tick = () => {\n    const current = container.scrollHeight;\n\n    if (current !== lastScrollHeight) {\n      scrollToBottom('instant');\n      lastScrollHeight = current;\n      attempts = 0; // reset\n    } else {\n      attempts++;\n    }\n\n    if (attempts < maxAttempts) {\n      requestAnimationFrame(() => setTimeout(tick, interval));\n    }\n  };\n\n  tick();\n}\nexport function useMessages({\n  chatId,\n  status,\n}: {\n  chatId: string;\n  status: UseChatHelpers['status'];\n}) {\n  const {\n    containerRef,\n    endRef,\n    isAtBottom,\n    scrollToBottom,\n    onViewportEnter,\n    onViewportLeave,\n  } = useScrollToBottom();\n\n  const hasScrollToBottom = useRef(false);\n\n  const [hasSentMessage, setHasSentMessage] = useState(false);\n\n  useEffect(() => {\n    if (status === 'submitted') {\n      setHasSentMessage(true);\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (!hasScrollToBottom.current && containerRef.current) {\n      scrollUntilStable({\n        container: containerRef.current,\n        scrollToBottom,\n      });\n      hasScrollToBottom.current = true;\n    }\n  }, [containerRef, scrollToBottom]);\n\n  return {\n    containerRef,\n    endRef,\n    isAtBottom,\n    scrollToBottom,\n    onViewportEnter,\n    onViewportLeave,\n    hasSentMessage,\n  };\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","/* eslint-disable */\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ApiMessage } from \"../../../api/types\";\nimport eventEmitter, { Actions } from \"../lib/EventEmitter\";\nimport { ChataiStores } from \"../store\";\nimport { StoreMessage } from \"../store/messages-store\";\nimport {\n  audioAISummary,\n  documentAISummary,\n  imageAISummary,\n  mentionReply,\n  webPageAISummary,\n} from \"./chat-api\";\nimport { sleep } from \"../ai-chatfolders/util\";\nimport { getMediaHash } from \"../../../global/helpers\";\nimport * as mediaLoader from \"../../../util/mediaLoader\";\nimport { message as showMessage } from \"antd\";\nimport * as pdfjsLib from \"pdfjs-dist/legacy/build/pdf\";\nimport { getActions, getGlobal } from \"../../../global\";\nimport { selectChatMessage } from \"../../../global/selectors\";\n\npdfjsLib.GlobalWorkerOptions.workerSrc = \"pdf.worker.min.js\";\n\nconst mammoth = require(\"mammoth\");\n\nexport async function replyToMention(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  if (!message.isMentioned || !message.content?.text?.text) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-reply-mention\" }],\n    content: JSON.stringify({\n      messageId: message.id,\n      content: message.content.text?.text,\n      isAuto,\n      status: \"loading\",\n    }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  mentionReply({\n    message: message.content.text?.text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            messageId: message.id,\n            content: message.content.text?.text,\n            replys: response.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function photoSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const photo = message.content?.photo;\n  if (!photo) return;\n  const mediaHash = getMediaHash(photo, \"download\");\n  if (!mediaHash) return;\n  const mimeType = \"image/jpeg\";\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleImageToSummaryText({\n    mimeType,\n    mediaHash,\n    message,\n    newMessage,\n    isAuto,\n  });\n}\n\nexport async function webPageSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const webPage = message.content?.webPage;\n  const url = webPage ? webPage?.url : message.content?.text?.text;\n  if (!url || url === \"\") return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  webPageAISummary({\n    url,\n    text: message.content?.text?.text || \"\",\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function documentSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const document = message.content?.document;\n  if (!document) return;\n\n  const mediaHash = getMediaHash(document, \"download\");\n  if (!mediaHash) return;\n  if (checkIsImage(document.mimeType) && isAuto) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  // image\n  if (checkIsImage(document.mimeType)) {\n    handleImageToSummaryText({\n      mimeType: document.mimeType,\n      mediaHash,\n      message,\n      newMessage,\n      isAuto,\n    });\n    return;\n  }\n  // video\n  if (checkIsVideo(document.mimeType)) {\n    await handleAudioToSummaryText({\n      mediaHash,\n      mimeType: document?.mimeType,\n      filename: document?.fileName,\n      size: document?.size,\n      newMessage,\n      message,\n      isAuto,\n    });\n    return;\n  }\n\n  await mediaLoader.fetch(mediaHash, 0);\n  const blobUrl = mediaLoader.getFromMemory(mediaHash);\n  if (!blobUrl) return;\n\n  const response = await fetch(blobUrl);\n  const blob = await response.blob();\n\n  const arrayBuffer = await blob.arrayBuffer();\n  let text = \"\";\n  switch (document.mimeType) {\n    case \"text/plain\":\n      text = new TextDecoder().decode(arrayBuffer);\n      break;\n    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n    case \"application/msword\":\n      const result = await mammoth.extractRawText({ arrayBuffer });\n      text = result.value;\n      break;\n    case \"application/pdf\":\n      const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;\n      let pdfText = \"\";\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const content = await page.getTextContent();\n        const pageText = content.items.map((item: any) => item.str).join(\" \");\n        pdfText += pageText + \"\\n\";\n      }\n      text = pdfText;\n      break;\n    default:\n      await sendErrorMessage(newMessage, message, isAuto);\n      return;\n  }\n  if (text === \"\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  documentAISummary({\n    content: text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message: message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function voiceSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const voice = message.content?.voice;\n  if (!voice) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  let text = \"\";\n  const global = getGlobal();\n  const { isTranscriptionError, transcriptionId } = message;\n  if (isTranscriptionError) {\n    sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n  if (transcriptionId && transcriptionId !== \"\") {\n    text = global?.transcriptions?.[transcriptionId]?.text;\n  } else {\n    await getActions().transcribeAudio({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    await sleep(2000);\n    const newGlobal = getGlobal();\n    const currentMessage = selectChatMessage(\n      newGlobal,\n      message.chatId,\n      message.id\n    );\n    if (currentMessage?.isTranscriptionError) {\n      sendErrorMessage(newMessage, message, isAuto);\n      return;\n    }\n    if (\n      currentMessage?.transcriptionId &&\n      currentMessage?.transcriptionId !== \"\"\n    ) {\n      text = newGlobal.transcriptions?.[currentMessage?.transcriptionId]?.text;\n    }\n  }\n  if (text === \"\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n  documentAISummary({\n    content: text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message: message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function voiceToAudioSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const voice = message.content?.voice;\n  if (!voice) return;\n  const mediaHash = getMediaHash(voice, \"download\");\n  if (!mediaHash) return;\n  const maxBase64Length = Math.floor(4 * 1024 * 1024);\n  if (\n    message.content.audio?.size &&\n    message.content.audio?.size * (4 / 3) > maxBase64Length\n  ) {\n    showMessage.info(\"File size exceeds limit (4 MB)\");\n    return;\n  }\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: \"audio/ogg\",\n    filename: voice?.id + \".ogg\",\n    size: voice?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nexport async function audioSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const audio = message.content?.audio;\n  if (!audio) return;\n  const mediaHash = getMediaHash(audio, \"download\");\n  if (!mediaHash) return;\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: audio?.mimeType,\n    filename: audio?.fileName,\n    size: audio?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nexport async function videoSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const video = message.content?.video;\n  if (!video) return;\n  const mediaHash = getMediaHash(video, \"download\");\n  if (!mediaHash) return;\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n  if (video?.mimeType !== \"video/mp4\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: video?.mimeType,\n    filename: video?.fileName,\n    size: video?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nasync function sendMessageToAIRoom(newMessage: StoreMessage) {\n  await ChataiStores.message?.storeMessage(newMessage);\n  await eventEmitter.emit(Actions.AddRoomAIMessage, newMessage);\n}\n\nasync function handleAudioToSummaryText({\n  mediaHash,\n  mimeType,\n  filename,\n  size,\n  newMessage,\n  message,\n  isAuto,\n}: {\n  mediaHash: string;\n  mimeType?: string;\n  filename?: string;\n  size?: number;\n  newMessage: StoreMessage;\n  message: ApiMessage;\n  isAuto: boolean;\n}) {\n  try {\n    // check size\n    if (size && size > 4.5 * 1024 * 1024) {\n      showMessage.info(\"File size exceeds limit (4.5 MB)\");\n      newMessage = {\n        ...newMessage,\n        content: JSON.stringify({\n          message,\n          errorMsg: \"File size exceeds limit (4.5 MB)\",\n          isAuto,\n          status: \"error\",\n        }),\n      };\n      await sendMessageToAIRoom(newMessage);\n      return;\n    }\n    // download\n    await mediaLoader.fetch(mediaHash, 0);\n    const blobUrl = mediaLoader.getFromMemory(mediaHash);\n    if (!blobUrl) {\n      sendErrorMessage(newMessage, message, isAuto);\n      return;\n    }\n\n    const response = await fetch(blobUrl);\n    const blob = await response.blob();\n    //\n    const formData = new FormData();\n    formData.append(\"file\", blob, filename || \"audio.ogg\");\n    formData.append(\"language\", getAutoTransLang());\n    if (mimeType) formData.append(\"mimeType\", mimeType);\n\n    const summaryResponse: any = await audioAISummary(formData);\n    if (summaryResponse?.text) {\n      newMessage = {\n        ...newMessage,\n        content: JSON.stringify({\n          message,\n          summaryInfo: summaryResponse?.text,\n          isAuto,\n          status: \"success\",\n        }),\n      };\n      sendMessageToAIRoom(newMessage);\n    } else {\n      sendErrorMessage(newMessage, message, isAuto);\n    }\n  } catch (err) {\n    console.log(\"error\", err);\n    sendErrorMessage(newMessage, message, isAuto);\n  }\n}\n\nasync function handleImageToSummaryText({\n  mimeType,\n  mediaHash,\n  message,\n  newMessage,\n  isAuto,\n}: {\n  mimeType: string;\n  mediaHash: string;\n  message: ApiMessage;\n  newMessage: StoreMessage;\n  isAuto: boolean;\n}) {\n  // download\n  await mediaLoader.fetch(mediaHash, 0);\n  const blobUrl = mediaLoader.getFromMemory(mediaHash);\n  if (!blobUrl) {\n    sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  const response = await fetch(blobUrl);\n  const blob = await response.blob();\n\n  const reader = new FileReader();\n  reader.onloadend = function () {\n    const base64Data = reader.result?.toString().split(\",\")[1] || \"\";\n    imageAISummary({\n      image: `data:${mimeType};base64,` + base64Data,\n      language: getAutoTransLang(),\n    })\n      .then((response: any) => {\n        if (response?.text) {\n          newMessage = {\n            ...newMessage,\n            content: JSON.stringify({\n              message,\n              summaryInfo: JSON.stringify({ text: response?.text }),\n              isAuto,\n              status: \"success\",\n            }),\n          };\n          sendMessageToAIRoom(newMessage);\n        } else {\n          sendErrorMessage(newMessage, message, isAuto);\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n        sendErrorMessage(newMessage, message, isAuto);\n      });\n  };\n  reader.readAsDataURL(blob);\n}\n\nexport function canSummarize(message: ApiMessage) {\n  const { photo, document, webPage, voice, audio, text, video } =\n    message?.content;\n  const isUrl = checkIsUrl(text?.text);\n  const hasText = text?.text && text.text.trim() !== \"\";\n\n  return photo || document || (webPage && !hasText) || voice || audio || isUrl || video;\n}\n\nexport function isHasUrl(text?: string) {\n  const urls = extractUrls(text);\n  const hasUrl = urls.length > 0;\n\n  return hasUrl;\n}\n\nexport function checkIsUrl(text?: string) {\n  return (\n    typeof text === \"string\" &&\n    /^https?:\\/\\/[\\w\\-._~:/?#[\\]@!$&'()*+,;=%]+$/i.test(text)\n  );\n}\n\nexport function checkIsImage(mimeType: string) {\n  return mimeType.startsWith(\"image/\");\n}\n\nasync function sendErrorMessage(\n  newMessage: StoreMessage,\n  message: ApiMessage,\n  isAuto: boolean\n) {\n  newMessage = {\n    ...newMessage,\n    content: JSON.stringify({\n      message,\n      isAuto,\n      status: \"error\",\n    }),\n  };\n  await sendMessageToAIRoom(newMessage);\n}\n\nexport function getAutoTransLang() {\n  const global = getGlobal();\n  const { autoTranslateLanguage = \"en\" } = global.settings.byKey;\n\n  return (\n    new Intl.DisplayNames([autoTranslateLanguage], { type: \"language\" }).of(\n      autoTranslateLanguage\n    ) || \"en\"\n  );\n}\n\nexport function extractUrls(text?: string): string[] {\n  if (typeof text !== \"string\") return [];\n\n  const urlRegex = /https?:\\/\\/[\\w\\-._~:/?#[\\]@!$&'()*+,;=%]+/gi;\n  return text.match(urlRegex) || [];\n}\n\nexport function checkIsVideo(mimeType: string) {\n  return ['video/mp4'].indexOf(mimeType) >= 0;\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","/* eslint-disable max-len */\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectCurrentChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { useGlobalSummaryBadge } from '../hook/useGlobalSummaryBadge';\nimport RoomStorage from '../room-storage';\nimport { GLOBAL_SUMMARY_CHATID } from '../variables';\n\nimport ListItem from '../../ui/ListItem';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport SerenaPath from '../assets/serena.png';\n\ninterface StateProps {\n  isSelected: boolean;\n}\ninterface OwnProps {\n  offsetTop: number;\n  // frozenNotificationHeight: number;\n  // archiveHeight: number;\n  // unconfirmedSessionHeight: number;\n}\nconst ChatSerena = (props: OwnProps & StateProps) => {\n  const {\n    isSelected,\n    // frozenNotificationHeight,\n    // archiveHeight,\n    // unconfirmedSessionHeight,\n    offsetTop,\n  } = props;\n  // const offsetTop = frozenNotificationHeight + archiveHeight + unconfirmedSessionHeight;\n  const { openChat } = getActions();\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isSelected && 'selected',\n  );\n  const unreadCount = useGlobalSummaryBadge();\n  const handleClick = () => {\n    openChat({ id: GLOBAL_SUMMARY_CHATID });\n    RoomStorage.updateRoomAIData(GLOBAL_SUMMARY_CHATID, 'unreadCount', 0);\n  };\n  return (\n    <ListItem\n      className={chatClassName}\n      key={GLOBAL_SUMMARY_CHATID}\n      style={`top: ${offsetTop}px`}\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={handleClick}\n      withPortalForMenu\n    >\n      <img className=\"w-[54px] h-[54px] rounded-full mr-[12px]\" src={SerenaPath} alt=\"Tely AI\" />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className=\"title FullNameTitle-module__root\">\n            <h3 dir=\"auto\" role=\"button\" className=\"fullName FullNameTitle-module__fullName\">\n              Tely AI\n            </h3>\n          </div>\n        </div>\n        <div className=\"subtitle\">\n          <p className=\"last-message shared-canvas-container\" dir=\"ltr\">\n            Chat Summary\n          </p>\n          <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={unreadCount > 0}>\n            <div className=\"ChatBadge unread\">\n              {unreadCount}\n            </div>\n          </ShowTransition>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal(\n  (global) => {\n    const chat = selectCurrentChat(global);\n    const isSelected = GLOBAL_SUMMARY_CHATID === chat?.id;\n    return {\n      isSelected,\n    };\n  },\n)(ChatSerena));\n","import { useEffect, useState } from '../../../lib/teact/teact';\n\nimport eventEmitter, { Actions } from '../lib/EventEmitter';\nimport { GLOBAL_SUMMARY_CHATID } from '../variables';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nexport function useGlobalSummaryBadge() {\n  const [unreadCount, setUnreadCount] = useState(0);\n  const updateUnreadCount = useLastCallback((param:{ chatId:string; count:number }) => {\n    if (param.chatId === GLOBAL_SUMMARY_CHATID) {\n      setUnreadCount(param.count);\n    }\n  });\n  useEffect(() => {\n    const roomAIData = localStorage.getItem('room-ai-data');\n    const count = roomAIData ? JSON.parse(roomAIData)?.[GLOBAL_SUMMARY_CHATID]?.unreadCount || 0 : 0;\n    setUnreadCount(count);\n    eventEmitter.on(Actions.UpdateRoomAIUnreadCount, updateUnreadCount);\n    return () => {\n      eventEmitter.off(Actions.UpdateRoomAIUnreadCount, updateUnreadCount);\n    };\n  }, []);\n  return unreadCount;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\nimport { FolderType } from \"./ChatList\"\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: FolderType;\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React from '@teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport ChatSerena from '../../chatAssistant/global-summary/chat-serana.teact';\nimport { GLOBAL_SUMMARY_CHATID } from '../../chatAssistant/variables';\n\nimport {\n  AI_FOLDER_ID,\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  PRESET_FOLDER_ID,\n  SAVED_FOLDER_ID,\n  UNREAD_FOLDER_ID,\n} from '../../../config';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\nexport type FolderType = 'all' | 'archived' | 'saved' | 'folder' | 'preset' | 'unread' | 'ai';\n\ntype OwnProps = {\n  className?: string;\n  folderType: FolderType;\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n  isAccountFrozen?: boolean;\n  activeTag?: string[];\n  isMainList?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  isAccountFrozen,\n  isMainList,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const isPresetFolder = folderType === 'preset';\n  const isUnreadFolder = folderType === 'unread';\n  const isAIFolder = folderType === 'ai';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved\n      ? SAVED_FOLDER_ID : isPresetFolder ? PRESET_FOLDER_ID : isUnreadFolder\n        ? UNREAD_FOLDER_ID : isAIFolder ? AI_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        id === GLOBAL_SUMMARY_CHATID ? (\n          <ChatSerena\n            key=\"serena\"\n            // frozenNotificationHeight={frozenNotificationHeight}\n            // archiveHeight={archiveHeight}\n            // unconfirmedSessionHeight={unconfirmedSessionHeight}\n            offsetTop={offsetTop}\n          />\n        ) : (\n          <Chat\n            key={id}\n            teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n            chatId={id}\n            isPinned={isPinned}\n            folderId={folderId}\n            isSavedDialog={isSaved}\n            animationType={getAnimationType(id)}\n            orderDiff={orderDiffById[id]}\n            offsetTop={offsetTop}\n            observeIntersection={observe}\n            onDragEnter={handleDragEnter}\n          />\n        )\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React from '@teact';\nimport type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: ElementRef<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  const overscrollTriggerRef = useRef<HTMLDivElement>();\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable max-len */\nimport * as React from 'react';\n\nimport { cn } from '../utils/util';\n\nconst AITextarea = React.forwardRef<\nHTMLTextAreaElement,\nReact.ComponentProps<'textarea'>\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        'flex min-h-[45px] w-full border-box rounded-md border border-input bg-white px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:bg-black dark:placeholder:text-[#888888]',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nAITextarea.displayName = 'Textarea';\n\nexport { AITextarea };\n","import React from '@teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\n\nimport { isUserId } from '../../../util/entities/ids';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { cn } from '../../chatAssistant/utils/util';\n\nimport Avatar from '../../common/Avatar';\n\nconst UserPortraitAvatar = ({\n  chatId,\n  showName,\n  size,\n}: {\n  chatId: string;\n  showName?: boolean;\n  size?: number;\n}) => {\n  const { openChat } = getActions();\n  const global = getGlobal();\n  const isUser = isUserId(chatId);\n  let peer;\n  if (isUser) {\n    peer = selectUser(global, chatId);\n  } else {\n    peer = selectChat(global, chatId);\n  }\n\n  return (\n    <div\n      className=\"flex items-center gap-2 cursor-pointer\"\n      onClick={() => {\n        openChat({ id: chatId });\n      }}\n    >\n      <Avatar\n        key={chatId}\n        className={cn('overlay-avatar inline-block')}\n        size={size ?? 20}\n        peer={peer}\n      />\n      {showName && (\n        <div>\n          {isUser\n            ? `${(peer as ApiUser)?.firstName ?? ''} ${(peer as ApiUser)?.lastName ?? ''}`\n            : (peer as ApiChat)?.title}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserPortraitAvatar;\n","import dayjs from 'dayjs';\nimport React from '@teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type {\n  UserPortraitMessageInfo, UserPortraitMessageStory,\n} from '../../chatAssistant/store/user-portrait-message-store';\n\nimport buildClassName from '../../../util/buildClassName';\nimport CalendarIcon from '../../chatAssistant/assets/calendar.png';\nimport MessageIcon from '../../chatAssistant/assets/message.png';\nimport SerenaPath from '../../chatAssistant/assets/serena.png';\n\nimport MediaStory from '../../story/MediaStory';\nimport UserPortraitAvatar from './UserPortraitAvatar';\n\nconst SummaryTopicItem = ({\n  topicItem,\n  index,\n  chatId,\n}: {\n  topicItem: any;\n  index: number;\n  chatId?: string;\n}) => {\n  const { title, summaryItems } = topicItem;\n  // if (!summaryItems.length) return undefined;\n  if (!title || !chatId) return undefined;\n\n  const { focusMessage } = getActions();\n\n  function openMessageDetail(msgIds: number[]) {\n    if (!chatId) return;\n    const minId = Math.min(...msgIds);\n    if (minId) {\n      focusMessage({\n        chatId,\n        messageId: minId,\n      });\n    }\n  }\n\n  return (\n    <div className=\"px-3\">\n      <div className=\"flex flex-row items-center flex-wrap\">\n        <span className=\"font-[700] mr-[14px]\">\n          {index + 1}. {title}\n        </span>\n        <UserPortraitAvatar chatId={chatId} />\n      </div>\n      <ul className=\"list-disc pl-1 list-inside\">\n        {summaryItems.map((summaryItem: any) => {\n          const { content, relevantMessageIds } = summaryItem;\n          if (!content) return undefined;\n          return (\n            <li\n              role=\"button\"\n              className=\"cursor-pointer break-words\"\n              onClick={() => openMessageDetail(relevantMessageIds)}\n            >\n              {content}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nconst SummaryActivity = ({\n  data,\n  isLast,\n}: {\n  data: UserPortraitMessageInfo;\n  isLast: boolean;\n}) => {\n  return (\n    <div className={\n      buildClassName('flex flex-col border-b-[1px]', isLast ? 'border-[transparent]' : 'border-[#EDEDED]')\n    }\n    >\n      <div className=\"flex items-center justify-between gap-1 px-3\">\n        <div className=\"flex items-center gap-2\">\n          <img src={SerenaPath} className=\"w-[22px] h-[22px]\" alt=\"\" />\n          <div className=\"font-[600]\">Tely AI</div>\n        </div>\n        <div className=\"text-[12px] text-[#979797]\">\n          {dayjs(data?.time).format('MMM D')}, {data?.timeRange?.split('-')?.[1]}\n        </div>\n      </div>\n      <div className=\"my-2 px-3\">\n        <div className=\"flex items-center gap-[8px]\">\n          <img className=\"w-[16px] h-[16px]\" src={CalendarIcon} alt=\"\" />\n          <div className=\"flex items-center gap-[4px]\">\n            <span className=\"mr-[4px] font-bold text-[14px]\">Time range: </span>\n            {dayjs(data?.time).format('MMM D')}, {data?.timeRange}\n          </div>\n        </div>\n        <div className=\"flex items-center gap-[8px]\">\n          <img className=\"w-[16px] h-[16px]\" src={MessageIcon} alt=\"\" />\n          <div className=\"flex items-center gap-[4px]\">\n            <span className=\"font-bold text-[14px]\">Messages: </span>\n            {data?.messageCount ? <span>{data?.messageCount}</span> : undefined}\n          </div>\n        </div>\n      </div>\n      {data?.chatGroups?.map((chatGroup, index) => (\n        <SummaryTopicItem\n          key={chatGroup?.chatId}\n          chatId={chatGroup?.chatId}\n          topicItem={chatGroup}\n          index={index}\n        />\n      ))}\n    </div>\n  );\n};\nexport default SummaryActivity;\n\nexport const StoryActivity = ({\n  user,\n  data,\n  isLast,\n}: {\n  user: ApiUser;\n  data: UserPortraitMessageStory;\n  isLast: boolean;\n}) => {\n  return (\n    <div className={\n      buildClassName('flex flex-col pb-3 border-b-[1px]', isLast ? 'border-[transparent]' : 'border-[#EDEDED]')\n    }\n    >\n      <div className=\"flex items-center justify-between gap-1 px-3\">\n        <div className=\"flex items-center gap-2\">\n          <img src={SerenaPath} className=\"w-[22px] h-[22px]\" alt=\"\" />\n          <div className=\"font-[600]\">Tely AI</div>\n        </div>\n        <div className=\"text-[12px] text-[#979797]\">\n          {dayjs(data?.time).format('MMM D, HH:mm')}\n        </div>\n      </div>\n      <div className=\"ml-[25px] mt-2 px-3\">\n        <div className=\"mb-1\">\n          <span className=\"font-[600]\">{user?.firstName || ''} {user?.lastName || ''}</span>Post a Story\n        </div>\n        <MediaStory\n          story={(data as UserPortraitMessageStory).message}\n          isArchive={false}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from '@teact';\n\nimport type { ApiUser } from '../../../api/types';\nimport type {\n  UserPortraitMessageInfo,\n  UserPortraitMessageStory,\n} from '../../chatAssistant/store/user-portrait-message-store';\n\nimport SummaryActivity, { StoryActivity } from './SummaryActivity';\n\nfunction ActivityMessage({\n  user,\n  data,\n  isLast,\n}: {\n  user: ApiUser;\n  data: UserPortraitMessageInfo | UserPortraitMessageStory;\n  isLast: boolean;\n}) {\n  const isAiSummary = data.isSummary !== false;\n  const isStory = !isAiSummary ? data?.id?.split('-')[1] === 'story' : false;\n  return isAiSummary ? (\n    <SummaryActivity data={data as UserPortraitMessageInfo} isLast={isLast} />\n  ) : isStory ? (\n    <StoryActivity data={data as UserPortraitMessageStory} isLast={isLast} user={user} />\n  ) : (\n    undefined\n  );\n}\n\nexport default ActivityMessage;\n","import React from '@teact';\n/* eslint-disable max-len */\nimport dayjs from 'dayjs';\nimport { uniq } from 'lodash';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport {\n  selectTabState,\n  selectTheme,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePortrait from '../hooks/usePortrait';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Spinner from '../../ui/Spinner';\nimport ActivityMessage from './ActivityMessage';\nimport UserPortraitAvatar from './UserPortraitAvatar';\n\nimport './UserPortrait.scss';\nimport roomAistyles from '../../chatAssistant/room-ai/room-ai.module.scss';\nimport styles from '../../common/ProfileInfo.module.scss';\n\ntype StateProps = {\n  theme: ThemeKey;\n  user?: ApiUser;\n};\n\ntype OwnProps = {\n  userId: string;\n};\n\nexport const PortraitTagColors = [\n  '#E5D9FF',\n  '#CCD6FF',\n  '#B6FFCE',\n  '#FFD9D9',\n  '#FFD9FF',\n];\n\nconst UserPortrait: FC<StateProps & OwnProps> = ({ theme, userId, user }) => {\n  const {\n    loading, userPortraitInfo, chatTags, portraitMessage,\n  } = usePortrait({\n    userId,\n  });\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  function renderBasicInfo() {\n    return (\n      <>\n        <div className=\"flex flex-col gap-2 items-center justify-center\">\n          <Avatar\n            peer={user}\n            className={styles.fallbackPhotoAvatar}\n            size=\"giant\"\n          />\n          <FullNameTitle peer={user!} canCopyTitle />\n        </div>\n        <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[14px]\">\n          <div className=\"text-[16px] font-[700] mb-2\">Basic Description</div>\n          <div className=\"flex flex-col gap-1\">\n            {user?.usernames?.[0]?.username && (\n              <div>\n                <span className=\"font-[600]\">Username: </span>\n                {user?.usernames?.[0]?.username}\n              </div>\n            )}\n            <div>\n              <span className=\"font-[600]\">Alias/Nickname: </span>\n              {user?.firstName} {user?.lastName}\n            </div>\n            {userPortraitInfo?.langs && (\n              <div>\n                <span className=\"font-[600]\">Language: </span>\n                {`${\n                  userPortraitInfo?.langs?.[0]\n                    ? `${userPortraitInfo?.langs?.[0]}(Primary)`\n                    : ''\n                } ${\n                  userPortraitInfo?.langs?.[1]\n                    ? `, ${userPortraitInfo?.langs?.[1]}(Secondary)`\n                    : ''\n                }`}\n              </div>\n            )}\n            {userPortraitInfo?.tags && userPortraitInfo?.tags?.length > 0 && (\n              <>\n                <div>\n                  <span className=\"font-[600]\">Tags: </span>\n                </div>\n                <div className=\"flex flex-row flex-wrap items-center gap-2\">\n                  {userPortraitInfo?.tags?.map((tag, index) => (\n                    <div\n                      className=\"flex items-center justify-center px-2 rounded-[4px] h-[28px] text-[12px] font-[500] text-black\"\n                      style={`background: ${PortraitTagColors[index]}`}\n                    >\n                      {tag}\n                    </div>\n                  ))}\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function renderBehaGroup() {\n    return (\n      <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] p-3 text-[14px]\">\n        <div className=\"text-[16px] font-[700] mb-2\">\n          Behavioral Features & Group Participation\n        </div>\n        {userPortraitInfo?.chatCount && userPortraitInfo?.chatCount > 0 && (\n          <div>\n            <div className=\"font-[600]\">Group Coverage</div>\n            <div>\n              Participates in {userPortraitInfo?.chatCount} TG groups{' '}\n              {chatTags?.length > 0 && chatTags?.filter(Boolean).length > 0 && `(${uniq(chatTags).join(',')})`}\n            </div>\n          </div>\n        )}\n        {userPortraitInfo?.chatIds?.length && (\n          <div className=\"mt-2\">\n            <div className=\"font-[600]\">Key Groups</div>\n            <div className=\"flex flex-col gap-2 mt-2\">\n              {userPortraitInfo?.chatIds?.map((item) => {\n                return (\n                  <UserPortraitAvatar\n                    key={item}\n                    chatId={item}\n                    size={24}\n                    showName\n                  />\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderActivity() {\n    return (\n      <div className=\"rounded-[16px] bg-[var(--color-ai-room-media-bg)] text-[14px]\">\n        <div className=\"\n          rounded-t-[16px] text-[16px] font-[700] p-3\n          sticky top-[-10px] z-10\n          bg-[var(--color-ai-room-media-bg)]\n        \"\n        >\n          Activity Stream\n        </div>\n        {loading && (\n          <div className=\"flex items-center justify-center p-3\">\n            <Spinner\n              className=\"w-[18px] h-[18px] ml-2\"\n              color={theme === 'dark' ? 'white' : 'black'}\n            />\n          </div>\n        )}\n        {portraitMessage?.length && user ? (\n          <div className=\"flex flex-col gap-2\">\n            {portraitMessage?.sort((a:any, b:any) => {\n              return (\n                dayjs(b?.isSummary === false ? b?.time : `${b?.time} ${b?.timeRange?.split('-')[1]}`).unix())\n                  - (dayjs(a?.isSummary === false ? a?.time : `${a?.time} ${a?.timeRange?.split('-')[1]}`).unix());\n            })\n              ?.map((item, index) => (\n                <ActivityMessage\n                  user={user}\n                  data={item}\n                  isLast={index === portraitMessage.length - 1}\n                  key={item?.id}\n                />\n              ))}\n          </div>\n        ) : (\n          !loading && (\n            <div className=\"empty\">\n              {lang('NoMessages')}\n            </div>\n          )\n        )}\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    containerRef?.current?.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [userId]);\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={buildClassName(\n        roomAistyles.rightPanelBg,\n        'Portrait custom-scroll',\n      )}\n      noFastList\n    >\n      {renderBasicInfo()}\n      {userPortraitInfo ? renderBehaGroup() : undefined}\n      {renderActivity()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(\n  withGlobal((global): StateProps => {\n    const { userPortraitUserId } = selectTabState(global);\n    const user = userPortraitUserId\n      ? selectUser(global, userPortraitUserId)\n      : undefined;\n\n    return {\n      user,\n      theme: selectTheme(global),\n    };\n  })(UserPortrait),\n);\n","import { useCallback, useEffect, useState } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { TextMessage } from '../../../util/userPortrait';\nimport type { UserPortraitMessageInfo } from '../../chatAssistant/store/user-portrait-message-store';\nimport type { UserPortraitInfo } from '../../chatAssistant/store/user-portrait-store';\n\nimport {\n  getMessageBySendId,\n  groupMessagesByHalfHour,\n} from '../../../util/userPortrait';\nimport { replaceToJSON } from '../../chatAssistant/ai-chatfolders/util';\nimport { ChataiStores } from '../../chatAssistant/store';\nimport { checkIsUrl } from '../../chatAssistant/utils/ai-analyse-message';\nimport { chatAIGenerate } from '../../chatAssistant/utils/chat-api';\n\ntype Props = {\n  userId: string;\n};\n\nconst PROMPT = `\n  你是一个专业的数据分析师, 根据提供的消息内容进行分析, 并返回JSON格式数据;\n  # 格式要求\n    ## 去除所有换行符,确保 JSON 结构紧凑\n    ## 严格遵从JSON规范,确保所有的JSON数据正确\n  # 数据字段解析\n    ## langs: 根据提供的内容，判断出用的是哪种语言，如Chinese, English等; 最多给出两种，按使用频率排序\n    ## tags: 根据提供的内容，分析出用户的职业或涉及的行业, 给出最多5个标签;\n  # 返回的JSON格式示例\n    {\n      langs: ['Chinese', 'English'],\n      tags: ['Analytical Investor', 'DAO Governance'],\n    }\n`;\n\nconst SUMMARY_PROMPT = `\n## 输入字段解释\n   - chatGroups: 聊天组\n    - chatId: 群聊ID\n    - messages: 聊天记录\n     - content: 消息内容\n   - time: 日期\n   - timeRange: 时间范围\n# 输出格式要求\n    ## 去除所有换行符,确保 JSON 结构紧凑\n    ## 严格遵从JSON规范,确保所有的JSON数据正确\n## 各模块输出要求\n  ## mainTopic(主要话题)\n  - 目标：提取各群聊的主要话题、关键数据、时间节点、观点与行动建议，形成“日报风格”的结构化摘要。\n    - title：该群聊消息的主要话题简述，需简洁、明确、贴近群内讨论核心\n    - content：只提取有实际价值的信息，包括但不限于：\n           - 行情数据、交易记录、质押金额、区块信息等\n           - 涉及数字、价格、网址、时间等要素的内容\n           - 用户的观点、经验分享、操作建议、趋势判断等\n    - content 必须剔除下列内容：\n      - 单独的短语、问候、无意义的表情或单字回复（如“来了”“哈”“好”）\n      - 无法单独体现价值的闲聊碎片\n    - 如果多条短句连贯构成有价值的观点或讨论，请合并后保留\n    - 如果某个群聊**没有任何有价值的内容**，则**完全省略该群聊，不在输出中显示**\n    - 输出格式及字段说明：\n      [\n        {\n          time: 日期, // 原样返回\n          timeRange: '时间范围', // 原样返回\n          chatGroups: [{\n            chatId: 群聊ID, // 原样返回\n            title: '8-15字核心议题',\n            summaryItems: {       // 至少1条，最多5条\n              content: 子话题：数据+行为+建议\"结构'; 如无总结内容，则直接返回原信息\n              relevantMessageIds: [消息ID1, 消息ID2, ...], // 原样返回\n            }[]\n          }]\n        }\n      ]\n`;\n\nexport default function usePortrait({ userId }: Props) {\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState<TextMessage[]>([]);\n  const [userInfo, setUserInfo] = useState<UserPortraitInfo | undefined>(\n    undefined,\n  );\n  const [newUserInfo, setNewUserInfo] = useState<UserPortraitInfo | undefined>(\n    undefined,\n  );\n  const [portraitMessage, setPortraitMessage] = useState<\n  UserPortraitMessageInfo[]\n  >([]);\n  const [chatTags, setChatTags] = useState<string[]>([]);\n\n  const searchUserMessages = useCallback(\n    async (senderId: string) => {\n      setLoading(true);\n      const res = await getMessageBySendId(senderId);\n      setMessages(res?.filter((o: TextMessage) => !checkIsUrl(o?.content)));\n      setLoading(false);\n    },\n    [setMessages],\n  );\n\n  const getActivityMessage = useCallback(async (senderId: string) => {\n    const portraitInfo = await ChataiStores.userPortrait?.getUserPortrait(\n      senderId,\n    );\n    if (portraitInfo) {\n      setUserInfo(portraitInfo);\n      setNewUserInfo(portraitInfo);\n    } else {\n      setUserInfo(undefined);\n      setNewUserInfo(undefined);\n    }\n    const res = await ChataiStores.userPortraitMessage?.searchMessageBySenderId(\n      senderId,\n    );\n    setPortraitMessage(res);\n  }, []);\n\n  const handleSummaryMessages = useCallback(() => {\n    if (messages?.length === 0) return;\n    const maxId = Math.max(...messages.map((obj) => obj.messageId));\n    if ((!userInfo || !userInfo?.lastMsgId || (userInfo && userInfo?.lastMsgId < maxId))\n      && (userId === messages?.[0]?.senderId)\n    ) {\n      const lastMsgId = userInfo?.lastMsgId ?? 0;\n      const chatCountByChatId = messages.reduce((acc:{ [key:string]:number }, message) => {\n        acc[message.chatId] = (acc[message.chatId] || 0) + 1;\n        return acc;\n      }, {});\n      const sortedChatIds = Object.entries(chatCountByChatId)\n        .sort((a, b) => b[1] - a[1])\n        .map((entry) => entry[0]);\n\n      chatAIGenerate({\n        data: {\n          messages: [\n            { role: 'system', content: PROMPT },\n            {\n              role: 'user',\n              content: messages\n                ?.slice(0, 100)\n                ?.map((item) => item.content)\n                .join(' '),\n            },\n          ],\n        },\n        onResponse: (response) => {\n          const result = replaceToJSON(response);\n          const userObj = {\n            ...userInfo,\n            id: userId,\n            lastMsgId: maxId,\n            langs: result?.langs,\n            tags: result?.tags,\n            chatCount: Object.keys(chatCountByChatId).length,\n            chatIds: sortedChatIds,\n          };\n          ChataiStores.userPortrait?.addUserPortrait(userObj);\n          setNewUserInfo(userObj);\n        },\n      });\n\n      const groupMessages = groupMessagesByHalfHour(\n        messages.filter((msg) => msg.messageId > lastMsgId),\n      );\n      if (groupMessages.length === 0) return;\n      setLoading(true);\n      const global = getGlobal();\n      const { autoTranslateLanguage = 'en' } = global.settings.byKey;\n      chatAIGenerate({\n        data: {\n          messages: [\n            { role: 'system', content: SUMMARY_PROMPT },\n            { role: 'system', content: `响应必须完全用以下目标语言编写:${autoTranslateLanguage},不要使用其他语言。` },\n            { role: 'user', content: JSON.stringify(groupMessages) },\n          ],\n        },\n        onResponse: (response) => {\n          const result = replaceToJSON(response);\n          const resultArr: UserPortraitMessageInfo[] = [];\n          result?.forEach((item: any) => {\n            const sourceObj = groupMessages.find((o) => o?.timeRange === item?.timeRange && o?.time === item?.time);\n            const obj = {\n              id: `${userId}-(${item?.time})-(${item?.timeRange})`,\n              senderId: userId,\n              isSummary: true,\n              time: item?.time,\n              timeRange: item?.timeRange,\n              summaryTime: new Date().getTime(),\n              messageCount: sourceObj?.chatGroups?.reduce(\n                (pre: number, cur: any) => pre + ((cur?.messages || [])?.length ?? 0),\n                0,\n              ) ?? 0,\n              chatGroups: item?.chatGroups?.map((chatGroup: any) => ({\n                chatId: chatGroup?.chatId,\n                title: chatGroup?.title,\n                summaryItems: chatGroup?.summaryItems,\n              })),\n            };\n            ChataiStores.userPortraitMessage?.addUserPortraitMessage(obj);\n            resultArr.push(obj);\n          });\n          // delete old summary message TODO\n\n          setPortraitMessage((pre) => [...pre, ...resultArr]);\n          setLoading(false);\n        },\n        onFinish: () => {\n          setLoading(false);\n        },\n      });\n    }\n  }, [messages, userId, userInfo]);\n\n  const getChatTags = useCallback(() => {\n    const newChatTags: string[] = [];\n    if (newUserInfo?.chatIds && newUserInfo?.chatIds?.length > 0) {\n      newUserInfo?.chatIds?.slice(0, 5).forEach(async (chatI) => {\n        const chatFolder = await ChataiStores.aIChatFolders?.getAIChatFolder(chatI);\n        newChatTags.push(chatFolder?.summary);\n      });\n    }\n    setChatTags(newChatTags);\n  }, [newUserInfo?.chatIds]);\n\n  function resetState() {\n    setLoading(false);\n    setMessages([]);\n    setPortraitMessage([]);\n    setNewUserInfo({} as UserPortraitInfo);\n    setChatTags([]);\n  }\n\n  useEffect(() => {\n    handleSummaryMessages();\n  }, [messages?.length, userInfo?.lastMsgId, handleSummaryMessages]);\n\n  useEffect(() => {\n    getChatTags();\n  }, [getChatTags, newUserInfo?.chatIds]);\n\n  useEffect(() => {\n    resetState();\n    getActivityMessage(userId);\n    searchUserMessages(userId);\n  }, [userId, searchUserMessages, getActivityMessage]);\n\n  return {\n    userPortraitInfo: newUserInfo,\n    chatTags,\n    portraitMessage,\n    loading,\n  };\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig?.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React from '@teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","import React from '@teact';\nimport {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { UserPortraitInfo } from '../../chatAssistant/store/user-portrait-store';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { ChataiStores } from '../../chatAssistant/store';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport { PortraitTagColors } from '../../right/userPortrait/UserPortrait';\nimport ListItem from '../../ui/ListItem';\n\nconst DotIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={12}\n    height={3}\n    fill=\"none\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M1.268 0a1.267 1.267 0 1 1-.002 2.534A1.267 1.267 0 0 1 1.268 0Zm4.435 0a1.268 1.268 0 1 1 0 2.536 1.268 1.268 0 0 1 0-2.536Zm4.437 0a1.268 1.268 0 1 1 0 2.535 1.268 1.268 0 0 1 0-2.535Z\"\n    />\n  </svg>\n);\n\nconst PortraitEntry = ({ user } : { user: ApiUser }) => {\n  const oldLang = useOldLang();\n  const { openUserPortrait } = getActions();\n\n  const [userInfo, setUserInfo] = useState<UserPortraitInfo>();\n\n  const handlePortraitClick = useLastCallback(() => {\n    openUserPortrait({ userId: user?.id! });\n  });\n\n  const getUserPortrait = useCallback(async (senderId: string) => {\n    if (!senderId) return;\n    const portraitInfo = await ChataiStores.userPortrait?.getUserPortrait(\n      senderId,\n    );\n    if (portraitInfo) {\n      setUserInfo(portraitInfo);\n    } else {\n      setUserInfo(undefined);\n    }\n  }, []);\n\n  useEffect(() => {\n    getUserPortrait(user?.id);\n  }, [user?.id, getUserPortrait]);\n\n  return (\n    <ListItem\n      icon=\"portrait-large-icon\"\n      iconClassName={buildClassName(userInfo?.tags?.length ? 'pb-[40px]' : '')}\n      multiline\n      narrow\n      ripple\n      onClick={handlePortraitClick}\n    >\n      <span className=\"title\">\n        <span className=\"font-[600]\">{(user?.firstName || '') + (user?.lastName || '')}</span>‘s portrait\n      </span>\n      {userInfo?.tags && userInfo?.tags?.length > 0 && (\n        <div className=\"flex items-center gap-1 my-1\">\n          {userInfo?.tags?.slice(0, 1)?.map((tag, index) => (\n            <div\n              className=\"flex items-center justify-center px-2 rounded-[4px] h-[24px] text-[12px] font-[500]\"\n              style={`background: ${PortraitTagColors[index]}`}\n            >\n              {tag}\n            </div>\n          ))}\n          {userInfo?.tags?.length > 1 && (\n            <div\n              className=\"flex items-center justify-center px-2 rounded-[4px] h-[24px]\"\n              style={`background: ${PortraitTagColors[1]}`}\n            >\n              <DotIcon />\n            </div>\n          )}\n        </div>\n      )}\n      <span className=\"subtitle\">{oldLang('User Portrait')}</span>\n    </ListItem>\n  );\n};\n\nexport default memo(PortraitEntry);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React from '@teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport PortraitEntry from './PortraitEntry';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && (\n        <>\n          {renderUsernames(activeUsernames)}\n          {user && <PortraitEntry user={user} />}\n        </>\n      )}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import React from '@teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig?.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_WINDOW_BUTTONS_POSITION = 'set-window-buttons-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type WindowButtonsPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setWindowButtonsPosition: (position: WindowButtonsPosition) => Promise<void>;\n  /**\n   * @deprecated Use `setWindowButtonsPosition` instead\n   */\n  setTrafficLightPosition: (position: WindowButtonsPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  googleLogin: () => Promise<any>;\n\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n    };\n  },\n)(Chat));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): StateProps => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useEffect, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport { ELECTRON_WINDOW_DRAG_EVENT_START } from '../config';\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  useEffect(() => {\n    document.body.addEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n\n    return () => {\n      document.body.removeEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","import type { FC } from 'react';\nimport React, { useEffect, useLayoutEffect, useRef } from 'react';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { MouseButton } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport forceReflow from '../../../util/forceReflow';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        <i className=\"platform\" />\n      </span>\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC } from 'react';\nimport React, { memo, useEffect, useRef } from 'react';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport usePreviousDeprecated from '../hook/usePreviousDeprecated';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  className?: string;\n  tabClassName?: string;\n  inversion?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, onSwitchTab, className, tabClassName, inversion,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePreviousDeprecated(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useOldLang();\n\n  return (\n    <div\n      className={buildClassName('TabList', 'no-scrollbar', inversion && 'inversion', className)}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id}\n          title={tab.title}\n          isActive={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          className={tabClassName}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import React from '@teact';\nimport {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n  const svgRef = useRef<SVGSVGElement>();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import React from '@teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React from '@teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SVG_EXTENSIONS } from '../../config';\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onSelect?: () => void;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onSelect,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onSelect={onSelect}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nexport interface InjectReactComponentOptions<P = {}> {\n  component: React.ComponentType<P>;\n  props?: P;\n}\n\nexport function injectComponent<P extends {} = {}>({\n  component: Component,\n  props,\n}: InjectReactComponentOptions<P>) {\n  return (domRoot: HTMLElement | undefined) => {\n    if (!domRoot) {\n      return { unmount: () => {} };\n    }\n\n    if (!(domRoot as any)._reactRoot) {\n      (domRoot as any)._reactRoot = ReactDOM.createRoot(domRoot);\n    }\n\n    try {\n      // 使用 PropsWithChildren 解决 IntrinsicAttributes 类型报错\n      (domRoot as any)._reactRoot.render(\n        React.createElement(Component as React.ComponentType<React.PropsWithChildren<P>>, props)\n      );\n    } catch (err) {\n      console.error('Failed to render React component:', err);\n      return { unmount: () => {} };\n    }\n\n    return {\n      unmount: () => {\n        (domRoot as any)._reactRoot?.unmount();\n        (domRoot as any)._reactRoot = null;\n      },\n    };\n  };\n}","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n      openUserPortrait\n    } = getActions();\n\n    const actionUserPortrait = isUserId(chat.id) ? {\n      title: 'User Portrait',\n      icon: 'portrait-icon',\n      handler: () => {\n        openUserPortrait({\n          chatId: chat.id,\n          userId: chat.id,\n        });\n      },\n    } : undefined;\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionUserPortrait,\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"rightPanelBg\":\"ZfJHpS2Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import React from '@teact';\nimport type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\n// import DropdownMenu from '../ui/DropdownMenu';\n// import MenuItem from '../ui/MenuItem';\n// import MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  // canTranslate,\n  // isTranslating,\n  // translationLanguage,\n  // language,\n  // detectedChatLanguage,\n  // doNotTranslate,\n  onTopicSearch,\n  isAccountFrozen,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    // requestChatTranslation,\n    // togglePeerTranslations,\n    // openChatLanguageModal,\n    // setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    // openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  // const handleTranslateClick = useLastCallback(() => {\n  //   if (isTranslating) {\n  //     requestChatTranslation({ chatId, toLanguageCode: undefined });\n  //     return;\n  //   }\n\n  //   requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  // });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      // openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  // const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n  //   const simplified = langCode.split('-')[0];\n  //   const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n  //   const name = lang(translationKey);\n  //   if (name !== translationKey) {\n  //     return lang(langKey, name);\n  //   }\n\n  //   const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n  //   const translatedName = translatedNames.of(langCode)!;\n  //   return lang(`${langKey}Other`, translatedName);\n  // });\n\n  // const buttonText = useMemo(() => {\n  //   if (isTranslating) return lang('ShowOriginalButton');\n\n  //   return getTextWithLanguage('TranslateToButton', translationLanguage);\n  // }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  // const doNotTranslateText = useMemo(() => {\n  //   if (!detectedChatLanguage) return undefined;\n\n  //   return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  // }, [getTextWithLanguage, detectedChatLanguage]);\n\n  // const handleHide = useLastCallback(() => {\n  //   togglePeerTranslations({ chatId, isEnabled: false });\n  //   requestChatTranslation({ chatId, toLanguageCode: undefined });\n  // });\n\n  // const handleChangeLanguage = useLastCallback(() => {\n  //   openChatLanguageModal({ chatId });\n  // });\n\n  // const handleDoNotTranslate = useLastCallback(() => {\n  //   if (!detectedChatLanguage) return;\n\n  //   setSettingOption({\n  //     doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n  //   });\n  //   requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n  //   showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  // });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  // const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n  //   return ({ onTrigger, isOpen }) => (\n  //     <Button\n  //       round\n  //       ripple={isRightColumnShown}\n  //       color=\"translucent\"\n  //       size=\"smaller\"\n  //       className={isOpen ? 'active' : ''}\n  //       onClick={onTrigger}\n  //       ariaLabel={lang('TranslateMessage')}\n  //     >\n  //       <Icon name=\"language\" />\n  //     </Button>\n  //   );\n  // }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {/* {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )} */}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import React from '@teact';\nimport type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","import React from '@teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import React from '@teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig?.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import React from '@teact';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onSelect?: () => void;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onSelect,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined} onClick={onSelect}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React from '@teact';\nimport {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(oldLang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import cx from 'classnames';\nimport React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { MessageListType } from '../../../types';\n\nimport eventEmitter from '../lib/EventEmitter';\nimport {\n  getMessageContent, hasMessageText, isOwnMessage, isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectAllowedMessageActionsSlow, selectCanTranslateMessage, selectChat, selectChatFullInfo, selectCurrentMessageList,\n  selectMessageTranslations,\n  selectRequestedMessageTranslationLanguage,\n} from '../../../global/selectors';\nimport { isUserId } from '../../../util/entities/ids';\nimport {\n  audioSummary, canSummarize,\n  checkIsUrl, documentSummary, photoSummary, videoSummary, voiceToAudioSummary, webPageSummary,\n} from '../utils/ai-analyse-message';\nimport { chatAIGenerate } from '../utils/chat-api';\nimport { createAuthConfirmModal } from '../utils/google-api';\nimport { getAuthState, isTokenValid } from '../utils/google-auth';\nimport {\n  AIReplyIcon, AITranslateIcon, MeetingIcon, SummarizeIcon,\n} from '../utils/icons';\nimport ScheduleMeeting from '../utils/schedule-meeting';\nimport { knowledgeEmbeddingStore } from '../vector-store';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './message-gpt-menu.scss';\n\nimport SerenaPath from '../assets/serena.png';\n\nconst menuItemClass = 'w-[20px] h-[20px] text-[16px] cursor-pointer flex items-center justify-center';\n\ntype StateProps = {\n  message: ApiMessage;\n  canScheduleMeeting: boolean;\n  canAISummarize: any;\n  canSmartReply: boolean | undefined;\n  canTranslate: boolean | undefined;\n};\n type OwnProps = {\n   message: ApiMessage;\n   messageListType: MessageListType;\n   detectedLanguage?: string;\n   position: 'top' | 'bottom';\n };\n\nconst MessageGptMenu: FC<OwnProps & StateProps> = ({\n  message, position, canScheduleMeeting, canAISummarize, canSmartReply, canTranslate,\n}) => {\n  const canSerenaAI = canScheduleMeeting || canAISummarize || canSmartReply || canTranslate;\n  const [isSchedulingMeeting, setIsSchedulingMeeting] = useState(false);\n\n  const handleScheduleMeeting = useLastCallback(() => {\n    if (isSchedulingMeeting) return;\n\n    setIsSchedulingMeeting(true);\n    const chatId = message.chatId;\n    const text = getMessageContent(message)?.text?.text || '';\n    const scheduleMeeting = ScheduleMeeting.create({ chatId });\n    const auth = getAuthState();\n\n    const startMeeting = () => {\n      scheduleMeeting.start({\n        chatId,\n        text,\n      });\n      // Reset the flag after a delay to prevent rapid clicks\n      setTimeout(() => setIsSchedulingMeeting(false), 2000);\n    };\n\n    if (!auth || !isTokenValid(auth)) {\n      createAuthConfirmModal({\n        onOk: startMeeting,\n        onCancel: () => setIsSchedulingMeeting(false),\n      });\n    } else {\n      startMeeting();\n    }\n  });\n  const handleSmartReply = useLastCallback(async () => {\n    if (message.content.text?.text) {\n      getActions().updateDraftReplyInfo({\n        replyToMsgId: message.id, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n      });\n      const vectorSearchResults = await knowledgeEmbeddingStore.similaritySearch({\n        query: message.content.text?.text,\n      });\n        type Metadata = { answer: string }; // Define the type for metadata\n        const similarResult = vectorSearchResults.similarItems[0] as { metadata: Metadata; score: number } | undefined;\n        if (similarResult && similarResult.score > 0.8) {\n          eventEmitter.emit('update-input-text', similarResult.metadata.answer);\n        } else {\n          eventEmitter.emit('update-input-spiner', true);\n          chatAIGenerate({\n            data: {\n              messages: [\n                {\n                  role: 'system',\n                  content: '你是一个多语种智能助手。接收用户消息后，自动识别其使用的语言，并用相同的语言进行自然、得体的回复。你应该理解消息的语境，确保回复简洁、友好且符合语言习惯。',\n                  id: '1',\n                },\n                {\n                  role: 'user',\n                  content: `请回复下面的消息: ${message.content.text?.text}`,\n                  id: '2',\n                },\n              ],\n            },\n            onResponse: (response) => {\n              eventEmitter.emit('update-input-text', response);\n            },\n            onFinish: () => {\n              // eslint-disable-next-line no-console\n              console.log('Finish');\n            },\n          });\n        }\n    }\n  });\n  const handleSummarize = useLastCallback(async () => {\n    const {\n      photo, document, webPage, voice, audio, text, video,\n    } = message.content;\n    const isUrl = checkIsUrl(text?.text);\n    await getActions().openChatAIWithInfo({ chatId: message.chatId });\n    if (photo) {\n      photoSummary(message);\n    } else if ((webPage && !text?.text) || isUrl) {\n      webPageSummary(message);\n    } else if (document) {\n      documentSummary(message);\n    } else if (voice) {\n      voiceToAudioSummary(message);\n    } else if (audio) {\n      audioSummary(message);\n    } else if (video) {\n      videoSummary(message);\n    }\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    getActions().requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n  });\n\n  if (!canSerenaAI) {\n    return undefined;\n  }\n\n  return (\n    <div className={cx('message-gpt-menu', position === 'top' ? 'top-[-32px]' : 'bottom-[-32px]')}>\n      <div className=\"message-gpt-menu-inner\">\n        <div className={cx('!cursor-auto', menuItemClass)}>\n          <img className=\"w-[20px] h-[20px] mt-[-4px]\" src={SerenaPath} alt=\"\" />\n        </div>\n        {canTranslate && (\n          <div className={menuItemClass} onClick={handleTranslate} title=\"Translate\">\n            <AITranslateIcon size={16} />\n          </div>\n        )}\n        {canScheduleMeeting && (\n          <div className={menuItemClass} onClick={handleScheduleMeeting} title=\"Schedule meeting\">\n            <MeetingIcon size={16} />\n          </div>\n        )}\n        {canAISummarize && (\n          <div className={menuItemClass} onClick={handleSummarize} title=\"Summarize\">\n            <SummarizeIcon size={16} />\n          </div>\n        )}\n        {canSmartReply && (\n          <div className={menuItemClass} onClick={handleSmartReply} title=\"Smart Reply\">\n            <AIReplyIcon size={16} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default memo(withGlobal<OwnProps>((global, { message, messageListType, detectedLanguage }): StateProps => {\n  const isOwn = isOwnMessage(message);\n  const hasTextContent = hasMessageText(message);\n  const canAISummarize = canSummarize(message);\n  const isPinned = messageListType === 'pinned';\n  const isScheduled = messageListType === 'scheduled';\n  const chat = selectChat(global, message.chatId);\n  const isPrivate = chat && isUserId(chat.id);\n  const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n  const { threadId } = selectCurrentMessageList(global) || {};\n  const {\n    canReplyGlobally,\n  } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n  const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n  const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n  const hasTranslation = translationRequestLanguage\n    ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n    : undefined;\n  const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n  return {\n    message,\n    canScheduleMeeting: !isOwn && hasTextContent,\n    canAISummarize,\n    canSmartReply: !isOwn && !isPinned && !isScheduled && canReplyGlobally && canSendText && hasTextContent,\n    canTranslate,\n  };\n})(MessageGptMenu));\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import React from '@teact';\nimport type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React from '@teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React from '@teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import React from '@teact';\nimport type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import React from '@teact';\nimport type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React from '@teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig?.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React from '@teact';\nimport { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import React from '@teact';\nimport {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React from '@teact';\nimport { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY, STARS_SUGGESTED_POST_FUTURE_MIN } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageTranslations,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport MessageGptMenu from '../../chatAssistant/component/message-gpt-menu';\nimport useMessageGptMenuHandlers from '../../chatAssistant/hook/useMessageGptMenuHandlers';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  hasTranslation?: boolean;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  hasTranslation,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n  const messageContentRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  const { isGptMenuOpen, gptMenuPosition } = useMessageGptMenuHandlers(messageContentRef);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n  const shouldTranslate = isMessageTranslatable(message, true);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n  //   chatTranslations, chatId, shouldTranslate ? messageId : undefined, autoTranslateLanguage,\n  // );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage || hasTranslation ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        ref={messageContentRef}\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={oldLang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n          {isGptMenuOpen && (\n            <MessageGptMenu\n              position={gptMenuPosition}\n              message={message}\n              messageListType={messageListType}\n              detectedLanguage={detectedLanguage}\n            />\n          )}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const hasTranslation = requestedTranslationLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, requestedTranslationLanguage)[message.id]?.text)\n      : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig?.starsSuggestedPostFutureMin || STARS_SUGGESTED_POST_FUTURE_MIN;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      hasTranslation,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice: true,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../lib/teact/teact';\n\nconst useMessageGptMenuHandlers = (\n  elementRef: RefObject<HTMLElement | undefined>,\n) => {\n  const [isGptMenuOpen, setIsGptMenuOpen] = useState(false);\n  const [gptMenuPosition, setGptMenuPosition] = useState<'top' | 'bottom'>('bottom');\n  const [isScrolling, setIsScrolling] = useState(false);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-null/no-null\n    let scrollTimeout: number | null = null;\n\n    const onScroll = () => {\n      setIsScrolling(true);\n      if (scrollTimeout) window.clearTimeout(scrollTimeout);\n      scrollTimeout = window.setTimeout(() => {\n        setIsScrolling(false);\n      }, 200);\n    };\n\n    window.addEventListener('scroll', onScroll, true); // 监听冒泡阶段的滚动事件\n\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n      if (scrollTimeout) window.clearTimeout(scrollTimeout);\n    };\n  }, []);\n\n  useEffect(() => {\n    const el = elementRef?.current;\n    if (!el) return undefined;\n\n    const handleMouseEnter = () => {\n      if (isScrolling) return;\n      const rect = el.getBoundingClientRect();\n      const distanceToBottom = window.innerHeight - rect.bottom;\n\n      if (distanceToBottom < 150) {\n        setGptMenuPosition('top');\n      } else {\n        setGptMenuPosition('bottom');\n      }\n      setIsGptMenuOpen(true);\n    };\n    const handleMouseLeave = () => setIsGptMenuOpen(false);\n\n    el.addEventListener('mouseenter', handleMouseEnter);\n    el.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      el.removeEventListener('mouseenter', handleMouseEnter);\n      el.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [elementRef, isScrolling]);\n\n  return { isGptMenuOpen, gptMenuPosition };\n};\n\nexport default useMessageGptMenuHandlers;\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n  ApiWebPage,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type {\n  CoreAssistantMessage,\n  CoreToolMessage,\n  Message,\n} from 'ai';\nimport { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\ninterface ApplicationError extends Error {\n  info: string;\n  status: number;\n}\n\nexport const fetcher = async (url: string) => {\n  const res = await fetch(url);\n\n  if (!res.ok) {\n    const error = new Error(\n      'An error occurred while fetching the data.',\n    ) as ApplicationError;\n\n    error.info = await res.json();\n    error.status = res.status;\n\n    throw error;\n  }\n\n  return res.json();\n};\n\nexport function getLocalStorage(key: string) {\n  if (typeof window !== 'undefined') {\n    return JSON.parse(localStorage.getItem(key) || '[]');\n  }\n  return [];\n}\n\nexport function generateUUID(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nfunction addToolMessageToChat({\n  toolMessage,\n  messages,\n}: {\n  toolMessage: CoreToolMessage;\n  messages: Array<Message>;\n}): Array<Message> {\n  return messages.map((message) => {\n    if (message.toolInvocations) {\n      return {\n        ...message,\n        toolInvocations: message.toolInvocations.map((toolInvocation) => {\n          const toolResult = toolMessage.content.find(\n            (tool) => tool.toolCallId === toolInvocation.toolCallId,\n          );\n\n          if (toolResult) {\n            return {\n              ...toolInvocation,\n              state: 'result',\n              result: toolResult.result,\n            };\n          }\n\n          return toolInvocation;\n        }),\n      };\n    }\n\n    return message;\n  });\n}\n\ntype ResponseMessageWithoutId = CoreToolMessage | CoreAssistantMessage;\ntype ResponseMessage = ResponseMessageWithoutId & { id: string };\n\nexport function sanitizeResponseMessages({\n  messages,\n  reasoning,\n}: {\n  messages: Array<ResponseMessage>;\n  reasoning: string | undefined;\n}) {\n  const toolResultIds: Array<string> = [];\n\n  for (const message of messages) {\n    if (message.role === 'tool') {\n      for (const content of message.content) {\n        if (content.type === 'tool-result') {\n          toolResultIds.push(content.toolCallId);\n        }\n      }\n    }\n  }\n\n  const messagesBySanitizedContent = messages.map((message) => {\n    if (message.role !== 'assistant') return message;\n\n    if (typeof message.content === 'string') return message;\n\n    const sanitizedContent = message.content.filter((content) => (content.type === 'tool-call'\n      ? toolResultIds.includes(content.toolCallId)\n      : content.type === 'text'\n        ? content.text.length > 0\n        : true));\n\n    if (reasoning) {\n      // @ts-expect-error: reasoning message parts in sdk is wip\n      sanitizedContent.push({ type: 'reasoning', reasoning });\n    }\n\n    return {\n      ...message,\n      content: sanitizedContent,\n    };\n  });\n\n  return messagesBySanitizedContent.filter(\n    (message) => message.content.length > 0,\n  );\n}\n\nexport function sanitizeUIMessages(messages: Array<Message>): Array<Message> {\n  const messagesBySanitizedToolInvocations = messages.map((message) => {\n    if (message.role !== 'assistant') return message;\n\n    if (!message.toolInvocations) return message;\n\n    const toolResultIds: Array<string> = [];\n\n    for (const toolInvocation of message.toolInvocations) {\n      if (toolInvocation.state === 'result') {\n        toolResultIds.push(toolInvocation.toolCallId);\n      }\n    }\n\n    const sanitizedToolInvocations = message.toolInvocations.filter(\n      (toolInvocation) => toolInvocation.state === 'result'\n        || toolResultIds.includes(toolInvocation.toolCallId),\n    );\n\n    return {\n      ...message,\n      toolInvocations: sanitizedToolInvocations,\n    };\n  });\n\n  return messagesBySanitizedToolInvocations.filter(\n    (message) => message.content.length > 0\n      || (message.toolInvocations && message.toolInvocations.length > 0),\n  );\n}\n\nexport function getMostRecentUserMessage(messages: Array<Message>) {\n  const userMessages = messages.filter((message) => message.role === 'user');\n  return userMessages.at(-1);\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nimport type { SummaryStoreMessage } from '../store/summary-store';\n\nexport const createIntroduceMeetingMessage = ():SummaryStoreMessage => {\n  return {\n    timestamp: new Date().getTime(),\n    content: '',\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: 'assistant',\n    annotations: [{\n      type: 'global-meeting-introduce',\n    }],\n  };\n};\nexport const createIntroduceSummaryMessage = ():SummaryStoreMessage => {\n  return {\n    timestamp: new Date().getTime(),\n    content: '',\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: 'assistant',\n    annotations: [{\n      type: 'global-summary-introduce',\n    }],\n  };\n};\nexport const createIntroduceTranslationMessage = ():SummaryStoreMessage => {\n  return {\n    timestamp: new Date().getTime(),\n    content: '',\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: 'assistant',\n    annotations: [{\n      type: 'global-translation-introduce',\n    }],\n  };\n};\nexport const createIntroduceActionsMessage = ():SummaryStoreMessage => {\n  return {\n    timestamp: new Date().getTime(),\n    content: '',\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: 'assistant',\n    annotations: [{\n      type: 'global-actions-introduce',\n    }],\n  };\n};\n\nexport const createGlobalIntroduceMessage = ():SummaryStoreMessage => {\n  return {\n    timestamp: new Date().getTime(),\n    content: '',\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: 'assistant',\n    annotations: [{\n      type: 'global-introduce',\n    }],\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React from '@teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React from '@teact';\nimport {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React from '@teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import React from '@teact';\nimport type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","/* eslint-disable no-console */\nclass GrammarChecker {\n  private languageToolURL: string;\n\n  constructor() {\n    this.languageToolURL = 'https://api.languagetoolplus.com/v2/check';\n  }\n\n  public async saplingEditOverview(text: string) {\n    const params = new URLSearchParams({\n      text,\n      language: 'en-US',\n      useragent: 'standalone',\n      disabledRules: 'WHITESPACE_RULE',\n      mode: 'allButTextLevelOnly',\n      allowIncompleteResults: 'true',\n    });\n\n    try {\n      const response = await fetch(this.languageToolURL, {\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: params.toString(),\n        method: 'POST',\n      });\n      const data = await response.json();\n\n      console.log('LanguageTool response:', JSON.stringify(data));\n      return data.matches.map((m:any) => {\n        if (m.replacements && m.replacements.length) {\n          return {\n            description: m.rule.description,\n            start: m.offset,\n            end: m.offset + m.length,\n            id: m.rule.id,\n            general_error_type: m.rule.category.id.toLowerCase(),\n            error_type: GrammarChecker.classifyTypeGramma(m.rule),\n            replacement: m.replacements[0]?.value || '',\n            isPremium: !!m.rule?.isPremium,\n            shortMessage: m.shortMessage || '',\n            original_text: text.substring(m.offset, m.offset + m.length),\n            sentence: m.sentence,\n            sentence_start: text.indexOf(m.sentence),\n          };\n        }\n        return undefined;\n      }).filter(Boolean);\n    } catch (err) {\n      console.log(err);\n      return [];\n    }\n  }\n\n  public static classifyTypeGramma(rule:any) {\n    const category = rule?.category?.id?.toLowerCase() || '';\n    return category;\n  }\n\n  public async check(text: string) {\n    const editorData = await this.saplingEditOverview(text);\n    return editorData;\n  }\n}\n\nexport const sapling = new GrammarChecker();\n","/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable new-cap */\nimport {\n  useCallback, useEffect, useMemo, useRef, useState,\n} from 'react';\nimport { diff_match_patch } from 'diff-match-patch';\nimport debounce from 'lodash.debounce';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { sapling } from '../../utils/grammar';\n\nexport interface CorrectionItem {\n  description:string;\n  end: number;\n  error_type: string;\n  general_error_type: string;\n  id: string;\n  replacement: string;\n  sentence: string;\n  sentence_start: number;\n  original_text:string;\n  start: number;\n}\n\nexport interface ErrorMarker {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n  start: number;\n  end: number;\n  replacement: string;\n  general_error_type: string;\n}\n\nconst dmp = new diff_match_patch();\n\nfunction getTextNodes(node: HTMLElement) {\n  const walker = document.createTreeWalker(node, NodeFilter.SHOW_TEXT, null);\n  const textNodes: Node[] = [];\n  while (walker.nextNode()) textNodes.push(walker.currentNode);\n  return textNodes;\n}\n\nfunction getNodeForIndex(textNodes: Node[], index: number) {\n  let remaining = index;\n  for (const node of textNodes) {\n    if (node.nodeType !== Node.TEXT_NODE) continue;\n    const textLength = (node as Text).length;\n    if (remaining <= textLength) {\n      return { node, offset: remaining };\n    }\n    remaining -= textLength;\n  }\n  return { node: null, offset: 0 };\n}\n\nfunction getUnderlineOffset(rect: DOMRect, containerRect: DOMRect, editableDiv: HTMLElement) {\n  const computed = getComputedStyle(editableDiv);\n  const lineHeight = parseFloat(computed.lineHeight || '16');\n  return {\n    left: rect.left - containerRect.left,\n    top: rect.top - containerRect.top,\n    width: rect.width,\n    height: lineHeight,\n  };\n}\n\nfunction pruneInvalidRanges(text: string, corrections: CorrectionItem[]) {\n  return corrections.filter(({ start, end, original_text }) => {\n    if (end > text.length) return false;\n    const span = text.slice(start, end);\n    return span === original_text && /\\S/.test(span);\n  });\n}\n\nfunction updateErrorOffsetsWithInvalidateInner(\n  oldText:string,\n  newText:string,\n  corrections:CorrectionItem[],\n):CorrectionItem[] {\n  const diffs = dmp.diff_main(oldText, newText);\n  dmp.diff_cleanupSemantic(diffs);\n\n  const newErrors: CorrectionItem[] = [];\n  let oldCursor = 0;\n\n  for (const err of corrections) {\n    const start = err.start;\n    const end = err.end;\n    let valid = true;\n    let offset = 0;\n    oldCursor = 0;\n\n    for (const [op, text] of diffs) {\n      const len = text.length;\n\n      if (op === 0) {\n        oldCursor += len;\n      } else if (op === -1) {\n        // deletion\n        if (oldCursor + len <= start) {\n          offset -= len;\n          oldCursor += len;\n        } else if (oldCursor < end) {\n          valid = false;\n          break;\n        }\n      } else if (op === 1) {\n        // insertion\n        if (oldCursor <= start) {\n          offset += len;\n        } else if (oldCursor < end) {\n          valid = false;\n          break;\n        }\n      }\n    }\n\n    if (valid) {\n      newErrors.push({\n        ...err,\n        start: start + offset,\n        end: end + offset,\n      });\n    }\n  }\n  return newErrors;\n}\n\nexport function useGrammarChecker(\n  inputRef: React.RefObject<HTMLElement | undefined>,\n  getHtml: Signal<string>,\n  setHtml: (newValue: string) => void,\n  {\n    delay = 1000,\n  }: {\n    delay?: number;\n  },\n) {\n  const [errorRanges, setErrorRanges] = useState<CorrectionItem[]>([]);\n  const [spalingLoading, setSpalingLoading] = useState(false);\n  const [errorMarkers, setErrorMarkers] = useState<ErrorMarker[]>([]);\n  const lastTextRef = useRef('');\n  const lastCheckTimeRef = useRef(Date.now());\n\n  const highLightErrors = useCallback(() => {\n    const textarea = inputRef.current;\n    if (!textarea) return;\n\n    const textContent = textarea.textContent || '';\n    const textNodes = getTextNodes(textarea);\n    if (!textNodes) return;\n\n    setErrorMarkers([]);\n    const validRanges = pruneInvalidRanges(textContent, errorRanges);\n    const markers: ErrorMarker[] = [];\n\n    for (const item of validRanges) {\n      const {\n        start, end, replacement, general_error_type,\n      } = item;\n      const { node: startNode, offset: startOffset } = getNodeForIndex(textNodes, start);\n      const { node: endNode, offset: endOffset } = getNodeForIndex(textNodes, end);\n      if (!startNode || !endNode) continue;\n\n      const range = document.createRange();\n      range.setStart(startNode, startOffset);\n      range.setEnd(endNode, endOffset);\n\n      const rects = range.getClientRects();\n      const textareaRect = textarea.getBoundingClientRect();\n      for (const rect of rects) {\n        markers.push({\n          ...getUnderlineOffset(rect, textareaRect, textarea),\n          start,\n          end,\n          replacement,\n          general_error_type,\n        });\n      }\n    }\n\n    setErrorMarkers(markers);\n  }, [errorRanges, inputRef]);\n\n  const checkTextInput = async () => {\n    const text = inputRef.current?.innerText || '';\n    setSpalingLoading(true);\n    const corrections = await sapling.check(text);\n    lastTextRef.current = text;\n    lastCheckTimeRef.current = Date.now();\n\n    const updatedErrors = updateErrorOffsetsWithInvalidateInner(\n      lastTextRef.current,\n      text,\n      corrections,\n    );\n\n    setErrorRanges(updatedErrors);\n    if (updatedErrors.length === 0) {\n      setErrorMarkers([]);\n    }\n    setSpalingLoading(false);\n  };\n\n  const inputNlpRuleCheck = useRef(debounce(checkTextInput, delay, { leading: false, trailing: true })).current;\n\n  const hightLightDebounceFunc = useMemo(\n    () => debounce(highLightErrors, delay, { leading: false, trailing: true }),\n    [highLightErrors, delay],\n  );\n\n  const inputHtml = getHtml();\n\n  useEffect(() => {\n    if (inputRef.current) {\n      const { text } = parseHtmlAsFormattedText(inputHtml);\n      if (text.trim().length === 0) {\n        setErrorRanges([]);\n        setErrorMarkers([]);\n        return;\n      }\n      inputNlpRuleCheck();\n    }\n  }, [inputHtml, inputNlpRuleCheck, inputRef]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      hightLightDebounceFunc();\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [hightLightDebounceFunc]);\n\n  useEffect(() => {\n    highLightErrors();\n  }, [errorRanges, highLightErrors]);\n\n  const fixError = (index: number) => {\n    const correction = errorRanges[index];\n    const el = inputRef.current;\n    if (!correction || !el || !correction.replacement) return;\n\n    const { start, end, replacement } = correction;\n    const fullText = el.innerText || '';\n\n    const newText = fullText.slice(0, start) + replacement + fullText.slice(end);\n    el.innerText = newText;\n\n    // 更新 errorRanges：剔除当前项，重新计算剩余项的位置\n    const newErrors: CorrectionItem[] = [];\n    const offsetChange = replacement.length - (end - start);\n\n    for (let i = 0; i < errorRanges.length; i++) {\n      if (i === index) continue;\n\n      const err = errorRanges[i];\n      if (err.start >= end) {\n        newErrors.push({\n          ...err,\n          start: err.start + offsetChange,\n          end: err.end + offsetChange,\n        });\n      } else {\n        newErrors.push(err);\n      }\n    }\n\n    setErrorRanges(newErrors);\n    lastTextRef.current = newText;\n    setHtml(newText);\n  };\n  // ✅ 替换所有错误\n  const fixAllErrors = () => {\n    const el = inputRef.current;\n    if (!el || errorRanges.length === 0) return;\n\n    let fullText = el.innerText || '';\n    const sorted = [...errorRanges].sort((a, b) => a.start - b.start);\n\n    let offset = 0;\n    for (const { start, end, replacement } of sorted) {\n      if (!replacement) continue;\n      const realStart = start + offset;\n      const realEnd = end + offset;\n      fullText = fullText.slice(0, realStart) + replacement + fullText.slice(realEnd);\n      offset += replacement.length - (end - start);\n    }\n\n    el.innerText = fullText;\n    lastTextRef.current = fullText;\n    setHtml(fullText);\n    setErrorRanges([]);\n    setErrorMarkers([]);\n    inputNlpRuleCheck();\n  };\n\n  return {\n    corrections: errorRanges,\n    spalingLoading,\n    errorMarkers,\n    fixError,\n    fixAllErrors,\n  };\n}\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\nimport type { CSSProperties } from 'react';\nimport React, { memo, useRef } from 'react';\nimport { Popover } from 'antd';\n\nexport type OwnProps = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  replacement:string;\n  generalErrorType: string;\n  errorIndex?: number;\n  handleFixError:(errorIndex:number)=>void;\n};\n\nconst TooltipContent = (\n  {\n    replacement,\n    errorIndex,\n    handleFixError,\n  }:\n  { replacement:string;\n    errorIndex:number;\n    handleFixError:(errorIndex:number)=>void;\n  },\n) => {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const handleClick = () => {\n    handleFixError(errorIndex);\n  };\n  return (\n    <div className=\"text-[var(--color-text)]\">\n      <div>ReplaceMent</div>\n      <div\n        className=\"max-w-[min(30vw,400px)] px-[12px] py-[10px] rounded-[8px] cursor-pointer hover:bg-[var(--color-primary)] hover:text-white\"\n        onClick={handleClick}\n      >\n        {replacement}\n      </div>\n    </div>\n  );\n};\n\nconst InputErrorTooltip = (props: OwnProps) => {\n  const {\n    top, left, width, height, replacement, generalErrorType, errorIndex, handleFixError,\n  } = props;\n  const triggerRef = useRef<HTMLDivElement>(null);\n  return (\n    <div\n      className=\"absolute pointer-events-none\"\n      style={{\n        left: `${left}px`, top: `${top}px`, width: `${width}px`, height: `${height}px`,\n      } as CSSProperties}\n    >\n      <Popover\n        placement=\"top\"\n        content={(\n          <TooltipContent\n            replacement={replacement}\n            errorIndex={errorIndex!!}\n            handleFixError={handleFixError}\n          />\n        )}\n      >\n        <div\n          ref={triggerRef}\n          className={`absolute bottom-[-2px] h-[6px] w-full border-b-[2px] pointer-events-auto ${generalErrorType.toLocaleLowerCase() === 'typos' ? 'border-red-500/60' : 'border-[#FFD633]'}`}\n        />\n      </Popover>\n    </div>\n  );\n};\n\nexport default memo(InputErrorTooltip);\n","/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Modal } from 'antd';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { LeftOutlined, RightOutlined } from '../../icons';\nimport { type GrammarlyCheckItem } from '../../utils/grammarly';\nimport { useGrammarChecker } from './useGrammarChecker';\n\nimport InputErrorTooltip from './InputErrorTooltip';\nimport HighlightedText from './tabs/HighlightedText';\n\nimport './InputGrammar.scss';\n\ntype CorrectionItem = {\n  description:string;\n  end: number;\n  error_type: string;\n  general_error_type: string;\n  id: string;\n  replacement: string;\n  sentence: string;\n  sentence_start: number;\n  original_text:string;\n  start: number;\n};\nexport interface InputGrammerProps {\n  inputRef: React.RefObject<HTMLDivElement | undefined>;\n  getHtml: Signal<string>;\n  setHtml: (newValue: string) => void;\n}\nconst InputGrammar = (props:InputGrammerProps) => {\n  const { inputRef, getHtml, setHtml } = props;\n  // const [errorMarkers, setErrorMarkers] = useState<ErrorMarker[]>([]);\n  const [errorsModalVisible, setErrorsModalVisible] = useState(false);\n  const [errorsModalPosition, setErrorsModalPosition] = useState<{ left: number; top: number }>({ left: 0, top: 0 });\n  const {\n    corrections, spalingLoading, errorMarkers, fixError, fixAllErrors,\n  } = useGrammarChecker(inputRef, getHtml, setHtml, {});\n  const showErrorModal = () => {\n    if (inputRef && inputRef.current) {\n      const inputReact = inputRef.current.getBoundingClientRect();\n      const { left, top } = inputReact;\n      setErrorsModalPosition({ left, top: top - 240 });\n      setErrorsModalVisible(true);\n    }\n  };\n  const closeErrorModal = useCallback(() => {\n    setErrorsModalVisible(false);\n  }, []);\n  return (\n    <>\n      <div className=\"absolute left-0 top-0 pointer-events-auto\">\n        {errorMarkers.map((item, index) => {\n          return (\n            <InputErrorTooltip\n              left={item.left}\n              top={item.top}\n              width={item.width}\n              height={item.height}\n              replacement={item.replacement}\n              errorIndex={index}\n              generalErrorType={item.general_error_type}\n              handleFixError={fixError}\n            />\n          );\n        })}\n      </div>\n      <div className=\"sapling-badge-container\">\n        <div className=\"sapling-status-container\">\n          <div className=\"sapling-badge-errors\">\n            {errorMarkers.length > 0 && (\n              <div className=\"sapling-badge-errors-count\" onClick={showErrorModal}>\n                {errorMarkers.length}\n              </div>\n            )}\n          </div>\n          {spalingLoading && (<div className=\"sapling-badge-spinner\" />)}\n        </div>\n      </div>\n      <Modal\n        className=\"sapling-errors-modal\"\n        closable={false}\n        footer={null}\n        open={errorsModalVisible}\n        onCancel={closeErrorModal}\n        destroyOnClose\n        style={{ top: errorsModalPosition.top, left: errorsModalPosition.left } as React.CSSProperties}\n      >\n        <ErrorsReview\n          errorRanges={corrections}\n          handleFixError={fixError}\n          handleFixAllErrors={fixAllErrors}\n          onClose={closeErrorModal}\n        />\n      </Modal>\n    </>\n  );\n};\n\nconst ErrorsReview = ({\n  errorRanges, onClose, handleFixAllErrors, handleFixError,\n}:{\n  errorRanges:CorrectionItem[];\n  onClose:()=>void;\n  handleFixAllErrors:()=>void;\n  handleFixError:(errorIndex:number)=>void; }) => {\n  const [currentErrorIndex, setCurrentErrorIndex] = useState(0);\n  const [currentErrorRange, setCurrentErrorRange] = useState<CorrectionItem>(errorRanges[0]);\n  const [currentError, setCurrentError] = useState<GrammarlyCheckItem[]>([]);\n  const [currentSentence, setCurrentSentence] = useState('');\n\n  useEffect(() => {\n    const curRange = errorRanges[currentErrorIndex];\n    if (curRange) {\n      setCurrentErrorRange(curRange);\n      setCurrentError([{\n        description: curRange.description,\n        offset: curRange.start - curRange.sentence_start,\n        length: curRange.end - curRange.start,\n        originalText: curRange.original_text,\n        remove_segment: false,\n        suggestions: [curRange.replacement],\n      }]);\n      setCurrentSentence(curRange.sentence);\n    }\n  }, [currentErrorIndex, errorRanges]);\n\n  const handleClickPrev = () => {\n    if (currentErrorIndex > 0) {\n      setCurrentErrorIndex(currentErrorIndex - 1);\n    }\n  };\n  const handleClickNext = () => {\n    if (currentErrorIndex < errorRanges.length - 1) {\n      setCurrentErrorIndex(currentErrorIndex + 1);\n    }\n  };\n  const handleAccept = useCallback(() => {\n    handleFixError(currentErrorIndex);\n    if (errorRanges.length === 1) {\n      onClose();\n    }\n    if (currentErrorIndex === errorRanges.length - 1) {\n      onClose();\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [currentErrorIndex, currentErrorRange]);\n\n  const handleAcceptAll = useCallback(() => {\n    handleFixAllErrors();\n    onClose();\n  }, [handleFixAllErrors, onClose]);\n\n  return (\n    <div className=\"h-[190px] flex flex-col overflow-hidden\">\n      <div className=\"flex flex-row items-center justify-between\">\n        <h3 className=\"text-[var(--color-text)]\">Review suggestions</h3>\n        <div className=\"h-[26px] rounded-[6px] overflow-hidden flex flex-row\">\n          <div className=\"w-[21px] bg-[#F1F1F1] cursor-pointer\" onClick={handleClickPrev}>\n            <LeftOutlined />\n          </div>\n          <div className=\"px-[5px] text-[#979797]\">{currentErrorIndex + 1}/{errorRanges.length}</div>\n          <div className=\"w-[21px] bg-[#F1F1F1] cursor-pointer\" onClick={handleClickNext}>\n            <RightOutlined />\n          </div>\n        </div>\n      </div>\n      <div className=\"flex-1 overflow-hidden flex flex-col\">\n        <div className=\"flex flex-row items-center gap-[8px]\">\n          <div className=\"w-[8px] h-[8px] rounded-full bg-[#FF9900]\" />\n          <span className=\"text-[14px] text-[#959595]\">Improve your text</span>\n        </div>\n        <div className=\"flex-1 overflow-auto\">\n          {currentError ? (\n            <HighlightedText text={currentSentence} errors={currentError} />\n          ) : undefined}\n        </div>\n      </div>\n      <div className=\"flex flex-row items-center justify-between  pt-[10px] border-t-[1px] border-black/10\">\n        <div\n          className=\"text-[#7D40FF] border-[1px] border-[#7D40FF] rounded-[6px] px-[8px] py-[5px]\"\n          onClick={handleAcceptAll}\n        >\n          Accept all ({errorRanges.length})\n        </div>\n        <div className=\"flex flex-row items-center gap-[8px]\">\n          {/* <Button color=\"default\" variant=\"text\">\n            Dismiss\n          </Button> */}\n          <Button color=\"purple\" variant=\"solid\" onClick={handleAccept}>\n            Accept\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputGrammar;\n","/* eslint-disable teactn/no-unused-prop-types */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-null/no-null */\nimport React, {\n  useEffect,\n  useRef,\n} from '../../../../lib/teact/teact';\n\nimport type { InputGrammerProps } from './InputGrammar';\n\nimport { injectComponent } from '../../injectComponent';\n\nimport InputGrammar from './InputGrammar';\n\n// const injectMessageAI = injectComponent(InputGrammar);\nconst InputGrammarWrapper = (props: InputGrammerProps) => {\n  // const containerRef = useRef<HTMLDivElement | null>(null);\n  const { inputRef, getHtml, setHtml } = props;\n  const containerRef = injectComponent({\n    component: InputGrammar,\n    props: {\n      inputRef,\n      getHtml,\n      setHtml,\n    },\n  });\n  // useEffect(() => {\n  //   if (containerRef.current) {\n  //     injectMessageAI(containerRef.current, { inputRef, getHtml, setHtml });\n  //   }\n  // }, [getHtml, inputRef, setHtml]);\n  return (\n    <div className=\"absolute left-0 top-0 w-full h-full pointer-events-none\" ref={containerRef} />\n  );\n};\n\nexport default InputGrammarWrapper;\n","import type { ChangeEvent } from 'react';\nimport React from '@teact';\nimport type { ElementRef, FC, TeactNode } from '@teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\nimport InputGrammarWrapper from '../../chatAssistant/component/input-grammar/InputGrammarWrapper';\n\n// eslint-disable-next-line import/no-relative-packages\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n      // inputRef.current!.dispatchEvent(new Event('input', { bubbles: true }));\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <InputGrammarWrapper inputRef={inputRef} getHtml={getHtml} setHtml={onUpdate} />\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFiEK79A\",\"list-item\":\"_VgXA3ZV\",\"listItem\":\"_VgXA3ZV\",\"title\":\"RITxpjRP\",\"subtitle\":\"TsAsFkJP\",\"languages\":\"WPdg2YHh\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../../config';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './input-language.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  translateLanguage: string | undefined;\n  closeInputLanguageModal: () => void;\n  updateTranslateLanguage: (langCode: string | undefined) => void;\n};\n\nconst InputLanguageModal: FC<OwnProps> = ({\n  isOpen,\n  translateLanguage,\n  closeInputLanguageModal,\n  updateTranslateLanguage,\n}) => {\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (langCode === translateLanguage) {\n      updateTranslateLanguage(undefined);\n    } else {\n      updateTranslateLanguage(langCode);\n    }\n\n    closeInputLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([translateLanguage || 'en'], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [translateLanguage]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeInputLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        // teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={translateLanguage === langCode ? 'check' : undefined}\n            disabled={translateLanguage === langCode}\n            multiline\n            narrow\n            allowDisabledClick\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default InputLanguageModal;\n","import React from '../../../../lib/teact/teact';\n\nimport './input-translate-tip.scss';\n\nconst InputTranslateTip = () => {\n  return (\n    <div className=\"input-translate-tip\">\n      <span>Enter your native language, and it will auto-translate to the set language upon sending.</span>\n      <div className=\"input-translate-tip-arrow\" />\n    </div>\n  );\n};\n\nexport default InputTranslateTip;\n","import React, { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\n\nimport RoomStorage from '../../room-storage';\nimport InputLanguageModal from './input-language-modal';\nimport InputTranslateTip from './input-translate-tip';\n\nimport useFlag from '../../../../hooks/useFlag';\n\nimport './input-translate.scss';\n\nimport aiTranslatePath from '../../assets/ai-translate.png';\n\nconst InputTranslate = (props:{ chatId:string }) => {\n  const { chatId } = props;\n  const [inputLanguageModalOpen, openInputLanguageModal, closeInputLanguageModal] = useFlag();\n  const [translateLanguage, setTranslateLanguage] = useState<string | undefined>(undefined);\n  const [tooltipOpen, openTooltip, closeTooltip] = useFlag();\n  useEffect(() => {\n    setTranslateLanguage(RoomStorage.getRoomTranslateLanguage(chatId));\n  }, [chatId]);\n  const updateTranslateLanguage = useCallback((langCode: string | undefined) => {\n    RoomStorage.updateRoomTranslateLanguage(chatId, langCode);\n    setTranslateLanguage(langCode);\n    if (!translateLanguage && langCode) {\n      openTooltip();\n      setTimeout(() => {\n        closeTooltip();\n      }, 5000);\n    }\n  }, [chatId, translateLanguage]);\n  return (\n    <div className=\"input-ai-actions\">\n      <button className=\"Button input-ai-actions-button\" onClick={openInputLanguageModal}>\n        {\n          translateLanguage\n            ? (\n              <span className=\"text-[var(--color-text-secondary)] text-[14px] font-bold\">\n                {translateLanguage.toUpperCase()}\n              </span>\n            )\n            : (\n              <img src={aiTranslatePath} alt=\"Chat AI Logo\" />\n            )\n        }\n      </button>\n      {tooltipOpen && (\n        <InputTranslateTip />\n      )}\n      <InputLanguageModal\n        translateLanguage={translateLanguage}\n        isOpen={inputLanguageModalOpen}\n        closeInputLanguageModal={closeInputLanguageModal}\n        updateTranslateLanguage={updateTranslateLanguage}\n      />\n    </div>\n  );\n};\n\nexport default InputTranslate;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import React from '@teact';\nimport { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport { SERVER_API_URL } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\n\nexport type GrammarlyCheckItem = {\n  type?: string;\n  description?: string;\n  offset: number;\n  length: number;\n  originalText?: string;\n  remove_segment: boolean;\n  suggestions:string[];\n};\ntype GrammarlyCheckResponse = {\n  code:number;\n  data:{\n    errors:GrammarlyCheckItem[];\n  };\n};\n\nfunction getUserInfo() {\n  const global = getGlobal();\n  const { currentUserId } = global;\n  const user = selectUser(global, currentUserId!);\n  const userName = getUserFullName(user);\n  return {\n    userId: currentUserId,\n    userName,\n  };\n}\nexport const grammarlyCheck = (text:string):Promise<GrammarlyCheckResponse> => {\n  const { userId, userName } = getUserInfo();\n  return new Promise((resolve, reject) => {\n    fetch(`${SERVER_API_URL}/grammarly-check`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text,\n        userId,\n        userName,\n      }),\n    }).then((response) => response.json())\n      .then((data) => resolve(data as GrammarlyCheckResponse))\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\nexport const grammarlyShorten = (text:string):Promise<GrammarlyCheckResponse> => {\n  const { userId, userName } = getUserInfo();\n  return new Promise((resolve, reject) => {\n    fetch(`${SERVER_API_URL}/grammarly-shorten`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text,\n        userId,\n        userName,\n      }),\n    }).then((response) => response.json())\n      .then((data) => resolve(data as GrammarlyCheckResponse))\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\nexport const grammarlyFormal = (text:string):Promise<GrammarlyCheckResponse> => {\n  const { userId, userName } = getUserInfo();\n  return new Promise((resolve, reject) => {\n    fetch(`${SERVER_API_URL}/grammarly-formal`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text,\n        userId,\n        userName,\n      }),\n    }).then((response) => response.json())\n      .then((data) => resolve(data as GrammarlyCheckResponse))\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\nexport const grammarlyFriendly = (text:string):Promise<GrammarlyCheckResponse> => {\n  const { userId, userName } = getUserInfo();\n  return new Promise((resolve, reject) => {\n    fetch(`${SERVER_API_URL}/grammarly-friendly`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text,\n        userId,\n        userName,\n      }),\n    }).then((response) => response.json())\n      .then((data) => resolve(data as GrammarlyCheckResponse))\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\nexport const grammarlyRephrase = (text:string):Promise<GrammarlyCheckResponse> => {\n  const { userId, userName } = getUserInfo();\n  return new Promise((resolve, reject) => {\n    fetch(`${SERVER_API_URL}/grammarly-rephrase`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text,\n        userId,\n        userName,\n      }),\n    }).then((response) => response.json())\n      .then((data) => resolve(data as GrammarlyCheckResponse))\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport function getCorrectedText(text: string, errors: GrammarlyCheckItem[]): string {\n  if (!errors.length) return text;\n\n  // 从后往前替换，避免索引错乱\n  const sorted = [...errors].sort((a, b) => b.offset - a.offset);\n\n  for (const { offset, length, suggestions } of sorted) {\n    const suggestion = suggestions[0] || '';\n    text = text.slice(0, offset) + suggestion + text.slice(offset + length);\n  }\n\n  return text;\n}\n","import React from 'react';\n\nimport './SkeletonScreen.scss';\n\nconst SkeletonScreen = () => {\n  return (\n    <div className=\"skeleton-wrapper\">\n      <div className=\"skeleton-text skeleton-line\" />\n      <div className=\"skeleton-text skeleton-line\" />\n      <div className=\"skeleton-text skeleton-line\" />\n    </div>\n  );\n};\n\nexport default SkeletonScreen;\n","/* eslint-disable react-hooks-static-deps/exhaustive-deps */\n/* eslint-disable max-len */\nimport React, { useCallback, useEffect } from 'react';\nimport { Button } from 'antd';\n\nimport type { GrammarlyCheckItem } from '../../../utils/grammarly';\nimport type { GrammarTabProps } from '../GrammarTool';\n\nimport { getCorrectedText, grammarlyFormal } from '../../../utils/grammarly';\n\nimport SkeletonScreen from '../Skeleton/SkeletonScreen';\nimport HighlightedText from './HighlightedText';\n\nconst FormalTab = (props:GrammarTabProps) => {\n  const { text, setHtml, onClose } = props;\n  const [loading, setLoading] = React.useState(true);\n  const [grammarlyResult, setGrammarlyResult] = React.useState<GrammarlyCheckItem[]>([]);\n  function handleImprove() {\n    grammarlyFormal(text).then((result) => {\n      if (result.data.errors) {\n        setGrammarlyResult(result.data.errors);\n        setLoading(false);\n      } else {\n        throw new Error('No errors found in the text');\n      }\n    }).catch((err) => {\n      // eslint-disable-next-line no-console\n      console.error('Error checking grammar:', err);\n      setLoading(false);\n      setGrammarlyResult([]);\n    });\n  }\n\n  useEffect(() => {\n    handleImprove();\n  }, []);\n\n  const handleAccept = useCallback(() => {\n    if (grammarlyResult) {\n      const newText = getCorrectedText(text, grammarlyResult);\n      setHtml(newText);\n      onClose();\n    }\n  }, [grammarlyResult]);\n  return (\n    <div>\n      <h2 className=\"grammar-tool-tab-content-title\">Use professional wording</h2>\n      {loading ? (<SkeletonScreen />) : (\n        <>\n          <HighlightedText text={text} errors={grammarlyResult} />\n          <Button color=\"default\" variant=\"outlined\" onClick={handleAccept}>\n            Accept\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FormalTab;\n","/* eslint-disable react-hooks-static-deps/exhaustive-deps */\n/* eslint-disable max-len */\nimport React, { useCallback, useEffect } from 'react';\nimport { Button } from 'antd';\n\nimport type { GrammarlyCheckItem } from '../../../utils/grammarly';\nimport type { GrammarTabProps } from '../GrammarTool';\n\nimport { getCorrectedText, grammarlyFriendly } from '../../../utils/grammarly';\n\nimport SkeletonScreen from '../Skeleton/SkeletonScreen';\nimport HighlightedText from './HighlightedText';\n\nconst FriendlyTab = (props:GrammarTabProps) => {\n  const { text, setHtml, onClose } = props;\n  const [loading, setLoading] = React.useState(true);\n  const [grammarlyResult, setGrammarlyResult] = React.useState<GrammarlyCheckItem[]>([]);\n  function handleImprove() {\n    grammarlyFriendly(text).then((result) => {\n      if (result.data.errors) {\n        setGrammarlyResult(result.data.errors);\n        setLoading(false);\n      } else {\n        throw new Error('No errors found in the text');\n      }\n    }).catch((err) => {\n      // eslint-disable-next-line no-console\n      console.error('Error checking grammar:', err);\n      setLoading(false);\n      setGrammarlyResult([]);\n    });\n  }\n\n  useEffect(() => {\n    handleImprove();\n  }, []);\n\n  const handleAccept = useCallback(() => {\n    if (grammarlyResult) {\n      const newText = getCorrectedText(text, grammarlyResult);\n      setHtml(newText);\n      onClose();\n    }\n  }, [grammarlyResult]);\n  return (\n    <div>\n      <h2 className=\"grammar-tool-tab-content-title\">Use more personal language</h2>\n      {loading ? (<SkeletonScreen />) : (\n        <>\n          <HighlightedText text={text} errors={grammarlyResult} />\n          <Button color=\"default\" variant=\"outlined\" onClick={handleAccept}>\n            Accept\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FriendlyTab;\n","/* eslint-disable react-hooks-static-deps/exhaustive-deps */\n/* eslint-disable max-len */\nimport React, { useCallback, useEffect } from 'react';\nimport { Button } from 'antd';\n\nimport type { GrammarlyCheckItem } from '../../../utils/grammarly';\nimport type { GrammarTabProps } from '../GrammarTool';\n\nimport { getCorrectedText, grammarlyCheck } from '../../../utils/grammarly';\n\nimport SkeletonScreen from '../Skeleton/SkeletonScreen';\nimport HighlightedText from './HighlightedText';\n\nconst ImproveTab = (props:GrammarTabProps) => {\n  const { text, setHtml, onClose } = props;\n  const [loading, setLoading] = React.useState(true);\n  const [grammarlyResult, setGrammarlyResult] = React.useState<GrammarlyCheckItem[]>([]);\n  function handleImprove() {\n    grammarlyCheck(text).then((result) => {\n      if (result.data.errors) {\n        setGrammarlyResult(result.data.errors);\n        setLoading(false);\n      } else {\n        throw new Error('No errors found in the text');\n      }\n    }).catch((err) => {\n      // eslint-disable-next-line no-console\n      console.error('Error checking grammar:', err);\n      setLoading(false);\n      setGrammarlyResult([]);\n    });\n  }\n\n  useEffect(() => {\n    handleImprove();\n  }, []);\n\n  const handleAccept = useCallback(() => {\n    if (grammarlyResult) {\n      const newText = getCorrectedText(text, grammarlyResult);\n      setHtml(newText);\n      onClose();\n    }\n  }, [grammarlyResult]);\n  return (\n    <div>\n      <h2 className=\"grammar-tool-tab-content-title\">Fix grammar errors</h2>\n      {loading ? (<SkeletonScreen />) : (\n        <>\n          <HighlightedText text={text} errors={grammarlyResult} />\n          <Button color=\"default\" variant=\"outlined\" onClick={handleAccept}>\n            Accept\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ImproveTab;\n","/* eslint-disable react-hooks-static-deps/exhaustive-deps */\n/* eslint-disable max-len */\nimport React, { useCallback, useEffect } from 'react';\nimport { Button } from 'antd';\n\nimport type { GrammarlyCheckItem } from '../../../utils/grammarly';\nimport type { GrammarTabProps } from '../GrammarTool';\n\nimport { getCorrectedText, grammarlyRephrase } from '../../../utils/grammarly';\n\nimport SkeletonScreen from '../Skeleton/SkeletonScreen';\nimport HighlightedText from './HighlightedText';\n\nconst RephraseTab = (props:GrammarTabProps) => {\n  const { text, setHtml, onClose } = props;\n  const [loading, setLoading] = React.useState(true);\n  const [grammarlyResult, setGrammarlyResult] = React.useState<GrammarlyCheckItem[]>([]);\n  function handleImprove() {\n    grammarlyRephrase(text).then((result) => {\n      if (result.data.errors) {\n        setGrammarlyResult(result.data.errors);\n        setLoading(false);\n      } else {\n        throw new Error('No errors found in the text');\n      }\n    }).catch((err) => {\n      // eslint-disable-next-line no-console\n      console.error('Error checking grammar:', err);\n      setLoading(false);\n      setGrammarlyResult([]);\n    });\n  }\n\n  useEffect(() => {\n    handleImprove();\n  }, []);\n\n  const handleAccept = useCallback(() => {\n    if (grammarlyResult) {\n      const newText = getCorrectedText(text, grammarlyResult);\n      setHtml(newText);\n      onClose();\n    }\n  }, [grammarlyResult]);\n  return (\n    <div>\n      <h2 className=\"grammar-tool-tab-content-title\">Enhance clarity and fluency</h2>\n      {loading ? (<SkeletonScreen />) : (\n        <>\n          <HighlightedText text={text} errors={grammarlyResult} />\n          <Button color=\"default\" variant=\"outlined\" onClick={handleAccept}>\n            Accept\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default RephraseTab;\n","/* eslint-disable react-hooks-static-deps/exhaustive-deps */\n/* eslint-disable max-len */\nimport React, { useCallback, useEffect } from 'react';\nimport { Button } from 'antd';\n\nimport type { GrammarlyCheckItem } from '../../../utils/grammarly';\nimport type { GrammarTabProps } from '../GrammarTool';\n\nimport { getCorrectedText, grammarlyShorten } from '../../../utils/grammarly';\n\nimport SkeletonScreen from '../Skeleton/SkeletonScreen';\nimport HighlightedText from './HighlightedText';\n\nconst ShortenTab = (props:GrammarTabProps) => {\n  const { text, setHtml, onClose } = props;\n  const [loading, setLoading] = React.useState(true);\n  const [grammarlyResult, setGrammarlyResult] = React.useState<GrammarlyCheckItem[]>([]);\n  function handleImprove() {\n    grammarlyShorten(text).then((result) => {\n      if (result.data.errors) {\n        setGrammarlyResult(result.data.errors);\n        setLoading(false);\n      } else {\n        throw new Error('No errors found in the text');\n      }\n    }).catch((err) => {\n      // eslint-disable-next-line no-console\n      console.error('Error checking grammar:', err);\n      setLoading(false);\n      setGrammarlyResult([]);\n    });\n  }\n\n  useEffect(() => {\n    handleImprove();\n  }, []);\n\n  const handleAccept = useCallback(() => {\n    if (grammarlyResult) {\n      const newText = getCorrectedText(text, grammarlyResult);\n      setHtml(newText);\n      onClose();\n    }\n  }, [grammarlyResult]);\n  return (\n    <div>\n      <h2 className=\"grammar-tool-tab-content-title\">Condense wordy sections</h2>\n      {loading ? (<SkeletonScreen />) : (\n        <>\n          <HighlightedText text={text} errors={grammarlyResult} />\n          <Button color=\"default\" variant=\"outlined\" onClick={handleAccept}>\n            Accept\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ShortenTab;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable max-len */\nimport React, { useState } from 'react';\n\nimport type { Signal } from '../../../../util/signals';\nimport type { TabWithProperties } from '../TabList';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport TabList from '../TabList';\nimport FormalTab from './tabs/FormalTab';\nimport FriendlyTab from './tabs/FriendlyTab';\nimport ImproveTab from './tabs/ImproveTab';\nimport RephraseTab from './tabs/RephraseTab';\nimport ShortenTab from './tabs/ShortenTab';\n\nexport interface GrammarTabProps {\n  text: string;\n  setHtml: (newValue: string) => void;\n  onClose: () => void;\n}\nexport interface GrammarToolProps {\n  getHtml: Signal<string>;\n  setHtml: (newValue: string) => void;\n  onClose: () => void;\n}\nconst GrammarTool = (props: GrammarToolProps) => {\n  const { getHtml, setHtml, onClose } = props;\n  const { text } = parseHtmlAsFormattedText(getHtml());\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const tabs: TabWithProperties[] = [\n    {\n      title: 'Improve',\n    },\n    {\n      title: 'Rephrase',\n    },\n    {\n      title: 'Shorten',\n    },\n    {\n      title: 'Friendly',\n    },\n    {\n      title: 'Formal',\n    },\n  ];\n  const renderContent = () => {\n    switch (selectedTabIndex) {\n      case 0:\n        return <ImproveTab text={text} setHtml={setHtml} onClose={onClose} />;\n      case 1:\n        return <RephraseTab text={text} setHtml={setHtml} onClose={onClose} />;\n      case 2:\n        return <ShortenTab text={text} setHtml={setHtml} onClose={onClose} />;\n      case 3:\n        return <FriendlyTab text={text} setHtml={setHtml} onClose={onClose} />;\n      case 4:\n        return <FormalTab text={text} setHtml={setHtml} onClose={onClose} />;\n      default:\n        return undefined;\n    }\n  };\n  return (\n    <>\n      <div className=\"px-[20px] py-[13px]\">\n        {renderContent()}\n      </div>\n      <TabList\n        activeTab={selectedTabIndex}\n        tabs={tabs}\n        onSwitchTab={setSelectedTabIndex}\n        inversion\n      />\n    </>\n  );\n};\nexport default GrammarTool;\n","/* eslint-disable max-len */\n/* eslint-disable teactn/no-unused-prop-types */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-null/no-null */\nimport React, {\n  useEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { injectComponent } from '../../injectComponent';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useVirtualBackdrop from '../../../../hooks/useVirtualBackdrop';\n\nimport GrammarTool from './GrammarTool';\n\nimport './GrammarToolWrapper.scss';\n\nimport GrammerInput from '../../assets/grammar-input.png';\n\ninterface GrammarToolWrapperProps {\n  getHtml: Signal<string>;\n  setHtml: (newValue: string) => void;\n}\n\nconst GrammarToolWrapper = (props: GrammarToolWrapperProps) => {\n  const [isGrammarToolOpen, openGrammarTool, closeGrammarTool] = useFlag();\n  const containerRef = useRef<HTMLDivElement>();\n  const { getHtml, setHtml } = props;\n  const injectMessageAI = injectComponent({\n    component: GrammarTool, props: {\n      getHtml,\n      setHtml,\n      onClose: closeGrammarTool,\n    }\n  });\n  useEffect(() => {\n    let injected: { unmount: () => void } | undefined;\n    if (containerRef.current && isGrammarToolOpen) {\n      // 类型断言确保 ref 是 HTMLElement\n      injected = injectMessageAI(containerRef.current as HTMLElement);\n    }\n    return () => {\n      injected?.unmount();\n    };\n  }, [isGrammarToolOpen, closeGrammarTool, getHtml, setHtml]);\n\n  useEffect(\n    () => (isGrammarToolOpen ? captureEscKeyListener(closeGrammarTool) : undefined),\n    [isGrammarToolOpen, closeGrammarTool],\n  );\n\n  useVirtualBackdrop(\n    isGrammarToolOpen,\n    containerRef,\n    closeGrammarTool,\n    undefined,\n    undefined,\n  );\n  const handleToggleMenu = () => {\n    if (isGrammarToolOpen) {\n      closeGrammarTool();\n    } else {\n      const { text } = parseHtmlAsFormattedText(getHtml());\n      if (text.trim() === '') return;\n      openGrammarTool();\n    }\n  };\n  return (\n    <div className=\"input-ai-actions flex-shrink-0 mr-[8px]\">\n      <button className=\"Button input-ai-actions-button\" onClick={handleToggleMenu}>\n        <img src={GrammerInput} alt=\"Chat AI Logo\" />\n      </button>\n      {isGrammarToolOpen && (\n        <div\n          className=\"grammar-tool-wrapper open\"\n          ref={containerRef}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GrammarToolWrapper;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import React from '@teact';\nimport {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import React from '@teact';\nimport type { FC, TeactNode } from '@teact';\nimport { memo, useMemo } from '@teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import React from '@teact';\nimport { memo, useEffect, useRef } from '@teact';\nimport type { FC } from '@teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import React from '@teact';\nimport type { FC } from '@teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import React from '@teact';\nimport { memo, useEffect, useRef } from '@teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import React from '@teact';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  getUserFullName,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { callApi } from '../../api/gramjs';\nimport InputTranslate from '../chatAssistant/component/input-translate/input-translate';\nimport RoomStorage from '../chatAssistant/room-storage';\nimport { sendGAEvent } from '../chatAssistant/utils/analytics';\nimport { userInformationCollection } from '../chatAssistant/utils/user-information-collection';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport GrammarToolWrapper from '../chatAssistant/component/input-grammar/GrammarToolWrapper';\nimport eventEmitter from '../chatAssistant/lib/EventEmitter';\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n  const [isInlineAILoading, setIsInlineAILoading] = useState(false);\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  useEffect(() => {\n    // @ts-ignore\n    globalThis.p__handleFileSelect = handleFileSelect;\n\n    return () => {\n      // @ts-ignore\n      globalThis.p__handleFileSelect = undefined;\n      // @ts-ignore\n      delete globalThis.p__handleFileSelect;\n    };\n  }, [handleFileSelect]);\n\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n\n  const updateInlineAILoading = useLastCallback((value:boolean) => {\n    setIsInlineAILoading(value);\n  });\n  const updataAIResponse = useLastCallback((text:string) => {\n    setIsInlineAILoading(false);\n    setHtml(text);\n  });\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  useEffect(() => {\n    eventEmitter.on('update-input-text', updataAIResponse);\n    eventEmitter.on('update-input-spiner', updateInlineAILoading);\n    return () => {\n      eventEmitter.off('update-input-text', updataAIResponse);\n      eventEmitter.off('update-input-spiner', updateInlineAILoading);\n    };\n  }, []);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n    // TODO:translate text\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    // TODO:translate text\n    const langCode = RoomStorage.getRoomTranslateLanguage(chatId);\n    if (langCode && text) {\n      setIsInlineAILoading(true);\n      try {\n        const result = await callApi('translateTextByTencent', {\n          text: [{ text }],\n          toLanguageCode: langCode,\n          userId: currentUserId!,\n          userName: getUserFullName(currentUser)!,\n        });\n        if (result && result[0].text) {\n          setHtml(result[0].text);\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      }\n      setIsInlineAILoading(false);\n      sendGAEvent('input_translate');\n    }\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n    // TODO: collect information from send message\n    userInformationCollection.collectInformation(text);\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({ });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {((isInlineBotLoading && Boolean(inlineBotId)) || isInlineAILoading) && (\n                <Spinner color=\"gray\" className=\"flex-shrink-0\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <GrammarToolWrapper getHtml={getHtml} setHtml={setHtml} />\n          <InputTranslate chatId={chatId} />\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig?.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kxMIqtqr\",\"wrapper\":\"D6Yajvjx\",\"media\":\"cV_QL3N5\",\"expiredIcon\":\"cq7jTRkg\",\"overlayIcon\":\"NOCaj4mx\",\"pinnedIcon\":\"GTWFQyJx\",\"viewsCount\":\"g09Rb4Ps\",\"duration\":\"lM_2MMyQ\",\"contextMenu\":\"UAfI9izT\"};","import React from '@teact';\nimport {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport { getStoryMediaHash } from '../../global/helpers';\nimport { selectChat, selectPinnedStories } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './MediaStory.module.scss';\n\ninterface OwnProps {\n  story: ApiTypeStory;\n  isArchive?: boolean;\n}\n\ninterface StateProps {\n  isProtected?: boolean;\n  isPinned?: boolean;\n  canPin?: boolean;\n}\n\nfunction MediaStory({\n  story, isProtected, isArchive, isPinned, canPin,\n}: OwnProps & StateProps) {\n  const {\n    openStoryViewer,\n    loadPeerSkippedStories,\n    toggleStoryInProfile,\n    toggleStoryPinnedToTop,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n  const containerRef = useRef<HTMLDivElement>();\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .story-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const peerId = story && story.peerId;\n  const isFullyLoaded = story && 'content' in story;\n  const isOwn = isFullyLoaded && story.isOut;\n  const isDeleted = story && 'isDeleted' in story;\n  const video = isFullyLoaded ? (story).content.video : undefined;\n  const duration = video && formatMediaDuration(video.duration);\n  const imageHash = isFullyLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEffect(() => {\n    if (story && !(isFullyLoaded || isDeleted)) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [isDeleted, isFullyLoaded, story]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !isOwn);\n\n  const handleClick = useCallback(() => {\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSinglePeer: true,\n      isPrivate: true,\n      isArchive,\n    });\n  }, [isArchive, story.id, story.peerId]);\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleUnarchiveClick = useLastCallback((e: React.SyntheticEvent) => {\n    stopEvent(e);\n\n    toggleStoryInProfile({ peerId, storyId: story.id, isInProfile: true });\n    showNotification({\n      message: lang('Story.ToastSavedToProfileText'),\n    });\n    handleContextMenuClose();\n  });\n\n  const handleArchiveClick = useLastCallback((e: React.SyntheticEvent) => {\n    stopEvent(e);\n\n    toggleStoryInProfile({ peerId, storyId: story.id, isInProfile: false });\n    showNotification({\n      message: lang('Story.ToastRemovedFromProfileText'),\n    });\n    handleContextMenuClose();\n  });\n\n  const handleTogglePinned = useLastCallback(() => {\n    toggleStoryPinnedToTop({ peerId, storyId: story.id });\n    handleContextMenuClose();\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, 'scroll-item')}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isDeleted && (\n        <span>\n          <Icon className={styles.expiredIcon} name=\"story-expired\" />\n          {lang('ExpiredStory')}\n        </span>\n      )}\n      {isPinned && <Icon className={buildClassName(styles.overlayIcon, styles.pinnedIcon)} name=\"pin-badge\" />}\n      {isFullyLoaded && Boolean(story.views?.viewsCount) && (\n        <span className={buildClassName(styles.overlayIcon, styles.viewsCount)}>\n          <Icon name=\"eye\" />\n          {story.views.viewsCount}\n        </span>\n      )}\n      {duration && <span className={buildClassName(styles.overlayIcon, styles.duration)}>{duration}</span>}\n      <div className={styles.wrapper}>\n        {thumbUrl && (\n          <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n        )}\n        {isFullyLoaded && <MediaAreaOverlay story={story} />}\n        {isProtected && <span className=\"protector\" />}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName(styles.contextMenu, 'story-context-menu')}\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {isArchive && (\n            <MenuItem icon=\"archive\" onClick={handleUnarchiveClick}>\n              {lang('StoryList.SaveToProfile')}\n            </MenuItem>\n          )}\n          {!isArchive && (\n            <MenuItem icon=\"archive\" onClick={handleArchiveClick}>\n              {lang('Story.Context.RemoveFromProfile')}\n            </MenuItem>\n          )}\n          {!isArchive && !isPinned && canPin && (\n            <MenuItem icon=\"pin\" onClick={handleTogglePinned}>\n              {lang('StoryList.ItemAction.Pin')}\n            </MenuItem>\n          )}\n          {!isArchive && isPinned && (\n            <MenuItem icon=\"unpin\" onClick={handleTogglePinned}>\n              {lang('StoryList.ItemAction.Unpin')}\n            </MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { story }): StateProps => {\n  const chat = selectChat(global, story.peerId);\n  const isProtected = chat?.isProtected;\n\n  const { maxPinnedStoriesCount } = global.appConfig || {};\n  const isOwn = 'isOut' in story && story.isOut;\n  const pinnedStories = selectPinnedStories(global, story.peerId);\n  const isPinned = pinnedStories?.some((pinnedStory) => pinnedStory.id === story.id);\n  const canPinMore = isOwn && (!maxPinnedStoriesCount || (pinnedStories?.length || 0) < maxPinnedStoriesCount);\n\n  return {\n    isProtected,\n    isPinned,\n    canPin: canPinMore,\n  };\n})(MediaStory));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessagesByTencent } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessagesByTencent({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","import React from '@teact';\nimport type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nexport function useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): StateProps => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","\n/* eslint-disable max-len */\n/* eslint-disable react/react-in-jsx-scope */\nimport React from 'react';\n\nexport const BotIcon = () => {\n  return (\n    <svg\n      height=\"16\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width=\"16\"\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.75 2.79933C9.19835 2.53997 9.5 2.05521 9.5 1.5C9.5 0.671573 8.82843 0 8 0C7.17157 0 6.5 0.671573 6.5 1.5C6.5 2.05521 6.80165 2.53997 7.25 2.79933V5H7C4.027 5 1.55904 7.16229 1.08296 10H0V13H1V14.5V16H2.5H13.5H15V14.5V13H16V10H14.917C14.441 7.16229 11.973 5 9 5H8.75V2.79933ZM7 6.5C4.51472 6.5 2.5 8.51472 2.5 11V14.5H13.5V11C13.5 8.51472 11.4853 6.5 9 6.5H7ZM7.25 11.25C7.25 12.2165 6.4665 13 5.5 13C4.5335 13 3.75 12.2165 3.75 11.25C3.75 10.2835 4.5335 9.5 5.5 9.5C6.4665 9.5 7.25 10.2835 7.25 11.25ZM10.5 13C11.4665 13 12.25 12.2165 12.25 11.25C12.25 10.2835 11.4665 9.5 10.5 9.5C9.5335 9.5 8.75 10.2835 8.75 11.25C8.75 12.2165 9.5335 13 10.5 13Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const UserIcon = () => {\n  return (\n    <svg\n      data-testid=\"geist-icon\"\n      height=\"16\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width=\"16\"\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.75 0C5.95507 0 4.5 1.45507 4.5 3.25V3.75C4.5 5.54493 5.95507 7 7.75 7H8.25C10.0449 7 11.5 5.54493 11.5 3.75V3.25C11.5 1.45507 10.0449 0 8.25 0H7.75ZM6 3.25C6 2.2835 6.7835 1.5 7.75 1.5H8.25C9.2165 1.5 10 2.2835 10 3.25V3.75C10 4.7165 9.2165 5.5 8.25 5.5H7.75C6.7835 5.5 6 4.7165 6 3.75V3.25ZM2.5 14.5V13.1709C3.31958 11.5377 4.99308 10.5 6.82945 10.5H9.17055C11.0069 10.5 12.6804 11.5377 13.5 13.1709V14.5H2.5ZM6.82945 9C4.35483 9 2.10604 10.4388 1.06903 12.6857L1 12.8353V13V15.25V16H1.75H14.25H15V15.25V13V12.8353L14.931 12.6857C13.894 10.4388 11.6452 9 9.17055 9H6.82945Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const AttachmentIcon = () => {\n  return (\n    <svg\n      height=\"16\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width=\"16\"\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const VercelIcon = ({ size = 17 }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 1L16 15H0L8 1Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const GitIcon = () => {\n  return (\n    <svg\n      height=\"16\"\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width=\"16\"\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <g clipPath=\"url(#clip0_872_3147)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8 0C3.58 0 0 3.57879 0 7.99729C0 11.5361 2.29 14.5251 5.47 15.5847C5.87 15.6547 6.02 15.4148 6.02 15.2049C6.02 15.0149 6.01 14.3851 6.01 13.7154C4 14.0852 3.48 13.2255 3.32 12.7757C3.23 12.5458 2.84 11.836 2.5 11.6461C2.22 11.4961 1.82 11.1262 2.49 11.1162C3.12 11.1062 3.57 11.696 3.72 11.936C4.44 13.1455 5.59 12.8057 6.05 12.5957C6.12 12.0759 6.33 11.726 6.56 11.5261C4.78 11.3262 2.92 10.6364 2.92 7.57743C2.92 6.70773 3.23 5.98797 3.74 5.42816C3.66 5.22823 3.38 4.40851 3.82 3.30888C3.82 3.30888 4.49 3.09895 6.02 4.1286C6.66 3.94866 7.34 3.85869 8.02 3.85869C8.7 3.85869 9.38 3.94866 10.02 4.1286C11.55 3.08895 12.22 3.30888 12.22 3.30888C12.66 4.40851 12.38 5.22823 12.3 5.42816C12.81 5.98797 13.12 6.69773 13.12 7.57743C13.12 10.6464 11.25 11.3262 9.47 11.5261C9.76 11.776 10.01 12.2558 10.01 13.0056C10.01 14.0752 10 14.9349 10 15.2049C10 15.4148 10.15 15.6647 10.55 15.5847C12.1381 15.0488 13.5182 14.0284 14.4958 12.6673C15.4735 11.3062 15.9996 9.67293 16 7.99729C16 3.57879 12.42 0 8 0Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_872_3147\">\n          <rect width=\"16\" height=\"16\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const BoxIcon = ({ size = 16 }: { size: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 0.154663L8.34601 0.334591L14.596 3.58459L15 3.79466V4.25V11.75V12.2053L14.596 12.4154L8.34601 15.6654L8 15.8453L7.65399 15.6654L1.40399 12.4154L1 12.2053V11.75V4.25V3.79466L1.40399 3.58459L7.65399 0.334591L8 0.154663ZM2.5 11.2947V5.44058L7.25 7.81559V13.7647L2.5 11.2947ZM8.75 13.7647L13.5 11.2947V5.44056L8.75 7.81556V13.7647ZM8 1.84534L12.5766 4.22519L7.99998 6.51352L3.42335 4.2252L8 1.84534Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const HomeIcon = ({ size = 16 }: { size: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.5 6.56062L8.00001 2.06062L3.50001 6.56062V13.5L6.00001 13.5V11C6.00001 9.89539 6.89544 8.99996 8.00001 8.99996C9.10458 8.99996 10 9.89539 10 11V13.5L12.5 13.5V6.56062ZM13.78 5.71933L8.70711 0.646409C8.31659 0.255886 7.68342 0.255883 7.2929 0.646409L2.21987 5.71944C2.21974 5.71957 2.21961 5.7197 2.21949 5.71982L0.469676 7.46963L-0.0606537 7.99996L1.00001 9.06062L1.53034 8.53029L2.00001 8.06062V14.25V15H2.75001L6.00001 15H7.50001H8.50001H10L13.25 15H14V14.25V8.06062L14.4697 8.53029L15 9.06062L16.0607 7.99996L15.5303 7.46963L13.7806 5.71993C13.7804 5.71973 13.7802 5.71953 13.78 5.71933ZM8.50001 11V13.5H7.50001V11C7.50001 10.7238 7.72386 10.5 8.00001 10.5C8.27615 10.5 8.50001 10.7238 8.50001 11Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const GPSIcon = ({ size = 16 }: { size: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        d=\"M1 6L15 1L10 15L7.65955 8.91482C7.55797 8.65073 7.34927 8.44203 7.08518 8.34045L1 6Z\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"bevel\"\n        fill=\"transparent\"\n      />\n    </svg>\n  );\n};\n\nexport const InvoiceIcon = ({ size = 16 }: { size: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13 15.1L12 14.5L10.1524 15.8857C10.0621 15.9534 9.93791 15.9534 9.8476 15.8857L8 14.5L6.14377 15.8922C6.05761 15.9568 5.94008 15.9601 5.85047 15.9003L3.75 14.5L3 15L2.83257 15.1116L1.83633 15.7758L1.68656 15.8756C1.60682 15.9288 1.5 15.8716 1.5 15.7758V15.5958V14.3985V14.1972V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5V14.2507V14.411V15.5881V15.7881C14.5 15.8813 14.3982 15.9389 14.3183 15.891L14.1468 15.7881L13.1375 15.1825L13 15.1ZM12.3787 5L9.5 2.12132V5H12.3787ZM8 1.5V5V6.5H9.5H13V13.3507L12.7717 13.2138L11.9069 12.6948L11.1 13.3L10 14.125L8.9 13.3L8 12.625L7.1 13.3L5.94902 14.1632L4.58205 13.2519L3.75 12.6972L3 13.1972V1.5H8Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const LogoOpenAI = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        d=\"M14.9449 6.54871C15.3128 5.45919 15.1861 4.26567 14.5978 3.27464C13.7131 1.75461 11.9345 0.972595 10.1974 1.3406C9.42464 0.481584 8.3144 -0.00692594 7.15045 7.42132e-05C5.37487 -0.00392587 3.79946 1.1241 3.2532 2.79113C2.11256 3.02164 1.12799 3.72615 0.551837 4.72468C-0.339497 6.24071 -0.1363 8.15175 1.05451 9.45178C0.686626 10.5413 0.813308 11.7348 1.40162 12.7258C2.28637 14.2459 4.06498 15.0279 5.80204 14.6599C6.5743 15.5189 7.68504 16.0074 8.849 15.9999C10.6256 16.0044 12.2015 14.8754 12.7478 13.2069C13.8884 12.9764 14.873 12.2718 15.4491 11.2733C16.3394 9.75728 16.1357 7.84774 14.9454 6.54771L14.9449 6.54871ZM8.85001 14.9544C8.13907 14.9554 7.45043 14.7099 6.90468 14.2604C6.92951 14.2474 6.97259 14.2239 7.00046 14.2069L10.2293 12.3668C10.3945 12.2743 10.4959 12.1008 10.4949 11.9133V7.42173L11.8595 8.19925C11.8742 8.20625 11.8838 8.22025 11.8858 8.23625V11.9558C11.8838 13.6099 10.5263 14.9509 8.85001 14.9544ZM2.32133 12.2028C1.9651 11.5958 1.8369 10.8843 1.95902 10.1938C1.98284 10.2078 2.02489 10.2333 2.05479 10.2503L5.28366 12.0903C5.44733 12.1848 5.65003 12.1848 5.81421 12.0903L9.75604 9.84429V11.3993C9.75705 11.4153 9.74945 11.4308 9.73678 11.4408L6.47295 13.3004C5.01915 14.1264 3.1625 13.6354 2.32184 12.2028H2.32133ZM1.47155 5.24819C1.82626 4.64017 2.38619 4.17516 3.05305 3.93366C3.05305 3.96116 3.05152 4.00966 3.05152 4.04366V7.72424C3.05051 7.91124 3.15186 8.08475 3.31654 8.17725L7.25838 10.4228L5.89376 11.2003C5.88008 11.2093 5.86285 11.2108 5.84765 11.2043L2.58331 9.34327C1.13255 8.51426 0.63494 6.68272 1.47104 5.24869L1.47155 5.24819ZM12.6834 7.82274L8.74157 5.57669L10.1062 4.79968C10.1199 4.79068 10.1371 4.78918 10.1523 4.79568L13.4166 6.65522C14.8699 7.48373 15.3681 9.31827 14.5284 10.7523C14.1732 11.3593 13.6138 11.8243 12.9474 12.0663V8.27575C12.9489 8.08875 12.8481 7.91574 12.6839 7.82274H12.6834ZM14.0414 5.8057C14.0176 5.7912 13.9756 5.7662 13.9457 5.7492L10.7168 3.90916C10.5531 3.81466 10.3504 3.81466 10.1863 3.90916L6.24442 6.15521V4.60017C6.2434 4.58417 6.251 4.56867 6.26367 4.55867L9.52751 2.70063C10.9813 1.87311 12.84 2.36563 13.6781 3.80066C14.0323 4.40667 14.1605 5.11618 14.0404 5.8057H14.0414ZM5.50257 8.57726L4.13744 7.79974C4.12275 7.79274 4.11312 7.77874 4.11109 7.76274V4.04316C4.11211 2.38713 5.47368 1.0451 7.15197 1.0461C7.86189 1.0461 8.54902 1.2921 9.09476 1.74011C9.06993 1.75311 9.02737 1.77661 8.99899 1.79361L5.77012 3.63365C5.60493 3.72615 5.50358 3.89916 5.50459 4.08666L5.50257 8.57626V8.57726ZM6.24391 7.00022L7.99972 5.9997L9.75553 6.99972V9.00027L7.99972 10.0003L6.24391 9.00027V7.00022Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const LogoGoogle = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      data-testid=\"geist-icon\"\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        d=\"M8.15991 6.54543V9.64362H12.4654C12.2763 10.64 11.709 11.4837 10.8581 12.0509L13.4544 14.0655C14.9671 12.6692 15.8399 10.6182 15.8399 8.18188C15.8399 7.61461 15.789 7.06911 15.6944 6.54552L8.15991 6.54543Z\"\n        fill=\"#4285F4\"\n      />\n      <path\n        d=\"M3.6764 9.52268L3.09083 9.97093L1.01807 11.5855C2.33443 14.1963 5.03241 16 8.15966 16C10.3196 16 12.1305 15.2873 13.4542 14.0655L10.8578 12.0509C10.1451 12.5309 9.23598 12.8219 8.15966 12.8219C6.07967 12.8219 4.31245 11.4182 3.67967 9.5273L3.6764 9.52268Z\"\n        fill=\"#34A853\"\n      />\n      <path\n        d=\"M1.01803 4.41455C0.472607 5.49087 0.159912 6.70543 0.159912 7.99995C0.159912 9.29447 0.472607 10.509 1.01803 11.5854C1.01803 11.5926 3.6799 9.51991 3.6799 9.51991C3.5199 9.03991 3.42532 8.53085 3.42532 7.99987C3.42532 7.46889 3.5199 6.95983 3.6799 6.47983L1.01803 4.41455Z\"\n        fill=\"#FBBC05\"\n      />\n      <path\n        d=\"M8.15982 3.18545C9.33802 3.18545 10.3853 3.59271 11.2216 4.37818L13.5125 2.0873C12.1234 0.792777 10.3199 0 8.15982 0C5.03257 0 2.33443 1.79636 1.01807 4.41455L3.67985 6.48001C4.31254 4.58908 6.07983 3.18545 8.15982 3.18545Z\"\n        fill=\"#EA4335\"\n      />\n    </svg>\n  );\n};\n\nexport const LogoAnthropic = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 92.2 65\"\n      style={{ color: 'currentcolor', fill: 'currentcolor' } as React.CSSProperties}\n      width=\"18px\"\n      height=\"18px\"\n    >\n      <path\n        d=\"M66.5,0H52.4l25.7,65h14.1L66.5,0z M25.7,0L0,65h14.4l5.3-13.6h26.9L51.8,65h14.4L40.5,0C40.5,0,25.7,0,25.7,0zM24.3,39.3l8.8-22.8l8.8,22.8H24.3z\"\n      />\n    </svg>\n  );\n};\n\nexport const RouteIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.53033 0.719661L7 0.189331L5.93934 1.24999L6.46967 1.78032L6.68934 1.99999H3.375C1.51104 1.99999 0 3.51103 0 5.37499C0 7.23895 1.51104 8.74999 3.375 8.74999H12.625C13.6605 8.74999 14.5 9.58946 14.5 10.625C14.5 11.6605 13.6605 12.5 12.625 12.5H4.88555C4.56698 11.4857 3.61941 10.75 2.5 10.75C1.11929 10.75 0 11.8693 0 13.25C0 14.6307 1.11929 15.75 2.5 15.75C3.61941 15.75 4.56698 15.0143 4.88555 14H12.625C14.489 14 16 12.489 16 10.625C16 8.76103 14.489 7.24999 12.625 7.24999H3.375C2.33947 7.24999 1.5 6.41052 1.5 5.37499C1.5 4.33946 2.33947 3.49999 3.375 3.49999H6.68934L6.46967 3.71966L5.93934 4.24999L7 5.31065L7.53033 4.78032L8.85355 3.4571C9.24408 3.06657 9.24408 2.43341 8.85355 2.04288L7.53033 0.719661ZM2.5 14.25C3.05228 14.25 3.5 13.8023 3.5 13.25C3.5 12.6977 3.05228 12.25 2.5 12.25C1.94772 12.25 1.5 12.6977 1.5 13.25C1.5 13.8023 1.94772 14.25 2.5 14.25ZM14.5 2.74999C14.5 3.30228 14.0523 3.74999 13.5 3.74999C12.9477 3.74999 12.5 3.30228 12.5 2.74999C12.5 2.19771 12.9477 1.74999 13.5 1.74999C14.0523 1.74999 14.5 2.19771 14.5 2.74999ZM16 2.74999C16 4.1307 14.8807 5.24999 13.5 5.24999C12.1193 5.24999 11 4.1307 11 2.74999C11 1.36928 12.1193 0.249991 13.5 0.249991C14.8807 0.249991 16 1.36928 16 2.74999Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const FileIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V13.5C1.5 14.8807 2.61929 16 4 16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM13 13.5V6.5H9.5H8V5V1.5H3V13.5C3 14.0523 3.44772 14.5 4 14.5H12C12.5523 14.5 13 14.0523 13 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM5.13 5.00062H4.505V6.25062H5.13H6H6.625V5.00062H6H5.13ZM4.505 8H5.13H11H11.625V9.25H11H5.13H4.505V8ZM5.13 11H4.505V12.25H5.13H11H11.625V11H11H5.13Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const LoaderIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <g clipPath=\"url(#clip0_2393_1490)\">\n        <path d=\"M8 0V4\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n        <path\n          opacity=\"0.5\"\n          d=\"M8 16V12\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n        <path\n          opacity=\"0.9\"\n          d=\"M3.29773 1.52783L5.64887 4.7639\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n        <path\n          opacity=\"0.1\"\n          d=\"M12.7023 1.52783L10.3511 4.7639\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n        <path\n          opacity=\"0.4\"\n          d=\"M12.7023 14.472L10.3511 11.236\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n        <path\n          opacity=\"0.6\"\n          d=\"M3.29773 14.472L5.64887 11.236\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n        <path\n          opacity=\"0.2\"\n          d=\"M15.6085 5.52783L11.8043 6.7639\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n        <path\n          opacity=\"0.7\"\n          d=\"M0.391602 10.472L4.19583 9.23598\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n        <path\n          opacity=\"0.3\"\n          d=\"M15.6085 10.4722L11.8043 9.2361\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n        <path\n          opacity=\"0.8\"\n          d=\"M0.391602 5.52783L4.19583 6.7639\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_2393_1490\">\n          <rect width=\"16\" height=\"16\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const UploadIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      data-testid=\"geist-icon\"\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.5 4.875C1.5 3.01104 3.01104 1.5 4.875 1.5C6.20018 1.5 7.34838 2.26364 7.901 3.37829C8.1902 3.96162 8.79547 4.5 9.60112 4.5H12.25C13.4926 4.5 14.5 5.50736 14.5 6.75C14.5 7.42688 14.202 8.03329 13.7276 8.44689L13.1622 8.93972L14.1479 10.0704L14.7133 9.57758C15.5006 8.89123 16 7.8785 16 6.75C16 4.67893 14.3211 3 12.25 3H9.60112C9.51183 3 9.35322 2.93049 9.2449 2.71201C8.44888 1.1064 6.79184 0 4.875 0C2.18261 0 0 2.18261 0 4.875V6.40385C0 7.69502 0.598275 8.84699 1.52982 9.59656L2.11415 10.0667L3.0545 8.89808L2.47018 8.42791C1.87727 7.95083 1.5 7.22166 1.5 6.40385V4.875ZM7.29289 7.39645C7.68342 7.00592 8.31658 7.00592 8.70711 7.39645L11.7803 10.4697L12.3107 11L11.25 12.0607L10.7197 11.5303L8.75 9.56066V15.25V16H7.25V15.25V9.56066L5.28033 11.5303L4.75 12.0607L3.68934 11L4.21967 10.4697L7.29289 7.39645Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const MenuIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1 2H1.75H14.25H15V3.5H14.25H1.75H1V2ZM1 12.5H1.75H14.25H15V14H14.25H1.75H1V12.5ZM1.75 7.25H1V8.75H1.75H14.25H15V7.25H14.25H1.75Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const PencilEditIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.75 0.189331L12.2803 0.719661L15.2803 3.71966L15.8107 4.24999L15.2803 4.78032L5.15901 14.9016C4.45575 15.6049 3.50192 16 2.50736 16H0.75H0V15.25V13.4926C0 12.4981 0.395088 11.5442 1.09835 10.841L11.2197 0.719661L11.75 0.189331ZM11.75 2.31065L9.81066 4.24999L11.75 6.18933L13.6893 4.24999L11.75 2.31065ZM2.15901 11.9016L8.75 5.31065L10.6893 7.24999L4.09835 13.841C3.67639 14.2629 3.1041 14.5 2.50736 14.5H1.5V13.4926C1.5 12.8959 1.73705 12.3236 2.15901 11.9016ZM9 16H16V14.5H9V16Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const CheckedSquare = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M15 16H1C0.447715 16 0 15.5523 0 15V1C0 0.447715 0.447716 0 1 0L15 8.17435e-06C15.5523 8.47532e-06 16 0.447724 16 1.00001V15C16 15.5523 15.5523 16 15 16ZM11.7803 6.28033L12.3107 5.75L11.25 4.68934L10.7197 5.21967L6.5 9.43935L5.28033 8.21967L4.75001 7.68934L3.68934 8.74999L4.21967 9.28033L5.96967 11.0303C6.11032 11.171 6.30109 11.25 6.5 11.25C6.69891 11.25 6.88968 11.171 7.03033 11.0303L11.7803 6.28033Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const UncheckedSquare = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <rect\n        x=\"1\"\n        y=\"1\"\n        width=\"14\"\n        height=\"14\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        fill=\"none\"\n      />\n    </svg>\n  );\n};\n\nexport const MoreIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <circle cx=\"4.5\" cy=\"11.5\" r=\"1.5\" fill=\"black\" />\n      <circle cx=\"11.5\" cy=\"11.5\" r=\"1.5\" fill=\"black\" />\n      <path d=\"M20 11.5C20 12.3284 19.3284 13 18.5 13C17.6716 13 17 12.3284 17 11.5C17 10.6716 17.6716 10 18.5 10C19.3284 10 20 10.6716 20 11.5Z\" fill=\"black\" />\n    </svg>\n\n  );\n};\n\nexport const TrashIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6.75 2.75C6.75 2.05964 7.30964 1.5 8 1.5C8.69036 1.5 9.25 2.05964 9.25 2.75V3H6.75V2.75ZM5.25 3V2.75C5.25 1.23122 6.48122 0 8 0C9.51878 0 10.75 1.23122 10.75 2.75V3H12.9201H14.25H15V4.5H14.25H13.8846L13.1776 13.6917C13.0774 14.9942 11.9913 16 10.6849 16H5.31508C4.00874 16 2.92263 14.9942 2.82244 13.6917L2.11538 4.5H1.75H1V3H1.75H3.07988H5.25ZM4.31802 13.5767L3.61982 4.5H12.3802L11.682 13.5767C11.6419 14.0977 11.2075 14.5 10.6849 14.5H5.31508C4.79254 14.5 4.3581 14.0977 4.31802 13.5767Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const InfoIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM6.25002 7H7.00002H7.75C8.30229 7 8.75 7.44772 8.75 8V11.5V12.25H7.25V11.5V8.5H7.00002H6.25002V7ZM8 6C8.55229 6 9 5.55228 9 5C9 4.44772 8.55229 4 8 4C7.44772 4 7 4.44772 7 5C7 5.55228 7.44772 6 8 6Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const ArrowUpIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.70711 1.39644C8.31659 1.00592 7.68342 1.00592 7.2929 1.39644L2.21968 6.46966L1.68935 6.99999L2.75001 8.06065L3.28034 7.53032L7.25001 3.56065V14.25V15H8.75001V14.25V3.56065L12.7197 7.53032L13.25 8.06065L14.3107 6.99999L13.7803 6.46966L8.70711 1.39644Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const StopIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M3 3H13V13H3V3Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const PaperclipIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n      className=\"-rotate-45\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.8591 1.70735C10.3257 1.70735 9.81417 1.91925 9.437 2.29643L3.19455 8.53886C2.56246 9.17095 2.20735 10.0282 2.20735 10.9222C2.20735 11.8161 2.56246 12.6734 3.19455 13.3055C3.82665 13.9376 4.68395 14.2927 5.57786 14.2927C6.47178 14.2927 7.32908 13.9376 7.96117 13.3055L14.2036 7.06304L14.7038 6.56287L15.7041 7.56321L15.204 8.06337L8.96151 14.3058C8.06411 15.2032 6.84698 15.7074 5.57786 15.7074C4.30875 15.7074 3.09162 15.2032 2.19422 14.3058C1.29682 13.4084 0.792664 12.1913 0.792664 10.9222C0.792664 9.65305 1.29682 8.43592 2.19422 7.53852L8.43666 1.29609C9.07914 0.653606 9.95054 0.292664 10.8591 0.292664C11.7678 0.292664 12.6392 0.653606 13.2816 1.29609C13.9241 1.93857 14.2851 2.80997 14.2851 3.71857C14.2851 4.62718 13.9241 5.49858 13.2816 6.14106L13.2814 6.14133L7.0324 12.3835C7.03231 12.3836 7.03222 12.3837 7.03213 12.3838C6.64459 12.7712 6.11905 12.9888 5.57107 12.9888C5.02297 12.9888 4.49731 12.7711 4.10974 12.3835C3.72217 11.9959 3.50444 11.4703 3.50444 10.9222C3.50444 10.3741 3.72217 9.8484 4.10974 9.46084L4.11004 9.46054L9.877 3.70039L10.3775 3.20051L11.3772 4.20144L10.8767 4.70131L5.11008 10.4612C5.11005 10.4612 5.11003 10.4612 5.11 10.4613C4.98779 10.5835 4.91913 10.7493 4.91913 10.9222C4.91913 11.0951 4.98782 11.2609 5.11008 11.3832C5.23234 11.5054 5.39817 11.5741 5.57107 11.5741C5.74398 11.5741 5.9098 11.5054 6.03206 11.3832L6.03233 11.3829L12.2813 5.14072C12.2814 5.14063 12.2815 5.14054 12.2816 5.14045C12.6586 4.7633 12.8704 4.25185 12.8704 3.71857C12.8704 3.18516 12.6585 2.6736 12.2813 2.29643C11.9041 1.91925 11.3926 1.70735 10.8591 1.70735Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const MoreHorizontalIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4 8C4 8.82843 3.32843 9.5 2.5 9.5C1.67157 9.5 1 8.82843 1 8C1 7.17157 1.67157 6.5 2.5 6.5C3.32843 6.5 4 7.17157 4 8ZM9.5 8C9.5 8.82843 8.82843 9.5 8 9.5C7.17157 9.5 6.5 8.82843 6.5 8C6.5 7.17157 7.17157 6.5 8 6.5C8.82843 6.5 9.5 7.17157 9.5 8ZM13.5 9.5C14.3284 9.5 15 8.82843 15 8C15 7.17157 14.3284 6.5 13.5 6.5C12.6716 6.5 12 7.17157 12 8C12 8.82843 12.6716 9.5 13.5 9.5Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const MessageIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2.8914 10.4028L2.98327 10.6318C3.22909 11.2445 3.5 12.1045 3.5 13C3.5 13.3588 3.4564 13.7131 3.38773 14.0495C3.69637 13.9446 4.01409 13.8159 4.32918 13.6584C4.87888 13.3835 5.33961 13.0611 5.70994 12.7521L6.22471 12.3226L6.88809 12.4196C7.24851 12.4724 7.61994 12.5 8 12.5C11.7843 12.5 14.5 9.85569 14.5 7C14.5 4.14431 11.7843 1.5 8 1.5C4.21574 1.5 1.5 4.14431 1.5 7C1.5 8.18175 1.94229 9.29322 2.73103 10.2153L2.8914 10.4028ZM2.8135 15.7653C1.76096 16 1 16 1 16C1 16 1.43322 15.3097 1.72937 14.4367C1.88317 13.9834 2 13.4808 2 13C2 12.3826 1.80733 11.7292 1.59114 11.1903C0.591845 10.0221 0 8.57152 0 7C0 3.13401 3.58172 0 8 0C12.4183 0 16 3.13401 16 7C16 10.866 12.4183 14 8 14C7.54721 14 7.10321 13.9671 6.67094 13.9038C6.22579 14.2753 5.66881 14.6656 5 15C4.23366 15.3832 3.46733 15.6195 2.8135 15.7653Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const CrossIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M12.4697 13.5303L13 14.0607L14.0607 13L13.5303 12.4697L9.06065 7.99999L13.5303 3.53032L14.0607 2.99999L13 1.93933L12.4697 2.46966L7.99999 6.93933L3.53032 2.46966L2.99999 1.93933L1.93933 2.99999L2.46966 3.53032L6.93933 7.99999L2.46966 12.4697L1.93933 13L2.99999 14.0607L3.53032 13.5303L7.99999 9.06065L12.4697 13.5303Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const CrossSmallIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.96966 11.0303L10.5 11.5607L11.5607 10.5L11.0303 9.96966L9.06065 7.99999L11.0303 6.03032L11.5607 5.49999L10.5 4.43933L9.96966 4.96966L7.99999 6.93933L6.03032 4.96966L5.49999 4.43933L4.43933 5.49999L4.96966 6.03032L6.93933 7.99999L4.96966 9.96966L4.43933 10.5L5.49999 11.5607L6.03032 11.0303L7.99999 9.06065L9.96966 11.0303Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const UndoIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M13.5 8C13.5 4.96643 11.0257 2.5 7.96452 2.5C5.42843 2.5 3.29365 4.19393 2.63724 6.5H5.25H6V8H5.25H0.75C0.335787 8 0 7.66421 0 7.25V2.75V2H1.5V2.75V5.23347C2.57851 2.74164 5.06835 1 7.96452 1C11.8461 1 15 4.13001 15 8C15 11.87 11.8461 15 7.96452 15C5.62368 15 3.54872 13.8617 2.27046 12.1122L1.828 11.5066L3.03915 10.6217L3.48161 11.2273C4.48831 12.6051 6.12055 13.5 7.96452 13.5C11.0257 13.5 13.5 11.0336 13.5 8Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const RedoIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M2.5 8C2.5 4.96643 4.97431 2.5 8.03548 2.5C10.5716 2.5 12.7064 4.19393 13.3628 6.5H10.75H10V8H10.75H15.25C15.6642 8 16 7.66421 16 7.25V2.75V2H14.5V2.75V5.23347C13.4215 2.74164 10.9316 1 8.03548 1C4.1539 1 1 4.13001 1 8C1 11.87 4.1539 15 8.03548 15C10.3763 15 12.4513 13.8617 13.7295 12.1122L14.172 11.5066L12.9609 10.6217L12.5184 11.2273C11.5117 12.6051 9.87945 13.5 8.03548 13.5C4.97431 13.5 2.5 11.0336 2.5 8Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const DeltaIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M2.67705 15H1L1.75 13.5L6.16147 4.67705L6.15836 4.67082L6.16667 4.66667L7.16147 2.67705L8 1L8.83853 2.67705L14.25 13.5L15 15H13.3229H2.67705ZM7 6.3541L10.5729 13.5H3.42705L7 6.3541Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const PenIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M8.75 0.189331L9.28033 0.719661L15.2803 6.71966L15.8107 7.24999L15.2803 7.78032L13.7374 9.32322C13.1911 9.8696 12.3733 9.97916 11.718 9.65188L9.54863 13.5568C8.71088 15.0648 7.12143 16 5.39639 16H0.75H0V15.25V10.6036C0 8.87856 0.935237 7.28911 2.4432 6.45136L6.34811 4.28196C6.02084 3.62674 6.13039 2.80894 6.67678 2.26255L8.21967 0.719661L8.75 0.189331ZM7.3697 5.43035L10.5696 8.63029L8.2374 12.8283C7.6642 13.8601 6.57668 14.5 5.39639 14.5H2.56066L5.53033 11.5303L4.46967 10.4697L1.5 13.4393V10.6036C1.5 9.42331 2.1399 8.33579 3.17166 7.76259L7.3697 5.43035ZM12.6768 8.26256C12.5791 8.36019 12.4209 8.36019 12.3232 8.26255L12.0303 7.96966L8.03033 3.96966L7.73744 3.67677C7.63981 3.57914 7.63981 3.42085 7.73744 3.32321L8.75 2.31065L13.6893 7.24999L12.6768 8.26256Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const SummarizeIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M1.75 12H1V10.5H1.75H5.25H6V12H5.25H1.75ZM1.75 7.75H1V6.25H1.75H4.25H5V7.75H4.25H1.75ZM1.75 3.5H1V2H1.75H7.25H8V3.5H7.25H1.75ZM12.5303 14.7803C12.2374 15.0732 11.7626 15.0732 11.4697 14.7803L9.21967 12.5303L8.68934 12L9.75 10.9393L10.2803 11.4697L11.25 12.4393V2.75V2H12.75V2.75V12.4393L13.7197 11.4697L14.25 10.9393L15.3107 12L14.7803 12.5303L12.5303 14.7803Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const SidebarLeftIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M6.245 2.5H14.5V12.5C14.5 13.0523 14.0523 13.5 13.5 13.5H6.245V2.5ZM4.995 2.5H1.5V12.5C1.5 13.0523 1.94772 13.5 2.5 13.5H4.995V2.5ZM0 1H1.5H14.5H16V2.5V12.5C16 13.8807 14.8807 15 13.5 15H2.5C1.11929 15 0 13.8807 0 12.5V2.5V1Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const PlusIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M8.75 1.75V1H7.25V1.75V6.75H2.25H1.5V8.25H2.25H7.25V13.25V14H8.75V13.25V8.25H13.75H14.5V6.75H13.75H8.75V1.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const CopyIcon = ({ size = 24 }: { size?: number }) => (\n  <svg\n    height={size}\n    viewBox=\"0 0 24 24\"\n    width={size}\n    fill=\"none\"\n  >\n    <path d=\"M0 4C0 1.79086 1.79086 0 4 0H20C22.2091 0 24 1.79086 24 4V20C24 22.2091 22.2091 24 20 24H4C1.79086 24 0 22.2091 0 20V4Z\" />\n    <path d=\"M9.60016 14.3991C9.60016 12.137 9.60016 11.0051 10.3033 10.3027C11.0056 9.59961 12.1375 9.59961 14.3997 9.59961H15.1996C17.4618 9.59961 18.5937 9.59961 19.296 10.3027C19.9992 11.0051 19.9992 12.137 19.9992 14.3991V15.1991C19.9992 17.4612 19.9992 18.5931 19.296 19.2955C18.5937 19.9986 17.4618 19.9986 15.1996 19.9986H14.3997C12.1375 19.9986 11.0056 19.9986 10.3033 19.2955C9.60016 18.5931 9.60016 17.4612 9.60016 15.1991V14.3991Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M15.9988 9.59946C15.9964 7.23409 15.9612 6.00861 15.2725 5.16949C15.1396 5.00762 14.9912 4.85919 14.8294 4.72633C13.943 4 12.6296 4 9.99942 4C7.37007 4 6.055 4 5.16949 4.72633C5.00762 4.85919 4.85919 5.00762 4.72633 5.16949C4 6.0558 4 7.36927 4 9.99942C4 12.6288 4 13.9438 4.72633 14.8294C4.85919 14.9912 5.00762 15.1396 5.16949 15.2725C6.00941 15.9604 7.23329 15.9972 9.59946 15.9988\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n);\n\nexport const ThumbUpIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M6.89531 2.23972C6.72984 2.12153 6.5 2.23981 6.5 2.44315V5.25001C6.5 6.21651 5.7165 7.00001 4.75 7.00001H2.5V13.5H12.1884C12.762 13.5 13.262 13.1096 13.4011 12.5532L14.4011 8.55318C14.5984 7.76425 14.0017 7.00001 13.1884 7.00001H9.25H8.5V6.25001V3.51458C8.5 3.43384 8.46101 3.35807 8.39531 3.31114L6.89531 2.23972ZM5 2.44315C5 1.01975 6.6089 0.191779 7.76717 1.01912L9.26717 2.09054C9.72706 2.41904 10 2.94941 10 3.51458V5.50001H13.1884C14.9775 5.50001 16.2903 7.18133 15.8563 8.91698L14.8563 12.917C14.5503 14.1412 13.4503 15 12.1884 15H1.75H1V14.25V6.25001V5.50001H1.75H4.75C4.88807 5.50001 5 5.38808 5 5.25001V2.44315Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const ThumbDownIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M6.89531 13.7603C6.72984 13.8785 6.5 13.7602 6.5 13.5569V10.75C6.5 9.7835 5.7165 9 4.75 9H2.5V2.5H12.1884C12.762 2.5 13.262 2.89037 13.4011 3.44683L14.4011 7.44683C14.5984 8.23576 14.0017 9 13.1884 9H9.25H8.5V9.75V12.4854C8.5 12.5662 8.46101 12.6419 8.39531 12.6889L6.89531 13.7603ZM5 13.5569C5 14.9803 6.6089 15.8082 7.76717 14.9809L9.26717 13.9095C9.72706 13.581 10 13.0506 10 12.4854V10.5H13.1884C14.9775 10.5 16.2903 8.81868 15.8563 7.08303L14.8563 3.08303C14.5503 1.85882 13.4503 1 12.1884 1H1.75H1V1.75V9.75V10.5H1.75H4.75C4.88807 10.5 5 10.6119 5 10.75V13.5569Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const ChevronDownIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M12.0607 6.74999L11.5303 7.28032L8.7071 10.1035C8.31657 10.4941 7.68341 10.4941 7.29288 10.1035L4.46966 7.28032L3.93933 6.74999L4.99999 5.68933L5.53032 6.21966L7.99999 8.68933L10.4697 6.21966L11 5.68933L12.0607 6.74999Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const CheckCircleFillIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const GlobeIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.268 14.0934C11.9051 13.4838 13.2303 12.2333 13.9384 10.6469C13.1192 10.7941 12.2138 10.9111 11.2469 10.9925C11.0336 12.2005 10.695 13.2621 10.268 14.0934ZM8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM8.48347 14.4823C8.32384 14.494 8.16262 14.5 8 14.5C7.83738 14.5 7.67616 14.494 7.51654 14.4823C7.5132 14.4791 7.50984 14.4759 7.50647 14.4726C7.2415 14.2165 6.94578 13.7854 6.67032 13.1558C6.41594 12.5744 6.19979 11.8714 6.04101 11.0778C6.67605 11.1088 7.33104 11.125 8 11.125C8.66896 11.125 9.32395 11.1088 9.95899 11.0778C9.80021 11.8714 9.58406 12.5744 9.32968 13.1558C9.05422 13.7854 8.7585 14.2165 8.49353 14.4726C8.49016 14.4759 8.4868 14.4791 8.48347 14.4823ZM11.4187 9.72246C12.5137 9.62096 13.5116 9.47245 14.3724 9.28806C14.4561 8.87172 14.5 8.44099 14.5 8C14.5 7.55901 14.4561 7.12828 14.3724 6.71194C13.5116 6.52755 12.5137 6.37904 11.4187 6.27753C11.4719 6.83232 11.5 7.40867 11.5 8C11.5 8.59133 11.4719 9.16768 11.4187 9.72246ZM10.1525 6.18401C10.2157 6.75982 10.25 7.36805 10.25 8C10.25 8.63195 10.2157 9.24018 10.1525 9.81598C9.46123 9.85455 8.7409 9.875 8 9.875C7.25909 9.875 6.53877 9.85455 5.84749 9.81598C5.7843 9.24018 5.75 8.63195 5.75 8C5.75 7.36805 5.7843 6.75982 5.84749 6.18401C6.53877 6.14545 7.25909 6.125 8 6.125C8.74091 6.125 9.46123 6.14545 10.1525 6.18401ZM11.2469 5.00748C12.2138 5.08891 13.1191 5.20593 13.9384 5.35306C13.2303 3.7667 11.9051 2.51622 10.268 1.90662C10.695 2.73788 11.0336 3.79953 11.2469 5.00748ZM8.48347 1.51771C8.4868 1.52089 8.49016 1.52411 8.49353 1.52737C8.7585 1.78353 9.05422 2.21456 9.32968 2.84417C9.58406 3.42562 9.80021 4.12856 9.95899 4.92219C9.32395 4.89118 8.66896 4.875 8 4.875C7.33104 4.875 6.67605 4.89118 6.04101 4.92219C6.19978 4.12856 6.41594 3.42562 6.67032 2.84417C6.94578 2.21456 7.2415 1.78353 7.50647 1.52737C7.50984 1.52411 7.51319 1.52089 7.51653 1.51771C7.67615 1.50597 7.83738 1.5 8 1.5C8.16262 1.5 8.32384 1.50597 8.48347 1.51771ZM5.73202 1.90663C4.0949 2.51622 2.76975 3.7667 2.06159 5.35306C2.88085 5.20593 3.78617 5.08891 4.75309 5.00748C4.96639 3.79953 5.30497 2.73788 5.73202 1.90663ZM4.58133 6.27753C3.48633 6.37904 2.48837 6.52755 1.62761 6.71194C1.54392 7.12828 1.5 7.55901 1.5 8C1.5 8.44099 1.54392 8.87172 1.62761 9.28806C2.48837 9.47245 3.48633 9.62096 4.58133 9.72246C4.52807 9.16768 4.5 8.59133 4.5 8C4.5 7.40867 4.52807 6.83232 4.58133 6.27753ZM4.75309 10.9925C3.78617 10.9111 2.88085 10.7941 2.06159 10.6469C2.76975 12.2333 4.0949 13.4838 5.73202 14.0934C5.30497 13.2621 4.96639 12.2005 4.75309 10.9925Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const LockIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10 4.5V6H6V4.5C6 3.39543 6.89543 2.5 8 2.5C9.10457 2.5 10 3.39543 10 4.5ZM4.5 6V4.5C4.5 2.567 6.067 1 8 1C9.933 1 11.5 2.567 11.5 4.5V6H12.5H14V7.5V12.5C14 13.8807 12.8807 15 11.5 15H4.5C3.11929 15 2 13.8807 2 12.5V7.5V6H3.5H4.5ZM11.5 7.5H10H6H4.5H3.5V12.5C3.5 13.0523 3.94772 13.5 4.5 13.5H11.5C12.0523 13.5 12.5 13.0523 12.5 12.5V7.5H11.5Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const EyeIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.02168 4.76932C6.11619 2.33698 9.88374 2.33698 11.9783 4.76932L14.7602 7.99999L11.9783 11.2307C9.88374 13.663 6.1162 13.663 4.02168 11.2307L1.23971 7.99999L4.02168 4.76932ZM13.1149 3.79054C10.422 0.663244 5.57797 0.663247 2.88503 3.79054L-0.318359 7.5106V8.48938L2.88503 12.2094C5.57797 15.3367 10.422 15.3367 13.1149 12.2094L16.3183 8.48938V7.5106L13.1149 3.79054ZM6.49997 7.99999C6.49997 7.17157 7.17154 6.49999 7.99997 6.49999C8.82839 6.49999 9.49997 7.17157 9.49997 7.99999C9.49997 8.82842 8.82839 9.49999 7.99997 9.49999C7.17154 9.49999 6.49997 8.82842 6.49997 7.99999ZM7.99997 4.99999C6.34311 4.99999 4.99997 6.34314 4.99997 7.99999C4.99997 9.65685 6.34311 11 7.99997 11C9.65682 11 11 9.65685 11 7.99999C11 6.34314 9.65682 4.99999 7.99997 4.99999Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const ShareIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M15 11.25V10.5H13.5V11.25V12.75C13.5 13.1642 13.1642 13.5 12.75 13.5H3.25C2.83579 13.5 2.5 13.1642 2.5 12.75L2.5 3.25C2.5 2.83579 2.83579 2.5 3.25 2.5H5.75H6.5V1H5.75H3.25C2.00736 1 1 2.00736 1 3.25V12.75C1 13.9926 2.00736 15 3.25 15H12.75C13.9926 15 15 13.9926 15 12.75V11.25ZM15 5.5L10.5 1V4C7.46243 4 5 6.46243 5 9.5V10L5.05855 9.91218C6.27146 8.09281 8.31339 7 10.5 7V10L15 5.5Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport function MessageShareIcon({ size = 16 }: { size?: number }) {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 24 24\"\n      width={size}\n      fill=\"none\"\n    >\n      <path\n        d=\"M8.6125 10.8083L14.3875 7.69167M8.6125 13.1917L14.3875 16.3083M3.625 12C3.625 12.7293 3.90156 13.4288 4.39384 13.9445C4.88613 14.4603 5.55381 14.75 6.25 14.75C6.94619 14.75 7.61387 14.4603 8.10616 13.9445C8.59844 13.4288 8.875 12.7293 8.875 12C8.875 11.2707 8.59844 10.5712 8.10616 10.0555C7.61387 9.53973 6.94619 9.25 6.25 9.25C5.55381 9.25 4.88613 9.53973 4.39384 10.0555C3.90156 10.5712 3.625 11.2707 3.625 12ZM14.125 6.5C14.125 7.22935 14.4016 7.92882 14.8938 8.44454C15.3861 8.96027 16.0538 9.25 16.75 9.25C17.4462 9.25 18.1139 8.96027 18.6062 8.44454C19.0984 7.92882 19.375 7.22935 19.375 6.5C19.375 5.77065 19.0984 5.07118 18.6062 4.55546C18.1139 4.03973 17.4462 3.75 16.75 3.75C16.0538 3.75 15.3861 4.03973 14.8938 4.55546C14.4016 5.07118 14.125 5.77065 14.125 6.5ZM14.125 17.5C14.125 18.2293 14.4016 18.9288 14.8938 19.4445C15.3861 19.9603 16.0538 20.25 16.75 20.25C17.4462 20.25 18.1139 19.9603 18.6062 19.4445C19.0984 18.9288 19.375 18.2293 19.375 17.5C19.375 16.7707 19.0984 16.0712 18.6062 15.5555C18.1139 15.0397 17.4462 14.75 16.75 14.75C16.0538 14.75 15.3861 15.0397 14.8938 15.5555C14.4016 16.0712 14.125 16.7707 14.125 17.5Z\"\n        stroke=\"currentColor\"\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n  );\n}\n\nexport const CodeIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.21969 12.5303L4.75002 13.0607L5.81068 12L5.28035 11.4697L1.81068 7.99999L5.28035 4.53032L5.81068 3.99999L4.75002 2.93933L4.21969 3.46966L0.39647 7.29289C0.00594562 7.68341 0.00594562 8.31658 0.39647 8.7071L4.21969 12.5303ZM11.7804 12.5303L11.25 13.0607L10.1894 12L10.7197 11.4697L14.1894 7.99999L10.7197 4.53032L10.1894 3.99999L11.25 2.93933L11.7804 3.46966L15.6036 7.29289C15.9941 7.68341 15.9941 8.31658 15.6036 8.7071L11.7804 12.5303Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const PlayIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.4549 7.22745L13.3229 7.16146L2.5 1.74999L2.4583 1.72914L1.80902 1.4045L1.3618 1.18089C1.19558 1.09778 1 1.21865 1 1.4045L1 1.9045L1 2.63041L1 2.67704L1 13.3229L1 13.3696L1 14.0955L1 14.5955C1 14.7813 1.19558 14.9022 1.3618 14.8191L1.80902 14.5955L2.4583 14.2708L2.5 14.25L13.3229 8.83852L13.4549 8.77253L14.2546 8.37267L14.5528 8.2236C14.737 8.13147 14.737 7.86851 14.5528 7.77638L14.2546 7.62731L13.4549 7.22745ZM11.6459 7.99999L2.5 3.42704L2.5 12.5729L11.6459 7.99999Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const PythonIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        d=\"M7.90474 0.00013087C7.24499 0.00316291 6.61494 0.0588153 6.06057 0.15584C4.42745 0.441207 4.13094 1.0385 4.13094 2.14002V3.59479H7.9902V4.07971H4.13094H2.68259C1.56099 4.07971 0.578874 4.7465 0.271682 6.01496C-0.0826597 7.4689 -0.0983767 8.37619 0.271682 9.89434C0.546012 11.0244 1.20115 11.8296 2.32276 11.8296H3.64966V10.0856C3.64966 8.82574 4.75179 7.71441 6.06057 7.71441H9.91533C10.9884 7.71441 11.845 6.84056 11.845 5.77472V2.14002C11.845 1.10556 10.9626 0.328487 9.91533 0.15584C9.25237 0.046687 8.56448 -0.00290121 7.90474 0.00013087ZM5.81768 1.17017C6.21631 1.17017 6.54185 1.49742 6.54185 1.89978C6.54185 2.30072 6.21631 2.62494 5.81768 2.62494C5.41761 2.62494 5.09351 2.30072 5.09351 1.89978C5.09351 1.49742 5.41761 1.17017 5.81768 1.17017Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M12.3262 4.07971V5.77472C12.3262 7.08883 11.1997 8.19488 9.91525 8.19488H6.06049C5.0046 8.19488 4.13086 9.0887 4.13086 10.1346V13.7693C4.13086 14.8037 5.04033 15.4122 6.06049 15.709C7.28211 16.0642 8.45359 16.1285 9.91525 15.709C10.8868 15.4307 11.8449 14.8708 11.8449 13.7693V12.3145H7.99012V11.8296H11.8449H13.7745C14.8961 11.8296 15.3141 11.0558 15.7041 9.89434C16.1071 8.69865 16.0899 7.5488 15.7041 6.01495C15.4269 4.91058 14.8975 4.07971 13.7745 4.07971H12.3262ZM10.1581 13.2843C10.5582 13.2843 10.8823 13.6086 10.8823 14.0095C10.8823 14.4119 10.5582 14.7391 10.1581 14.7391C9.7595 14.7391 9.43397 14.4119 9.43397 14.0095C9.43397 13.6086 9.7595 13.2843 10.1581 13.2843Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const TerminalWindowIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.5 2.5H14.5V12.5C14.5 13.0523 14.0523 13.5 13.5 13.5H2.5C1.94772 13.5 1.5 13.0523 1.5 12.5V2.5ZM0 1H1.5H14.5H16V2.5V12.5C16 13.8807 14.8807 15 13.5 15H2.5C1.11929 15 0 13.8807 0 12.5V2.5V1ZM4 11.1339L4.44194 10.6919L6.51516 8.61872C6.85687 8.27701 6.85687 7.72299 6.51517 7.38128L4.44194 5.30806L4 4.86612L3.11612 5.75L3.55806 6.19194L5.36612 8L3.55806 9.80806L3.11612 10.25L4 11.1339ZM8 9.75494H8.6225H11.75H12.3725V10.9999H11.75H8.6225H8V9.75494Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const TerminalIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.53035 12.7804L1.00002 13.3108L-0.0606384 12.2501L0.469692 11.7198L4.18936 8.00011L0.469692 4.28044L-0.0606384 3.75011L1.00002 2.68945L1.53035 3.21978L5.60358 7.29301C5.9941 7.68353 5.9941 8.3167 5.60357 8.70722L1.53035 12.7804ZM8.75002 12.5001H8.00002V14.0001H8.75002H15.25H16V12.5001H15.25H8.75002Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const ClockRewind = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.96452 2.5C11.0257 2.5 13.5 4.96643 13.5 8C13.5 11.0336 11.0257 13.5 7.96452 13.5C6.12055 13.5 4.48831 12.6051 3.48161 11.2273L3.03915 10.6217L1.828 11.5066L2.27046 12.1122C3.54872 13.8617 5.62368 15 7.96452 15C11.8461 15 15 11.87 15 8C15 4.13001 11.8461 1 7.96452 1C5.06835 1 2.57851 2.74164 1.5 5.23347V3.75V3H0V3.75V7.25C0 7.66421 0.335786 8 0.75 8H3.75H4.5V6.5H3.75H2.63724C3.29365 4.19393 5.42843 2.5 7.96452 2.5ZM8.75 5.25V4.5H7.25V5.25V7.8662C7.25 8.20056 7.4171 8.51279 7.6953 8.69825L9.08397 9.62404L9.70801 10.0401L10.5401 8.79199L9.91603 8.37596L8.75 7.59861V5.25Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const LogsIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9 2H9.75H14.25H15V3.5H14.25H9.75H9V2ZM9 12.5H9.75H14.25H15V14H14.25H9.75H9V12.5ZM9.75 7.25H9V8.75H9.75H14.25H15V7.25H14.25H9.75ZM1 12.5H1.75H2.25H3V14H2.25H1.75H1V12.5ZM1.75 2H1V3.5H1.75H2.25H3V2H2.25H1.75ZM1 7.25H1.75H2.25H3V8.75H2.25H1.75H1V7.25ZM5.75 12.5H5V14H5.75H6.25H7V12.5H6.25H5.75ZM5 2H5.75H6.25H7V3.5H6.25H5.75H5V2ZM5.75 7.25H5V8.75H5.75H6.25H7V7.25H6.25H5.75Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const ImageIcon = ({ size = 16 }: { size?: number }) => {\n  return (\n    <svg\n      height={size}\n      strokeLinejoin=\"round\"\n      viewBox=\"0 0 16 16\"\n      width={size}\n      style={{ color: 'currentcolor' } as React.CSSProperties}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.5 2.5H1.5V9.18933L2.96966 7.71967L3.18933 7.5H3.49999H6.63001H6.93933L6.96966 7.46967L10.4697 3.96967L11.5303 3.96967L14.5 6.93934V2.5ZM8.00066 8.55999L9.53034 10.0897L10.0607 10.62L9.00001 11.6807L8.46968 11.1503L6.31935 9H3.81065L1.53032 11.2803L1.5 11.3106V12.5C1.5 13.0523 1.94772 13.5 2.5 13.5H13.5C14.0523 13.5 14.5 13.0523 14.5 12.5V9.06066L11 5.56066L8.03032 8.53033L8.00066 8.55999ZM4.05312e-06 10.8107V12.5C4.05312e-06 13.8807 1.11929 15 2.5 15H13.5C14.8807 15 16 13.8807 16 12.5V9.56066L16.5607 9L16.0303 8.46967L16 8.43934V2.5V1H14.5H1.5H4.05312e-06V2.5V10.6893L-0.0606689 10.75L4.05312e-06 10.8107Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const FullscreenIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M1 5.25V6H2.5V5.25V2.5H5.25H6V1H5.25H2C1.44772 1 1 1.44772 1 2V5.25ZM5.25 14.9994H6V13.4994H5.25H2.5V10.7494V9.99939H1V10.7494V13.9994C1 14.5517 1.44772 14.9994 2 14.9994H5.25ZM15 10V10.75V14C15 14.5523 14.5523 15 14 15H10.75H10V13.5H10.75H13.5V10.75V10H15ZM10.75 1H10V2.5H10.75H13.5V5.25V6H15V5.25V2C15 1.44772 14.5523 1 14 1H10.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const DownloadIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M8.75 1V1.75V8.68934L10.7197 6.71967L11.25 6.18934L12.3107 7.25L11.7803 7.78033L8.70711 10.8536C8.31658 11.2441 7.68342 11.2441 7.29289 10.8536L4.21967 7.78033L3.68934 7.25L4.75 6.18934L5.28033 6.71967L7.25 8.68934V1.75V1H8.75ZM13.5 9.25V13.5H2.5V9.25V8.5H1V9.25V14C1 14.5523 1.44771 15 2 15H14C14.5523 15 15 14.5523 15 14V9.25V8.5H13.5V9.25Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const LineChartIcon = ({ size = 16 }: { size?: number }) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    viewBox=\"0 0 16 16\"\n    width={size}\n    style={{ color: 'currentcolor' } as React.CSSProperties}\n  >\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M1 1v11.75A2.25 2.25 0 0 0 3.25 15H15v-1.5H3.25a.75.75 0 0 1-.75-.75V1H1Zm13.297 5.013.513-.547-1.094-1.026-.513.547-3.22 3.434-2.276-2.275a1 1 0 0 0-1.414 0L4.22 8.22l-.53.53 1.06 1.06.53-.53L7 7.56l2.287 2.287a1 1 0 0 0 1.437-.023l3.573-3.811Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport const CloseIcon = ({ size = 24 }: { size?: number }) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M7 17L17 7M7 7L17 17\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  );\n};\n\nexport const ArrowRightIcon = ({ size = 24 }: { size?: number }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <path d=\"M20.3635 12.7068C20.5509 12.5193 20.6562 12.265 20.6562 11.9998C20.6562 11.7347 20.5509 11.4803 20.3635 11.2928L14.7065 5.63582C14.5179 5.45366 14.2653 5.35287 14.0031 5.35515C13.7409 5.35742 13.4901 5.46259 13.3046 5.648C13.1192 5.83341 13.0141 6.08422 13.0118 6.34642C13.0095 6.60862 13.1103 6.86122 13.2925 7.04982L17.2425 10.9998L3.99946 10.9998C3.73425 10.9998 3.47989 11.1052 3.29236 11.2927C3.10482 11.4803 2.99946 11.7346 2.99946 11.9998C2.99946 12.265 3.10482 12.5194 3.29236 12.7069C3.47989 12.8945 3.73425 12.9998 3.99946 12.9998L17.2425 12.9998L13.2925 16.9498C13.1103 17.1384 13.0095 17.391 13.0118 17.6532C13.0141 17.9154 13.1192 18.1662 13.3046 18.3516C13.4901 18.537 13.7409 18.6422 14.0031 18.6445C14.2653 18.6468 14.5179 18.546 14.7065 18.3638L20.3635 12.7068Z\" fill=\"currentColor\" />\n    </svg>\n  );\n};\n\nexport const LeftOutlined = ({ size = 24 }: { size?: number }) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M14 7L9 12L14 17\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  );\n};\nexport const RightOutlined = ({ size = 24 }: { size?: number }) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M10 17L15 12L10 7\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  );\n};\n\nexport const SendIcon = ({ size = 24 }: { size?: number }) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 15 15\" fill=\"none\">\n      <path d=\"M0 15L1.56 8.055L10.185 7.515L1.56 6.93L0 0L15 7.5L0 15Z\" fill=\"currentColor\" />\n    </svg>\n  );\n};\n\nexport const VoiceIcon = ({ size = 24 }: { size?: number }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <path d=\"M0 4C0 1.79086 1.79086 0 4 0H20C22.2091 0 24 1.79086 24 4V20C24 22.2091 22.2091 24 20 24H4C1.79086 24 0 22.2091 0 20V4Z\" />\n      <path d=\"M13.5996 14.3449V9.65499C13.5996 7.03422 13.5996 5.72426 12.8596 5.3976C12.1187 5.07177 11.2475 5.99758 9.50496 7.8517C8.60251 8.81168 8.08807 9.02418 6.804 9.02418C5.68153 9.02418 5.11989 9.02418 4.71587 9.31084C3.87902 9.90582 4.00702 11.0683 4.00702 11.9999C4.00702 12.9316 3.87982 14.0941 4.71747 14.689C5.12069 14.9757 5.68233 14.9757 6.8048 14.9757C8.08887 14.9757 8.60331 15.1882 9.50576 16.1482C11.2483 18.0015 12.1195 18.9281 12.8604 18.6023C13.6004 18.2756 13.6004 16.9657 13.6004 14.344M15.9998 9.5C16.4998 10.1833 16.7998 11.0525 16.7998 11.9999C16.7998 12.9474 16.4998 13.8166 15.9998 14.4999M18.3999 7.83337C19.4 8.97168 20 10.4216 20 11.9999C20 13.5782 19.4 15.0282 18.3999 16.1665\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  );\n};\n\nexport const VoiceingIcon = ({ size = 24 }: { size?: number }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <path d=\"M12 4V20M8 9V15M20 10V14M4 10V14M16 7V17\" stroke=\"#4C72FF\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  );\n};\n\nexport const RetryIcon = ({ size = 24 }: { size?: number }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <path d=\"M0 4C0 1.79086 1.79086 0 4 0H20C22.2091 0 24 1.79086 24 4V20C24 22.2091 22.2091 24 20 24H4C1.79086 24 0 22.2091 0 20V4Z\" fill=\"white\" />\n      <g clip-path=\"url(#clip0_3718_62769)\">\n        <path d=\"M14.1126 4.6665L14.5113 5.41184C14.7806 5.91517 14.9153 6.16717 14.826 6.27517C14.7373 6.38317 14.444 6.29584 13.8566 6.12184C13.2543 5.94356 12.6294 5.85307 12.0013 5.85317C8.50331 5.85317 5.66797 8.60517 5.66797 11.9998C5.66691 13.082 5.95953 14.1442 6.51464 15.0732M9.89064 19.3332L9.49197 18.5878C9.22264 18.0838 9.08797 17.8318 9.17731 17.7245C9.26597 17.6165 9.55931 17.7032 10.1466 17.8778C10.7333 18.0518 11.3566 18.1458 12.002 18.1458C15.5 18.1458 18.3353 15.3938 18.3353 11.9992C18.3362 10.9172 18.0436 9.85527 17.4886 8.9265\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3718_62769\">\n          <rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(4 4)\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const DeleteIcon = ({ size = 20 }: { size?: number }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n    >\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.29183 3.58321C7.29183 3.55495 7.30346 3.51147 7.35734 3.46432C7.41246 3.41609 7.50317 3.37488 7.61921 3.37488H12.3811C12.4972 3.37488 12.5879 3.41609 12.643 3.46432C12.6969 3.51147 12.7085 3.55495 12.7085 3.58321V4.62488H7.29183V3.58321ZM6.04183 4.62488V3.58321C6.04183 2.70201 6.82905 2.12488 7.61921 2.12488H12.3811C13.1713 2.12488 13.9585 2.70201 13.9585 3.58321V4.62488H15.6274H16.6699C17.0151 4.62488 17.2949 4.9047 17.2949 5.24988C17.2949 5.59506 17.0151 5.87488 16.6699 5.87488H16.2064L15.4459 15.8191C15.3457 17.122 14.2592 18.1283 12.9525 18.1283H7.04765C5.7409 18.1283 4.65446 17.1222 4.55423 15.8194L3.7937 5.87488H3.33105C2.98588 5.87488 2.70605 5.59506 2.70605 5.24988C2.70605 4.9047 2.98588 4.62488 3.33105 4.62488H4.37272H6.04183ZM13.3335 5.87488H6.66683H5.04735L5.80055 15.7235C5.85081 16.375 6.39416 16.8783 7.04765 16.8783H12.9525C13.606 16.8783 14.1493 16.3753 14.1996 15.7238L14.9528 5.87488H13.3335ZM11.6416 8.43754C11.9868 8.43754 12.2666 8.71736 12.2666 9.06254V13.752C12.2666 14.0972 11.9868 14.377 11.6416 14.377C11.2964 14.377 11.0166 14.0972 11.0166 13.752V9.06254C11.0166 8.71736 11.2964 8.43754 11.6416 8.43754ZM8.98372 9.06254C8.98372 8.71736 8.7039 8.43754 8.35872 8.43754C8.01355 8.43754 7.73372 8.71736 7.73372 9.06254V13.752C7.73372 14.0972 8.01355 14.377 8.35872 14.377C8.7039 14.377 8.98372 14.0972 8.98372 13.752V9.06254Z\" fill=\"#FF543D\" />\n    </svg>\n  );\n};\n\nexport const SettingIcon = ({ size = 20 }: { size?: number }) => {\n  return (\n\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M22 6.5H16\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M6 6.5H2\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10 10C8.067 10 6.5 8.433 6.5 6.5C6.5 4.567 8.067 3 10 3C11.933 3 13.5 4.567 13.5 6.5C13.5 8.433 11.933 10 10 10Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M22 17.5H18\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M8 17.5H2\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14 21C12.067 21 10.5 19.433 10.5 17.5C10.5 15.567 12.067 14 14 14C15.933 14 17.5 15.567 17.5 17.5C17.5 19.433 15.933 21 14 21Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n\n  );\n};\nexport const LanguageIcon = ({ size = 20 }: { size?: number }) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M2 12C2 17.523 6.477 22 12 22C17.523 22 22 17.523 22 12C22 6.477 17.523 2 12 2C6.477 2 2 6.477 2 12Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M12.9999 2.04999C12.9999 2.04999 15.9999 5.99999 15.9999 12C15.9999 18 12.9999 21.95 12.9999 21.95M10.9999 21.95C10.9999 21.95 7.99988 18 7.99988 12C7.99988 5.99999 10.9999 2.04999 10.9999 2.04999M2.62988 15.5H21.3699M2.62988 8.49999H21.3699\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  );\n};\n\nexport const LoadingIcon = ({ size = 20 }: { size?: number }) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#3498db\">\n      <circle cx=\"10\" cy=\"20\" r=\"4\">\n        <animate attributeName=\"opacity\" from=\"0.3\" to=\"1\" dur=\"1.2s\" begin=\"0s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"r\" from=\"3\" to=\"4\" dur=\"1.2s\" begin=\"0s\" repeatCount=\"indefinite\" />\n      </circle>\n      <circle cx=\"20\" cy=\"20\" r=\"4\">\n        <animate attributeName=\"opacity\" from=\"0.3\" to=\"1\" dur=\"1.2s\" begin=\"0.2s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"r\" from=\"3\" to=\"4\" dur=\"1.2s\" begin=\"0.2s\" repeatCount=\"indefinite\" />\n      </circle>\n      <circle cx=\"30\" cy=\"20\" r=\"4\">\n        <animate attributeName=\"opacity\" from=\"0.3\" to=\"1\" dur=\"1.2s\" begin=\"0.4s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"r\" from=\"3\" to=\"4\" dur=\"1.2s\" begin=\"0.4s\" repeatCount=\"indefinite\" />\n      </circle>\n    </svg>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import React from '@teact';\nimport type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\nimport type { GrammarlyCheckItem } from '../../../utils/grammarly';\n\ntype Props = {\n  text: string;\n  errors: GrammarlyCheckItem[];\n};\n\nconst HighlightedText: React.FC<Props> = ({ text, errors }) => {\n  if (!errors.length) return <p><span>{text}</span></p>;\n\n  // 将原文拆分成高亮块和普通块\n  const fragments: React.ReactNode[] = [];\n  let lastIndex = 0;\n\n  errors.sort((a, b) => a.offset - b.offset).forEach((error, index) => {\n    const {\n      offset, length, suggestions,\n    } = error;\n\n    // 添加错误前的正常文本\n    if (offset > lastIndex) {\n      fragments.push(\n        <span key={`normal-${index}`} className=\"text-[var(--color-text)]\">\n          {text.slice(lastIndex, offset)}\n        </span>,\n      );\n    }\n\n    // 添加错误词 + 建议\n    const original = text.slice(offset, offset + length);\n    const suggestion = suggestions[0] || '';\n\n    fragments.push(\n      <span\n        key={`error-${index}`}\n        className=\"bg-black/15 line-through mr-[4px] text-[var(--color-text)]\"\n      >\n        {original}\n      </span>,\n    );\n\n    fragments.push(\n      <span\n        key={`suggestion-${index}`}\n        className=\"bg-[#8C42F033] mr-[4px] text-[#8C42F0]\"\n      >\n        {suggestion}\n      </span>,\n    );\n\n    lastIndex = offset + length;\n  });\n\n  // 添加最后剩余的文本\n  if (lastIndex < text.length) {\n    fragments.push(<span key=\"end\" className=\"text-[var(--color-text)]\">{text.slice(lastIndex)}</span>);\n  }\n\n  return <p>{fragments}</p>;\n};\n\nexport default HighlightedText;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React from '@teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\nimport { useCallback, useEffect, useRef } from 'react';\nimport useSWR from 'swr';\n\ntype ScrollFlag = ScrollBehavior | false;\n\nexport function useScrollToBottom() {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const endRef = useRef<HTMLDivElement>(null);\n\n  const { data: isScrollLock = false, mutate: setIsScrollLock } = useSWR(\n    'messages:is-scroll-lock',\n    null,\n    { fallbackData: false },\n  );\n\n  const { data: isAtBottom = false, mutate: setIsAtBottom } = useSWR(\n    'messages:is-at-bottom',\n    null,\n    { fallbackData: false },\n  );\n\n  const { data: scrollBehavior = false, mutate: setScrollBehavior } = useSWR<ScrollFlag>('messages:should-scroll', null, { fallbackData: false });\n\n  useEffect(() => {\n    if (scrollBehavior && !isScrollLock) {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          endRef.current?.scrollIntoView({ behavior: scrollBehavior });\n          setScrollBehavior(false);\n        });\n      });\n    }\n  }, [setScrollBehavior, scrollBehavior, isScrollLock]);\n\n  const scrollToBottom = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (scrollBehavior: ScrollBehavior = 'smooth') => {\n      setIsScrollLock(false);\n      setScrollBehavior(scrollBehavior);\n    },\n    [setIsScrollLock, setScrollBehavior],\n  );\n\n  const scrollLocked = () => {\n    setIsScrollLock(true);\n  };\n\n  const scrollUnLocked = () => {\n    setIsScrollLock(false);\n  };\n\n  function onViewportEnter() {\n    setIsAtBottom(true);\n  }\n\n  function onViewportLeave() {\n    setIsAtBottom(false);\n  }\n\n  return {\n    containerRef,\n    endRef,\n    isAtBottom,\n    isScrollLock,\n    scrollToBottom,\n    onViewportEnter,\n    onViewportLeave,\n    scrollLocked,\n    scrollUnLocked,\n  };\n}\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import React from '@teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React from '@teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React from 'react';\nimport { getGlobal } from '../../../global';\n\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { isUserId } from '../../../util/entities/ids';\nimport { cn } from '../utils/util';\n\nimport Avatar from './Avatar';\n\nconst ChatAvatar = ({\n  chatId, classNames, size, style,\n}: { chatId: string; classNames?: string; size: number; style?: Record<string, string> }) => {\n  const global = getGlobal();\n  let peer;\n  if (isUserId(chatId)) {\n    peer = selectUser(global, chatId);\n  } else {\n    peer = selectChat(global, chatId);\n  }\n\n  return (\n    <Avatar\n      style={style}\n      key={chatId}\n      className={cn(classNames, 'overlay-avatar inline-block cursor-pointer')}\n      size={size}\n      peer={peer}\n    />\n  );\n};\n\nexport default ChatAvatar;\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React from '@teact';\nimport { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","// useDrawerStore.ts\nimport { create } from 'zustand';\n\nexport enum DrawerKey {\n  PersonalizeSettings = 'PersonalizeSettings',\n  OriginalMessages = 'OriginalMessages',\n  CustomizationPrompt = 'CustomizationPrompt',\n  ChatPicker = 'ChatPicker',\n  AddTopicPanel = 'AddTopicPanel',\n}\n\ntype DrawerState = {\n  isOpen: boolean;\n  drawerKey?: DrawerKey;\n  drawerParams?: any;\n  openDrawer: (drawerKey?: DrawerKey, drawerParams?: any) => void;\n  closeDrawer: () => void;\n};\n\nexport const useDrawerStore = create<DrawerState>((set) => ({\n  isOpen: false,\n  drawerKey: undefined,\n  drawerParams: undefined,\n\n  openDrawer: (drawerKey, drawerParams) => set(() => ({\n    isOpen: true,\n    drawerKey,\n    drawerParams,\n  })),\n\n  closeDrawer: () => set(() => ({\n    isOpen: false,\n    drawerKey: undefined,\n    drawerParams: undefined,\n  })),\n}));\n","import React from '@teact';\nimport type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import React from '@teact';\nimport type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import React from '@teact';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState.ts';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { resolveTransitionName } from '../../util/resolveTransitionName.ts';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    animationLevel: AnimationLevel;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={oldLang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition\n          activeKey={currentPhotoIndex}\n          name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, oldLang.isRtl)}\n        >\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={oldLang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={oldLang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={oldLang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED, TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(oldLang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","\n/* eslint-disable no-null/no-null */\nimport type { ReactNode } from 'react';\nimport { Component } from 'react';\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Error caught by ErrorBoundary:', error, errorInfo);\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return null; // 直接跳过这个组件\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","React","className","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","Button","disabled","onClick","children","content","cn","ConnectorClass","constructor","onUpdate","channel","_defineProperty","Map","throttleWithTickEnd","this","payloads","pendingPayloads","transferables","pendingTransferables","postMessage","destroy","init","args","postMessageOnTickEnd","type","request","messageData","requestStates","requestStatesByCallback","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","removeEventListener","suggestions","props","handleSearch","src","SerenaIcon","item","GlobalIntroduceMessage","getGlobal","currentUserId","currentUser","scrollToBottom","useScrollToBottom","firstName","lastName","filter","join","buildClassName","sendSmmaryIntroduceMessage","createIntroduceSummaryMessage","ChataiStores","summary","storeMessage","eventEmitter","emit","Actions","AddSummaryMessage","sendActionsIntroduceMessage","createIntroduceActionsMessage","sendTranslationIntroduceMessage","createIntroduceTranslationMessage","sendMeetingIntroduceMessage","createIntroduceMeetingMessage","activeId","listeners","useSpeechPlayer","isSpeaking","setIsSpeaking","useState","localUtteranceRef","useRef","playing","speak","text","options","speechSynthesis","speaking","pending","cancel","utterance","SpeechSynthesisUtterance","onend","onerror","fn","stop","MessageActionsItems","canCopy","canVoice","canShare","canDelete","onClickShare","onDelete","showNotification","containerRef","getReadableText","parentContainer","closest","readableElements","querySelectorAll","texts","currentLine","element","textContent","hasAttribute","ref","handleCopy","textToCopy","navigator","clipboard","writeText","then","CopyIcon","size","handleVoicePlay","voiceText","VoiceingIcon","VoiceIcon","MessageShareIcon","DeleteIcon","formatTimestampRange","start","end","normalizeTimestamp","ts","toString","startDate","Date","endDate","now","isToday","date","isSameDay","d2","d1","getFullYear","getMonth","getDate","formatTime","pad","n","String","padStart","getHours","getMinutes","formatDate","ChatAvatar","classNames","style","tooltip","peer","isUserId","selectChat","Avatar","SummaryTopicItem","topicItem","openDrawer","useDrawerStore","ErrorBoundary","summaryItem","relevantMessageIds","role","showMessageDetail","DrawerKey","OriginalMessages","relevantMessages","messageIds","SummaryPenddingItem","pendingItem","CheckIcon","SummaryGarbageItem","garBageItem","chatRoomName","level","SummaryInfoContent","summaryInfo","SerenaLogoPath","summaryEndTime","formatTimestamp","CalendarIcon","summaryStartTime","MessageIcon","summaryMessageCount","summaryChatIds","UserIcon","slice","index","zIndex","IgnoreSummaryButton","handleIgnore","MainSummaryContent","summaryTopic","pendingMatters","deleteMessage","ignored_summary_chat_ids","telegptSettings","ignoredChatIds","getIdsFromEntityTypes","ignoredIds","setIgnoredIds","newSelected","entityTypes","buildEntityTypeFromIds","setSettingOption","res","WriteIcon","Popover","placement","mainTopics","customTopics","customTopic","topicName","summaryItems","ActionsIcon","SummaryContent","garbageMessage","setSummaryInfo","setPendingMatters","setGarbageMessage","setSummaryTopic","parseMessage","messageContent","messageObj","JSON","parse","mainTopic","mergeSummaryTopics","mergedMap","Array","from","values","mergeTopics","console","allTimezones","GMT","FormLabel","setTitle","icon","setIcon","lable","label","GoogleMeetIcon","ErrorTip","EmailItem","email","DefaultAvatar","CloseIcon","GoogleEventCreateMessage","disabledDate","dayjs","startOf","timeZoneOptions","parseTimezone","timezones","useMemo","zone","_a","_b","_c","_d","spacetime","goto","isDstString","isDST","tz","timezone","tzStrings","soft","abbr","altName","min","offset","hr","Math","floor","abs","prefix","value","abbrev","sort","a","b","indexOf","currentTime","err","score","dst","hasDst","findFuzzyTz","isArray","useTimezoneSelect","RangePicker","DatePicker","setEmail","setStartDate","setEndDate","emails","setEmails","emailError","setEmailError","dateError","setDateError","titleError","setTitleError","isSubmitting","setIsSubmitting","selectedTimezone","setSelectedTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","themeKey","selectTheme","log","validateEmail","test","handleTitleChange","handleTimeZoomChange","handleTimeChange","dates","dateStrings","handleEmailChange","handleEmailComplete","emailStr","prev","handleEmailEnter","currentTarget","handleDeleteEmail","handleSubmit","auth","getAuthState","attendees","createGoogleMeet","googleToken","accessToken","CreateCalendarSuccess","ConfigProvider","theme","algorithm","darkAlgorithm","defaultAlgorithm","Input","onChange","presets","endOf","showTime","format","Select","placeholder","onBlur","onPressEnter","htmlType","loading","ShareCard","capturing","captureCallback","domRef","setTimeout","toBlob","width","pixelRatio","quality","blob","file","File","globalThis","p__handleFileSelect","ShareHeaderBg","SerenaPath","GoogleEventDetailMessage","setMessageContent","setCapturing","parsedMessage","contentJSX","formatMeetingTimeRange","dateTime","attendee","hangoutLink","handleAuth","IS_ELECTRON","window","electron","googleLogin","authState","isLoggedIn","access_token","idToken","id_token","grantedScopes","scope","expiresAt","expiry_date","setAuthState","GoogleAuthSuccess","loginWithGoogle","showMessage","info","GoogleIcon","GoogleMeetInformationSuggestMessage","emailConfirmed","calendlyConfirmed","suggestType","mergeEmailConfirmed","setMergeEmailConfirmed","mergeCalendlyConfirmed","setMergeCalendlyConfirmed","calendlyUrls","userInformationCollection","informations","renderName","getUserFullName","url","sendMessage","messageList","threadId","stringify","parseMessage2StoreMessage","handleCalendlyUrlClick","handleEmailClick","GoogleMeetMentionMessage","isConfirmed","mergeConfirmed","setMergeConfirmed","handleConfirm","messageString","chatLastMessageId","selectChatLastMessageId","i","messageItem","selectChatMessage","hasMessageText","isOutgoing","getMessageContent","ScheduleMeeting","create","cx","handleClick","isTokenValid","createAuthConfirmModal","onOk","GoogleMeetTimeConfirmMessage","handleCreateGoogleMeet","token","createMeetResponse","eventMessage","time","scheduleMeeting","hasConfirmed","handleTimeSelect","href","rel","GroupSearchMessage","chatIds","setChatIds","ids","splice","membersCount","getChatTitle","openChat","renderChatAvatar","IntroduceActionsMessage","ActionsBg","listStyle","IntroduceMeetingMessage","ScheduleMeetBg","IntroduceSummaryMessage","SummaryBg","IntroduceTranslationMessage","ActionsItems","ActionInfoContent","summaryTime","messageCount","userIds","actionItemClassName","RoomAIDescriptionMessage","handleNewFeature","RoomAIActions","action","handleSummarize","handleScheduleMeeting","handleActionItems","isAuto","isOwn","isOwnMessage","waveformCanvasRef","voice","useWaveformCanvas","imgBlobUrl","photo","useMedia","getPhotoMediaHash","ApiMediaFormat","BlobUrl","fullMediaData","blobUrl","forcedWidth","thumbnail","withBlurredBackground","getType","webPage","audio","video","isUrl","checkIsUrl","isImage","checkIsImage","mimeType","onPreviewClick","openMediaViewer","origin","MediaViewerOrigin","Inline","withDynamicLoading","AIRoomBubble","fileName","draggable","dir","renderMessageContent","ThinkingMessage","NoSummaryContent","highlights","contentItem","contentIndex","renderSummary","AppendixIcon","_extends","height","x","y","filterUnits","dy","in","result","stdDeviation","fill","fillRule","d","replys","setDisabled","errorMsg","reply","saveReplyDraft","clearDraft","currentChat","draft","replyInfo","replyToMsgId","replyToPeerId","isLocalOnly","timestamp","getTime","onReplyClick","openUserPortrait","handlePortraitClick","selectCurrentMessageList","setMainTopic","urgentMessage","setUrgentMessage","createdAt","DangerIcon","UserSearchMessage","senderIds","setSenderIds","components","node","inline","pre","ol","li","ul","strong","h1","h2","h3","h4","h5","h6","remarkPlugins","remarkGfm","NonMemoizedMarkdown","ReactMarkdown","Markdown","prevProps","nextProps","MessageActions","copy","MessageReasoning","isLoading","reasoning","isExpanded","setIsExpanded","LoaderIcon","ChevronDownIcon","AnimatePresence","initial","motion","div","animate","exit","variants","opacity","marginTop","marginBottom","expanded","transition","duration","ease","PreviewAttachment","attachment","isUploading","contentType","startsWith","AIMessageType","DefaultMessage","experimental_attachments","PurePreviewMessage","messageType","matched","annotations","Default","renderMessageComponent","GlobalSummary","GlobalSummaryMessage","UrgentCheck","UrgentCheckMessage","GroupSearch","UserSearch","GoogleAuth","GoogleLoginAuthMessage","GoogleEventInsert","GoogleEventDetail","GoogleMeetTimeConfirm","GoogleMeetMention","GoogleMeetInformationSuggest","RoomSummary","RoomSummaryMessage","RoomActions","RoomActionMessage","MeetingIntroduce","SummaryIntroduce","TranslationIntroduce","ActionsIntroduce","GlobalIntroduce","RoomAIDescription","AISearchSugesstion","AISearchSugesstionsMessage","AIReplyMention","ReplyMentionMessage","AIMediaSummary","RoomAIMediaMessage","UserPortrait","RoomAIUserPortraitMessage","PreviewMessage","equal","toolInvocations","delay","LoadingIcon","PureMessages","messages","hasMore","loadMore","upLoadRef","anchorRef","messagesContainerRef","endRef","messagesEndRef","isAtBottom","onViewportEnter","onViewportLeave","hasScrollToBottom","hasSentMessage","setHasSentMessage","container","maxAttempts","interval","lastScrollHeight","scrollHeight","attempts","tick","requestAnimationFrame","scrollUntilStable","useMessages","RoomStorage","updateRoomAIData","GLOBAL_SUMMARY_CHATID","onScroll","handleScroll","scrollTop","anchor","firstChild","scrollIntoView","behavior","block","some","isAuxiliary","Messages","CustomSend","useModuleLoader","Bundles","Extra","pdfjsLib","workerSrc","mammoth","require","async","replyToMention","isMentioned","newMessage","uuidv4","sendMessageToAIRoom","mentionReply","language","getAutoTransLang","sendErrorMessage","photoSummary","mediaHash","getMediaHash","handleImageToSummaryText","webPageSummary","webPageAISummary","documentSummary","handleAudioToSummaryText","filename","mediaLoader","fetch","arrayBuffer","TextDecoder","decode","extractRawText","pdf","pdfText","numPages","page","getPage","getTextContent","items","str","documentAISummary","voiceToAudioSummary","maxBase64Length","audioSummary","videoSummary","AddRoomAIMessage","formData","FormData","append","summaryResponse","audioAISummary","reader","FileReader","onloadend","base64Data","imageAISummary","image","readAsDataURL","canSummarize","hasText","autoTranslateLanguage","settings","byKey","DisplayNames","of","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","useLang","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","usernameTag","usersById","users","byId","memberIds","reduce","acc","member","filteredIds","filterPeersByQuery","unique","query","pickTruthy","insertMention","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","isSelected","offsetTop","chatClassName","unreadCount","setUnreadCount","updateUnreadCount","param","roomAIData","localStorage","getItem","on","UpdateRoomAIUnreadCount","off","useGlobalSummaryBadge","ListItem","withPortalForMenu","ShowTransition","isCustom","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","chatsById","chats","arr","isLast","styles","unread","contextActions","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","compact","handleDragEnter","preventDefault","root","minimized","buttonClassName","button","Badge","formatIntegerCompact","avatarWrapper","chatsPreview","folderId","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","isMobile","useAppLayout","handleEditFolder","screen","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","sticker","ripple","fluid","pill","isRtl","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","handleReject","isText","color","RESERVED_HOTKEYS","ChatList","isForumPanelOpen","canDisplayArchive","onSettingsScreenSelect","onLeftColumnContentChange","isAccountFrozen","isMainList","openNextChat","closeForumPanel","toggleStoryRibbon","openFrozenAccountModal","openLeftColumnContent","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","isPresetFolder","isUnreadFolder","isAIFolder","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","PRESET_FOLDER_ID","UNREAD_FOLDER_ID","AI_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","getServerTime","FRESH_AUTH_PERIOD","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","digit","isArchiveInList","position","Number","contentKey","LeftColumnContent","Archived","shouldReplaceHistory","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","getBoundingClientRect","clientX","left","clientY","top","renderedOverflowTrigger","onOverscroll","onReset","isDisabled","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","IS_SAFARI","stopScrollInertia","disableOverscrollTrigger","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","offsetHeight","deltaY","requestMutation","passive","IS_IOS","useTopOverscroll","isShown","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","isPinned","ChatSerena","Chat","teactOrderKey","getOrderKey","isSavedDialog","animationType","orderDiff","observeIntersection","renderChats","Loading","OFFSET_X","REM","useOverlayPosition","overlayRef","isMirrored","isForMessageEffect","updatePosition","anchorRect","elementRect","windowWidth","innerWidth","anchorCenterY","anchorBottomY","bottom","right","messagesContainer","AITextarea","displayName","UserPortraitAvatar","showName","isUser","focusMessage","msgIds","minId","openMessageDetail","SummaryActivity","timeRange","chatGroups","chatGroup","StoryActivity","MediaStory","story","isArchive","isAiSummary","isSummary","isStory","PortraitTagColors","userPortraitUserId","selectTabState","userPortraitInfo","chatTags","portraitMessage","setLoading","setMessages","userInfo","setUserInfo","newUserInfo","setNewUserInfo","setPortraitMessage","setChatTags","searchUserMessages","getMessageBySendId","senderId","o","getActivityMessage","portraitInfo","userPortrait","getUserPortrait","userPortraitMessage","searchMessageBySenderId","handleSummaryMessages","maxId","max","obj","lastMsgId","chatCountByChatId","sortedChatIds","chatAIGenerate","onResponse","replaceToJSON","userObj","langs","tags","chatCount","addUserPortrait","groupMessages","groupMessagesByHalfHour","msg","resultArr","sourceObj","cur","addUserPortraitMessage","onFinish","getChatTags","newChatTags","aIChatFolders","getAIChatFolder","chatI","usePortrait","scrollTo","roomAistyles","rightPanelBg","noFastList","fallbackPhotoAvatar","FullNameTitle","canCopyTitle","usernames","username","tag","uniq","Spinner","unix","ActivityMessage","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","appConfig","verifyAgeMin","VERIFY_AGE_MIN_DEFAULT","SensitiveContentConfirmModal","shouldAlwaysShow","onAlwaysShowChanged","years","Checkbox","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerHeight","seed","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","scale","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","setDate","shiftTimeRanges","ranges","shiftedRanges","range","startMinute","endMinute","last","DAYS","_","BusinessHours","businessHours","transitionRef","expand","collapse","isMyTime","showInMyTime","showInLocalTime","useInterval","timezoneSignal","useSelectorSignal","timezoneMinuteDifference","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","stopPropagation","slide","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","requestMeasure","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onMouseDown","IS_TOUCH_ENV","onStart","formatWeekday","segment","DotIcon","PortraitEntry","oldLang","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","selectIsPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","age","today","year","setFullYear","setMonth","month","formatDateToString","getAge","numbersForAge","numbers","stickers","endsWith","byEmoji","buildCollectionByKey","effectSticker","randomEffect","random","getStickerMediaHash","effectHash","useTimeout","column","valueKey","canGiftPremium","isPremium","isSelf","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isForum","isMuted","getIsChatMuted","selectNotifyDefaults","selectNotifyException","topicId","chatFullInfo","selectChatFullInfo","userFullInfo","selectUserFullInfo","botVerification","chatInviteLink","inviteLink","description","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","phoneNumber","chatUsernames","peerId","businessLocation","businessWorkHours","personalChannelMessageId","useEffectWithPrevDeps","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","MAIN_THREAD_ID","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","link","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleNotificationChange","manageEmojiStatusChange","botId","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","entity","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","formatUsername","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","SafeLink","withNodes","selectIsChatRestricted","ChatAnimationTypes","None","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","rightElement","CustomEmoji","documentId","iconId","usernameList","otherUsernames","usernameLinks","s","idx","stopEvent","forceShowSelf","isSynced","userStatus","selectUserStatus","isSavedMessages","self","areMessagesLoaded","selectChatMessages","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","adminMember","storyViewerOrigin","onEmojiStatusClick","iconElement","loadFullUser","loadMoreProfilePhotos","hasAvatarMediaViewer","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","storyViewerMode","withEmojiStatus","DotAnimation","subtitleKey","TypingStatus","isSystemBot","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","loadPeerStoriesByIds","loadStoryThrottled","throttled","throttle","storyIds","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","peers","selectPeer","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","isRestricted","add","usePrevDuringAnimation","timeoutRef","isCurrentPresent","isPrevPresent","clearTimeout","ChatBadge","topic","topics","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","hasMiniApp","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","every","hasUnreadMark","isSignal","isUnread","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","Video","isInWebPage","noAvatars","canAutoLoad","canAutoPlay","uploadProgress","dimensions","asForwarded","isDownloading","isProtected","lastPlaybackTimestamp","clickArg","isMediaNsfw","observeIntersectionForLoading","observeIntersectionForPlaying","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","mediaType","localBlobUrl","shouldShowSpoiler","isSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","useIsIntersecting","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","getVideoMediaHash","isFullMediaPreloaded","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRender","shouldRenderSpinner","useShowTransition","noMountTransition","withShouldRender","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","media","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","canPlay","defaultMuted","muted","loop","playsInline","disablePictureInPicture","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","isGif","formatMediaDuration","round","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","MEMO_EMPTY_ARRAY","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","concat","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matchedKeywords","flat","matchedNames","useEmojiTooltip","EDITABLE_INPUT_ID","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","exec","default","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","emojiHtml","messageInput","EDITABLE_INPUT_CSS_SELECTOR","emojiCode","newShouldAutoInsert","isEmojiTooltipOpen","closeEmojiTooltip","CustomEmojiTooltip","SymbolMenu","SymbolMenuButton","canSendGifs","canSendStickers","isMessageComposer","isReady","isSymbolMenuOpen","idPrefix","isAttachmentModal","canSendPlainText","isSymbolMenuForced","forceDarkTheme","inputCssSelector","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","contextMenuAnchor","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","activeElement","blur","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","ariaLabel","ResponsiveHoverButton","onActivate","onLoad","onSearchOpen","ElectronEvent","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","isTouched","omit","isChatList","useFoldersReducer","useReducer","ChatCallStatus","lastMessageId","lastMessage","selectChatLastMessage","forwardInfo","savedDialogSender","fromId","messageSender","selectSender","lastMessageSender","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","storyData","lastMessageStory","selectPeerStory","selectIsCurrentUserFrozen","monoforumChannel","selectMonoforumChannel","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topicsById","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","noForumTopicPanel","forceOnHeavyAnimation","force","handleDelete","handleMute","handleChatFolderChange","handleReport","useChatContextActions","isIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","StarIcon","isCallActive","isCallNotEmpty","monoforumBadgeClassName","LastMessageMeta","outgoingStatus","draftDate","DeleteChatModal","onCloseAnimationEnd","MuteChatModal","ChatFolderModal","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","classList","togglerStyles","ghostLast","ghostAnimateName","applyStyles","transform","ghostRevealName","cb","createDelayedCallback","contains","remove","ANIMATION_END_DELAY","animateClosing","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","canvas","getContext","drawImage","el","getAttribute","ms","timeout","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","calculateMediaDimensions","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","forcePlaceCaretAtEnd","selection","getSelection","createRange","lastChild","nodeValue","selectNodeContents","removeAllRanges","addRange","focus","MENU_CLOSE_TIMEOUT","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","selectWebPageFromMessage","WebLink","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","webpageType","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","Link","formatPastTimeShort","cache","WeakMap","cached","areSortedArraysEqual","lastArgs","lastResult","TopicIcon","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","onEnd","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","useUnmountCleanup","body","ELECTRON_WINDOW_DRAG_EVENT_START","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","Tab","badgeCount","isBadgeActive","previousActiveTab","tabRef","useLayoutEffect","tabEl","prevTabEl","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","requestForcedReflow","forceReflow","handleMouseDown","useFastClick","MouseButton","Main","SCROLL_DURATION","IS_ANDROID","TabList","tabs","activeTab","onSwitchTab","tabClassName","inversion","useHorizontalScroll","scrollWidth","offsetWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","animateHorizontalScroll","tab","extractorEl","createElement","insertHtmlInSelection","getRangeAt","rangeCount","deleteContents","fragment","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","cloneContents","caretRange","setEnd","endContainer","endOffset","nodeType","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","stories","storyViewer","isRibbonShown","isArchivedRibbonShown","selectPerformanceSettingsValue","peerStories","canShow","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","useStoryPreloader","beginHeavyAnimation","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","URL","useGetSelectionRange","inputSelector","getRange","setRange","useSignal","onSelectionChange","Element","DropTarget","isQuick","isGeneric","onFileSelect","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","rx","DropAreaState","DropArea","withQuick","editingMessage","onHide","updateAttachmentSettings","hideTimeoutRef","prevWithQuick","transitionClassNames","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","pluralValue","newAttachment","buildAttachment","canReplaceMessageMedia","shouldCompress","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","withSticker","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","nonInteractive","noLoop","Document","smaller","autoLoadFileMaxSizeMb","withDate","datetime","sender","isSelectable","shouldWarnAboutSvg","onSelect","onMediaClick","onDateClick","downloadMedia","setSharedSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","extension","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","getDocumentMediaHash","isLoaded","hasPreview","getDocumentHasPreview","previewData","innerMediaType","handleDownload","originMessage","SVG_EXTENSIONS","handleSvgConfirm","handleDateClick","thumbnailDataUri","actionIcon","isDocumentVideo","injectComponent","Component","domRoot","unmount","_reactRoot","ReactDOM","render","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","positionX","MenuItem","destructive","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionUserPortrait","actionOpenInNewTab","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isChatGroup","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","prevHash","currVal","charCodeAt","PaymentMessageConfirmDialog","userName","messagePriceInStars","messagesCount","setShouldPaidMessageAutoApprove","confirmPaymentMessage","amount","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isChannel","isSuperGroup","isChatSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","isPrivate","doNotTranslate","selectIsInSelectMode","noMenu","bot","selectBot","fullInfo","isChatWithSelf","selectIsChatWithSelf","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","isAnonymousForwardsChat","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","channelMonoforumId","linkedMonoforumId","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","unblockUser","setViewForumAsMessages","menuButtonRef","isMenuOpen","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleUnblock","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","currentHeight","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","dataset","isPanelOpen","path","EmojiTooltip","DEFAULT_HANDLERS","play","pause","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","TOPIC_ICON_SIZE","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","Photo","isInSelectMode","shouldAffectAppendix","prevMediaData","usePrevious","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","useLayoutEffectWithPrevDeps","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","removeAttribute","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","setAttribute","dimensionsStyle","fileSelector","openSystemFilesDialog","accept","noMultiple","onchange","click","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","fullClassName","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","openThread","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","useThumbnail","mediaThumbnail","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","isLocal","renderTextWithEntities","entities","asPreview","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","getMessageVideo","Opacity","Move","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","fastSeek","setVolume","volume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","direction","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","menuItemClass","hasTextContent","canAISummarize","isScheduled","canReplyGlobally","selectAllowedMessageActionsSlow","canSendText","translationRequestLanguage","selectRequestedMessageTranslationLanguage","canScheduleMeeting","canSmartReply","selectMessageTranslations","selectCanTranslateMessage","MessageGptMenu","canSerenaAI","isSchedulingMeeting","setIsSchedulingMeeting","startMeeting","onCancel","handleSmartReply","updateDraftReplyInfo","quoteText","quoteOffset","similarResult","knowledgeEmbeddingStore","similaritySearch","similarItems","answer","openChatAIWithInfo","handleTranslate","requestMessageTranslation","AITranslateIcon","MeetingIcon","SummarizeIcon","AIReplyIcon","getSingularPaidMedia","extendedMedia","singularMedia","accumulate","initValue","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","paidMedia","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","row","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","w0","w2","w1","layoutFourTopAndOther","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","onContextMenu","handleBeforeContextMenu","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","startedAt","captureEvents","selectorToPreventScroll","excludedClosestSelector","onSwipe","SwipeDirection","Left","onRelease","preventMessageInputBlur","clearInterval","windowSize","getIsKeyboardVisible","handleTap","handleContextMenu","handleDoubleClick","handleContentDoubleClick","handleSendQuickReaction","handleMouseLeave","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","EmbeddedStory","noUserColors","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","dataUri","pictogramUrl","handleFastClick","PeerColorWrapper","peerColor","shouldReset","srcUrl","getPictogramDimensions","renderPictogram","TopicChip","getTopicColorCssVariable","blankSrc","isClosed","withSelectControl","WrappedComponent","ownProps","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","getMessagePhoto","fileUpload","getMessageKey","selectCanAutoLoadMedia","selectCanAutoPlayMedia","getMessageHtmlId","getIsDownloading","SIZE","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","emoticon","customEmojiId","withEffects","effect","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","selectCanPlayAnimatedEmojis","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","noLoad","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","lastReadInboxMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","Contact","openAddContactDialog","openChatWithInfo","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsed","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","Game","canAutoLoadMedia","clickBotInlineButton","game","photoHash","getGamePreviewPhotoHash","videoHash","getGamePreviewVideoHash","photoBlobUrl","videoBlobUrl","handleGameClick","inlineButtons","autoPlay","giveaway","channelIds","selectForwardedSender","giftSticker","selectGiftStickerForDuration","months","canPlayAnimatedEmojis","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","stars","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","chatTitle","isApiPeerChat","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","buttonTexts","renderKeyboardButtonText","j","RE_TME_LINK","buttonType","renderIcon","Invoice","invoice","getMessageInvoice","currency","isTest","photoUrl","getWebDocumentHash","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","cy","r","Location","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","period","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","pinClassName","heading","venueType","iconSrc","mapPin","renderPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","effectEmoji","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","isActivated","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","number","forwardsCount","repliesTitle","isImported","formatStarsAsIcon","asFont","containerClassName","onMouseEnter","isVideoProcessingPending","MessagePhoneCall","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","buttonText","starsAmount","replaceWithTeact","STARS_ICON_PLACEHOLDER","getPercentage","total","toFixed","PollOption","voteResults","totalVoters","maxVotersCount","correctResults","shouldAnimate","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","Poll","poll","onSendVote","loadMessage","openPollResults","results","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","localId","solution","solutionEntities","question","getPollTypeString","AvatarList","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","isQuiz","getReadableVotersCount","Sticker","shouldPlayEffect","withEffect","onStopEffect","openStickerSet","effectRef","stickerSetInfo","hasEffect","isPreloadedGlobally","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","actionText","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","isLowPriority","onEnded","openStoryViewer","imageHash","mediaUrl","useCurrentOrPrev","isSinglePeer","isSingleStory","MediaAreaOverlay","connectionState","BaseStory","selectPeerStories","targetUser","isDeleted","thumbUrl","isCurrentUserPremium","selectIsCurrentUserPremium","TodoList","todoList","toggleTodoCompleted","todo","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","c","itemId","handleTaskLabelClick","initialSection","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","WebPageUniqueGift","gift","stickerRef","backdrop","model","pattern","getGiftAttributes","isHover","markHover","unmarkHover","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","WebPage","messageWebPage","backgroundEmojiId","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","shouldUseTextColor","customColor","useDynamicColorListener","linkTimestamp","parsedLink","tryParseDeepLink","handleOpenTelegramLink","mediaSize","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getPhotoFullDimensions","hasLargeMedia","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","isSafe","onPlay","caption","isRectangular","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","forwardMessages","activeReactions","loadingThread","withSenderName","withAvatar","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","effectId","selectFullWebPageFromMessage","selectSharedSettings","isChatWithUser","isSystemBotChat","isAnonymousForwards","isGroup","webPageStoryData","webPageStory","isForwarding","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","isReplyToTopicStart","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","singleEmoji","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","selectMessageDownloadableMedia","commentsMessage","isInDocumentGroup","groupedId","isInAlbum","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","chatTranslations","selectChatTranslations","requestedTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","viaBusinessBot","availableEffectById","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","hasTranslation","minFutureTime","starsSuggestedPostFutureMin","STARS_SUGGESTED_POST_FUTURE_MIN","selectIsMediaNsfw","isReplyMediaNsfw","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isRepliesChat","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","availableReactions","reactions","defaultReaction","isMessageLocal","selectDefaultReaction","isTranscribing","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","savedReactionTags","canTranscribeVoice","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","messageContentRef","isTranscriptionHidden","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","isTouchScreen","useOnIntersect","isContextMenuOpen","contextMenuTarget","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isGptMenuOpen","gptMenuPosition","setIsGptMenuOpen","setGptMenuPosition","isScrolling","setIsScrolling","scrollTimeout","handleMouseEnter","distanceToBottom","useMessageGptMenuHandlers","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","isTranscriptionError","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","isChannelPost","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","hasTtl","hasMessageTtl","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","openChatLanguageModal","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","currentMediaMessageId","videoContent","getWebPageVideo","webpageTimestamp","getWebPagePhoto","albumMessageId","albumIndex","ScheduledAlbum","fromChatId","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasUnreadMention","isInvertedMedia","getIsReady","setLanguage","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","translatedText","useMessageTranslation","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","contentClassName","hasCommentCounter","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","getPeerColorClass","withAppendix","emojiSize","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","reaction","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderWebPage","getMessageWebPage","renderInvertibleMediaContent","shouldRenderSenderName","renderForwardTitle","hiddenUserName","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","emojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","suggestedPostInfo","isAccepted","isRejected","isSuggestedPostExpired","scheduleDate","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","EmbeddedMessage","senderChat","forwardSender","MessageEffect","shouldPlay","onStop","RoundVideo","onReadMedia","onHideTranscription","isTranscribed","canTranscribe","canDownload","Story","StoryMention","footerClass","hasContentAfterText","isMetaInText","renderInvertedMediaContent","MessageAppendix","isOutside","targetHref","InputText","maxLength","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","Text","iconSvg","mediaDataWithReplacedColors","doc","DOMParser","parseFromString","stroke","strokeWidth","outerHTML","AttachBotItem","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","customIcon","shortName","isDisclaimerNeeded","Menu","autoClose","getBoostProgressInfo","boostInfo","freezeOnLevelUp","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","inputs","twMerge","clsx","sanitizeUIMessages","toolResultIds","toolInvocation","toolCallId","sanitizedToolInvocations","createGlobalIntroduceMessage","MediaAreaSuggestedReaction","mediaArea","sendStoryReaction","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","containerId","getStoryKey","reactionCount","isSameReaction","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","ReactionAnimatedEmoji","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","removeProperty","screenAspectRatio","mediaAreas","isShiny","slug","handleMediaAreaClick","useBeforeUnload","lastCallback","onBeforeUnload","useScrollNotch","selector","deps","isScrolled","toggleExtraClass","addExtraClass","removeExtraClass","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","isPlaying","TextFormatter","GrammarChecker","languageToolURL","saplingEditOverview","URLSearchParams","useragent","disabledRules","allowIncompleteResults","headers","method","json","replacements","rule","general_error_type","category","error_type","classifyTypeGramma","replacement","shortMessage","original_text","sentence","sentence_start","check","sapling","dmp","diff_match_patch","getNodeForIndex","textNodes","remaining","textLength","getUnderlineOffset","containerRect","editableDiv","computed","parseFloat","TooltipContent","errorIndex","handleFixError","InputErrorTooltip","generalErrorType","toLocaleLowerCase","ErrorsReview","errorRanges","handleFixAllErrors","currentErrorIndex","setCurrentErrorIndex","currentErrorRange","setCurrentErrorRange","currentError","setCurrentError","currentSentence","setCurrentSentence","curRange","originalText","remove_segment","handleAcceptAll","handleClickPrev","LeftOutlined","handleClickNext","RightOutlined","HighlightedText","errors","variant","errorsModalVisible","setErrorsModalVisible","errorsModalPosition","setErrorsModalPosition","corrections","spalingLoading","errorMarkers","fixError","fixAllErrors","setErrorRanges","setSpalingLoading","setErrorMarkers","lastTextRef","lastCheckTimeRef","highLightErrors","textarea","walker","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","currentNode","getTextNodes","validRanges","span","markers","startNode","startOffset","endNode","rects","getClientRects","textareaRect","inputNlpRuleCheck","debounce","innerText","updatedErrors","oldText","newText","diffs","diff_main","diff_cleanupSemantic","newErrors","oldCursor","valid","op","len","updateErrorOffsetsWithInvalidateInner","leading","trailing","hightLightDebounceFunc","inputHtml","parseHtmlAsFormattedText","correction","fullText","offsetChange","sorted","realStart","realEnd","useGrammarChecker","closeErrorModal","showErrorModal","inputReact","closable","footer","open","destroyOnClose","InputGrammar","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isSelectModeActive","MessageInput","captionLimit","isAttachmentModalInput","isStoryInput","customEmojiPrefix","editableInputId","timedPlaceholderLangKey","timedPlaceholderDate","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","onSend","onFocus","isNeedPremium","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","openPremiumModal","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","uniqueId","playerId","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","hexToRgb","lottie","ensureRLottie","coords","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","newHeight","isOverflown","transitionDuration","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","InputGrammarWrapper","contentEditable","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","langKey","endsAt","anchorPosition","InputLanguageModal","translateLanguage","closeInputLanguageModal","updateTranslateLanguage","search","setSearch","handleSelect","langCode","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","originalName","filteredDisplayedLanguages","isSlim","hasCloseButton","allowDisabledClick","InputTranslateTip","inputLanguageModalOpen","openInputLanguageModal","setTranslateLanguage","tooltipOpen","openTooltip","closeTooltip","getRoomTranslateLanguage","updateRoomTranslateLanguage","toUpperCase","aiTranslatePath","resetInput","applyIosAutoCapitalizationFix","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","parseHtml","wrapNodeAnchor","wrapNodeInline","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","styledNode","nodeName","getCleanNode","newWrapper","createDocumentFragment","applyBlockStyles","nodes","filterNode","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","handlePaste","clipboardData","pastedText","getData","pastedFormattedText","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","DEBUG","textContents","getElementsByTagName","replaceWith","entityType","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","textToPaste","isWordDocument","shouldSetAttachments","newAttachments","canReplace","isUploadingDocumentSticker","isUploadingFileSticker","attachments","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","analyzerCallback","startMediaRecorder","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","getByteFrequencyData","subscribeToAnalyzer","onstop","Blob","delayStop","getUserInfo","getCorrectedText","suggestion","SkeletonScreen","grammarlyResult","setGrammarlyResult","SERVER_API_URL","grammarlyFormal","grammarlyFriendly","grammarlyCheck","grammarlyRephrase","grammarlyShorten","selectedTabIndex","setSelectedTabIndex","ImproveTab","RephraseTab","ShortenTab","FriendlyTab","FormalTab","isGrammarToolOpen","openGrammarTool","closeGrammarTool","injectMessageAI","GrammarTool","injected","useVirtualBackdrop","handleToggleMenu","GrammerInput","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","shouldCollectDebugLogs","canEditMedia","paidMessagesStars","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isPhotoOrVideo","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","handleQuickSelect","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","getDebugLogs","DEBUG_LOG_FILENAME","isForAttachMenu","attachMenuPeerTypes","ariaControls","hasPopup","positionY","noCloseOnBackdrop","ariaLabelledBy","BotCommandMenu","BotKeyboardMenu","isKeyboardSingleUse","keyboardButtons","noCompact","BotMenuButton","textRef","textEl","composerEl","ChatCommandTooltip","shouldForceShowEditing","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","forwardedMessages","selectEditingMessage","forwardSenders","selectSenderFromForwardedMessage","forwardedMessage","isSenderChannel","forwardsHaveCaptions","forward","isContextMenuDisabled","isReplyToDiscussion","forwardedMessagesCount","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","clearEmbedded","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","renderingSender","innerClassName","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","MenuSeparator","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","WebPagePreview","isEditing","toggleMessageWebPage","isSmallerMedia","webPageMediaSize","hasMediaSizeOptions","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","previewMedia","getWebPageAudio","getWebPageDocument","previewMediaUrl","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","MainButtonState","chatBot","isChatWithBot","selectPeerPaidMessagesStars","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","canPlayEffect","shouldPlayEffectInComposer","effectReactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","balance","isStarsBalanceModalOpen","starsBalanceModal","isAppConfigLoaded","insertingPeerIdMention","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","forEmoji","customEmojiForEmoji","topInlineBots","contentToBeScheduled","recentEmojis","inlineBots","byUsername","isInlineBotLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","canSendOneTimeMedia","stealthMode","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","inputPlaceholder","editableInputCssSelector","onDropHide","onForward","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","openStoryReactionPicker","closeReactionPicker","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","isMounted","setIsMounted","lastMessageSendTimeSeconds","prevDropAreaState","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isInlineAILoading","setIsInlineAILoading","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canAttachEmbedLinks","canSendVoices","getAllowedAttachmentOptions","isSendTextBlocked","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","Event","bubbles","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","newValue","getAttachmentMediaType","shouldForce","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","isSendAsMenuOpen","openSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","updateInlineAILoading","updataAIResponse","isAdmin","isChatAdmin","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","hasStickers","useStickerTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","inlineBotResults","closeInlineBotTooltip","help","inlineBotHelp","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","nextFilteredBotCommands","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","prevThreadId","prevDraft","shouldUpdateSuggestedPost","customEmojiIds","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","useLoadLinkPreview","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","handleEmbeddedClear","validateTextLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","toLanguageCode","sendGAEvent","collectInformation","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","handleToDoListSend","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","handleSuggestPostClick","price","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","withBotMenuButton","isBotMenuButtonOpen","activeUntil","isComposerHasFocus","isReactionSelectorOpen","anonymous","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","sendButtonAriaLabel","handleToggleReaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","withBotCommands","shouldRenderPaidBadge","prevShouldRenderPaidBadge","QuickFile","ReactionSelector","allAvailableReactions","onToggleReaction","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onSendWhenOnline","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","onSelectResult","slideClassName","formatVoiceRecordDuration","GrammarToolWrapper","InputTranslate","getReactionKey","withEffectOnly","noFastClick","CustomSendMenu","onSendSchedule","onRemoveEffect","hasCurrentEffect","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","preloadImage","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","maxPinnedStoriesCount","isOut","pinnedStories","selectPinnedStories","pinnedStory","canPin","loadPeerSkippedStories","toggleStoryInProfile","toggleStoryPinnedToTop","isDense","isFullyLoaded","preventMessageInputBlurWithBubbling","handleUnarchiveClick","isInProfile","handleArchiveClick","handleTogglePinned","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessagesByTencent","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","MAX_EMPTY_WAVEFORM_POINTS","SPIKE_WIDTH","SPIKE_STEP","SPIKE_RADIUS","HEIGHT","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","AVG_VOICE_DURATION","isReverse","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","renderSeekline","bufferedRanges","seekerRef","mediaDuration","selectMessageMediaDuration","onPause","transcribeAudio","openOneTimeMediaModal","contentAudio","isMediaUnread","mediaSource","isVoice","isSeeking","setIsActivated","coverHash","coverBlobUrl","isInOneTimeModal","OneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","reversePlayProgress","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","onCapture","onDrag","SharedMedia","buttonClassNames","renderWithTitle","performer","renderSecondLine","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","renderAudio","onClickTranscribe","ry","renderVoice","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","createObjectURL","unloadVideo","revokeObjectURL","checkIfStreamingSupported","buffer","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","Progressive","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","strokeLinejoin","clipPath","StopIcon","clipRule","ArrowRightIcon","SendIcon","SettingIcon","to","begin","repeatCount","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","percentage","renderOverviewItemValue","change","isChangeNegative","fragments","lastIndex","original","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName","isScrollLock","mutate","setIsScrollLock","useSWR","fallbackData","setIsAtBottom","scrollBehavior","setScrollBehavior","scrollLocked","scrollUnLocked","isGraph","toggleStoriesHidden","StoryRibbon","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","closing","StoryRibbonButton","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","decoding","shouldUseDraft","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","videoHeight","videoWidth","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","capturePlaying","togglePlaying","isPriority","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","drawerKey","drawerParams","closeDrawer","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","selectTopics","isChatMuted","selectCanDeleteTopic","Topic","deleteTopic","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","currentTopicId","ForumPanel","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","Right","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","ProfilePhoto","canPlayVideo","isDeletedUser","isChatWithRepliesBot","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getProfilePhotoMediaHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","specialIcon","userFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","animationLevel","emojiStatusSticker","emojiStatusSlug","ProfileInfo","isForMonoforum","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","photoWrapper","topicContainer","topicIcon","topicIconTitle","topicTitle","topicMessagesCounter","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","photoDashes","photoDash","photoDash_current","renderPhotoTabs","personalPhoto","fallbackPhoto","fallbackPhotoVisible","fallbackPhotoContents","resolveTransitionName","renderPhoto","navigation","navigation_prev","navigation_next","isReadDateRestrictedByMe","getStatus","renderStatus","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","isFullVideo","shouldRenderVideo","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","formatScheduledDateTime","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","fullSize","super","hasError","getDerivedStateFromError","componentDidCatch","errorInfo"],"sourceRoot":""}