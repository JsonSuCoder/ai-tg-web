{"version":3,"file":"6407.aee3b1995552c484fd54.js","mappings":"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AAA,KAA4BzqC,GACnD04B,sBAAsBgS,EAAAA,EAAAA,KAA2B1qC,GACjDu7B,qBACAgM,YACAW,iBACAjP,mBAAoBiN,GAAcyE,wBAClC9R,QACAC,SACA2E,eACAC,WACD,GAxKe39B,EA5oBoC6qC,EACtDvrB,WACAzb,qBACA+0B,eACAC,sBACAvnB,SACAs0B,kBACAvmB,UACA6pB,sBACA5N,kBACAwP,QACAhS,OACAC,QACAK,SACAC,aACAqN,YACApN,aACA+Q,cACA9Q,gBACAE,WACAC,gBACAC,qBACAI,SACAkB,oBACAjB,WACAC,YACAkB,wBACAv5B,OACAu4B,YACAiB,sBACAvB,UACAZ,mBACAE,iBACAH,YACAtZ,uBACAwa,aACAV,iBACAY,kBACAC,oBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACAW,yBACArD,mBACAD,wBACA+N,mBACAlM,aACAoB,iBACAtpB,0BACAipB,gBACA4P,uBACA3P,mBACAC,qBACApC,wBACA6C,qBACA2M,kBACAjP,sBACAwE,gBACAC,WACAx8B,aACAuS,WACA8oB,2BAEA,MAAM,WACJuO,GAAU,qBACVC,GAAoB,aACpBC,GAAY,WACZC,GAAU,gBACVC,GAAe,cACfC,GAAa,YACbC,GAAW,cACXC,GAAa,uBACbC,GAAsB,sBACtBC,GAAqB,kBACrBC,GAAiB,cACjBC,GAAa,oBACbC,GAAmB,WACnBC,GAAU,gBACVC,GAAe,qBACfC,GAAoB,aACpBC,GAAY,aACZC,GAAY,kBACZC,GAAiB,QACjBC,GAAO,aACPpO,GAAY,eACZqO,GAAc,UACdC,GAAS,eACTvsB,GAAc,0BACdwsB,GAAyB,oBACzBC,GAAmB,sBACnBC,GAAqB,0BACrBC,GAAyB,iBACzBvsB,GAAgB,mBAChBwsB,GAAkB,gBAClBC,GAAe,uBACfC,GAAsB,qBACtB7sB,GAAoB,sBACpB7D,GAAqB,eACrB2wB,GAAc,mBACdC,KACEroC,EAAAA,EAAAA,MAEEhD,IAAOC,EAAAA,EAAAA,MACLgD,IAAKiR,KAAiB+E,EAAAA,EAAAA,GAAkB,CAC9CnJ,SACAkrB,uBACAr7B,WAAW,KAEN2rC,GAAYC,KAAiBpgC,EAAAA,EAAAA,KAAS,IACtCqgC,GAAgBC,KAAqBtgC,EAAAA,EAAAA,KAAS,IAC9CugC,GAAuBC,GAAqBC,KAAwBvlC,EAAAA,EAAAA,MACpEwlC,GAAsBC,KAA2B3gC,EAAAA,EAAAA,IAASg5B,KAC1D/yB,GAAiB26B,KAAY57B,EAAAA,EAAAA,GAAYC,GAAwB8B,GAAS2L,EAAQnN,MAGnFyU,QAAyC7kB,IAAxBonC,GAAqCniC,QAAQmiC,EAAoB/iC,SAExFgF,EAAAA,EAAAA,KAAU,KACJ+vB,IAAiB5pB,GACnBs6B,GAAW,CAAEjwB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,IAC1D,GACC,CAACwmC,GAAYt6B,EAAQ+N,EAAQ1D,OAAQ0D,EAAQja,GAAI81B,MAEpD/vB,EAAAA,EAAAA,KAAU,KACJ+sB,IAAmB5mB,GACrBm7B,GAAmB,CAAE9wB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,IAClE,GACC,CAAC8yB,GAAiB5mB,EAAQ+N,EAAQ1D,OAAQ0D,EAAQja,GAAIia,EAAQgZ,YAEjEltB,EAAAA,EAAAA,KAAU,KACJgwB,GAAyB7pB,GAC3B06B,GAAa,CAAErwB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,IAC5D,GACC,CAAC+1B,EAAuB7pB,EAAQ06B,GAAc3sB,EAAQ1D,OAAQ0D,EAAQja,MAEzE+F,EAAAA,EAAAA,KAAU,KACJ+9B,GAAqB/iC,QAAUm1B,GAAiBn1B,SAAW+iC,EAAoB/iC,QACjF+iC,EAAoBxwB,SAASkW,IAC3BkP,GAAa,CAAEiC,eAAgBnR,GAAM,GAEzC,GACC,CAACsa,EAAqB5N,EAAiBwC,MAE1C3yB,EAAAA,EAAAA,KAAU,KACHk/B,GAAgBrR,IAAa1nB,GAChCy6B,GAAa,CAAEpwB,OAAQ0D,EAAQ1D,QACjC,GACC,CAAC0uB,EAAa/4B,EAAQ0nB,EAAW+S,GAAc1sB,EAAQ1D,SAE1D,MAAM0f,IAAoBv2B,EAAAA,EAAAA,KAAQ,KAEhC,MAAM0oC,GAAY3sB,EAAAA,EAAAA,MAAY4sB,MAAMC,KAC9BC,GAAY9sB,EAAAA,EAAAA,MAAY+sB,MAAMF,KACpC,GAAIruB,EAAQ7b,WAAW8c,iBAAiBna,OAAQ,CAC9C,MAAM0nC,EAAiB,IAAItkB,IAAIlK,EAAQ7b,WAAW8c,iBAAiBlM,KACjE,EAAGlU,YAAaytC,EAAUztC,IAAWstC,EAAUttC,MAGjD,OAAO+mB,MAAM6mB,KAAKD,GAAgBvqB,OAAOvc,SAASoN,MAAM,EAAG45B,EAAAA,IAC7D,CAEA,GAAK1uB,EAAQgf,YAIb,OAAOoB,OAAOC,KAAKrgB,EAAQgf,aAAalqB,MAAM,EAAG45B,EAAAA,KAC9C35B,KAAKhP,GAAOuoC,EAAUvoC,IAAOooC,EAAUpoC,KACvCke,OAAOvc,QAAQ,GACjB,CAACsY,EAAQ7b,WAAW8c,gBAAiBjB,EAAQgf,cAE1CrD,IAAgBl2B,EAAAA,EAAAA,KAAQ,KAC5B,GAAIgmC,EACF,OAAOA,EAAMvY,SAAS/L,MAAMwnB,IAC1B,MAAMC,GAAoBC,EAAAA,EAAAA,IAA4BF,GACtD,QAAKC,IACEE,EAAAA,EAAAA,IAAiBnI,GAAiBiI,EAAkB,IAI/D,MAAMA,GAAoBC,EAAAA,EAAAA,IAA4B7uB,GACtD,QAAK4uB,IACEE,EAAAA,EAAAA,IAAiBnI,GAAiBiI,EAAkB,GAC1D,CAACjI,GAAiB8E,EAAOzrB,IAEtB+uB,GAAiB3U,GAAYyH,IAAWmN,WAAanN,GAAUoN,WAAW,QAAKxsC,GAErFqJ,EAAAA,EAAAA,KAAU,KACR,GAAIs/B,GAEF,YADA6C,GAAwB3H,IAS1B,IAL8ByI,IACxBA,GAAeG,YAChBxnC,QAAQsY,EAAQwG,QAAQ7G,MAAMA,QChXhC,SAAuCqX,GAC5C,MAAMmY,EAAWnY,EAAMK,wBACjB9hB,EAAK45B,EAAS7X,WAAaC,KAAK6X,UAClCD,EAAS5M,WACT4M,EAEJ,OAAOznC,QAAQ6N,EAAGtK,QAAQ,8CACnBvD,QAAQ6N,EAAGtK,QAAQ,sBAAwBvD,QAAQ6N,EAAGtK,QAAQ,aACvE,CDyWSokC,CAA8BN,IAIjC,YADAd,GAAwB3H,IAI1B,MAAMgJ,EAAgBvY,EAA4BgY,IAE5CQ,EAAcvvB,EAAQwG,QAAQ7G,KAAMA,KAAMuW,QAAQ,UAAW,KAElDoZ,EAAc3vB,KAAK6vB,OAAO1oC,OAAS,GAC/CyoC,EAAYvkB,SAASskB,EAAc3vB,MAMxCsuB,GAAwBc,GAAeU,aAJrCxB,GAAwB3H,GAIyB,GAClD,CACDyI,GAAgBA,IAAgBG,UAAWH,IAAgBU,YAAaV,IAAgBW,UACxFtE,GAAqBprB,EAAQwG,QAAQ7G,OAGvC,MAAMgwB,IAAYvnC,EAAAA,EAAAA,IAAgB,KAChCslC,IAAc,GACdr5B,IAAS,IAGLu7B,IAAexnC,EAAAA,EAAAA,IAAgB,KACnCslC,IAAc,GACdiC,KACA,MAAMpM,EAAakI,GAAOvY,SACtBuY,EAAMvY,SAASne,KAAI,EAAGhP,QAASA,IAC/B,CAACia,EAAQja,IACbunC,GAAuB,CACrBhxB,OAAQ0D,EAAQ1D,OAChBinB,aACAsM,WAAgC,cAApBtJ,GACZ,IAGEuJ,IAAgB1nC,EAAAA,EAAAA,IAAgB,KACpCwlC,IAAkB,GAClBv5B,IAAS,IAGL07B,IAAc3nC,EAAAA,EAAAA,IAAgB,KAClC,MAAM4nC,EAAYhC,KAAyB1H,IAAqByI,GAC5DhY,EAA4BgY,SAAkBtsC,EAC7CqmC,GAKH6C,GAAqB,CACnBsE,aAAcjwB,EAAQja,GACtBiqC,YACAE,YAAalC,GACbmC,mBAAe1tC,IARjBspC,GAAc,CACZqE,WAAYpwB,EAAQ1D,OAAQC,UAAWyD,EAAQja,GAAIiqC,YAAWE,YAAalC,KAU/E2B,IAAW,IAGPU,IAAmBjoC,EAAAA,EAAAA,IAAgBiqB,UAEvC,GADAsd,KACI3vB,EAAQwG,QAAQ7G,MAAMA,KAAM,CAC9BgsB,GAAqB,CACnBsE,aAAcjwB,EAAQja,GAAIoqC,mBAAe1tC,EAAWutC,eAAWvtC,EAAWytC,iBAAaztC,IAEzF,MAIM6tC,SAJ4BC,EAAAA,GAAwBC,iBAAiB,CACzEC,MAAOzwB,EAAQwG,QAAQ7G,MAAMA,QAGW+wB,aAAa,GACnDJ,GAAiBA,EAAcK,MAAQ,GACzC7e,EAAAA,EAAa8e,KAAK,oBAAqBN,EAAcO,SAASC,SAE9Dhf,EAAAA,EAAa8e,KAAK,uBAAuB,IACzCG,EAAAA,EAAAA,IAAe,CACbC,KAAM,CACJ9d,SAAU,CACR,CACExkB,KAAM,SACN8X,QAAS,gFACTzgB,GAAI,KAEN,CACE2I,KAAM,OACN8X,QAAU,aAAYxG,EAAQwG,QAAQ7G,MAAMA,OAC5C5Z,GAAI,OAIVkrC,WAAaC,IACXpf,EAAAA,EAAa8e,KAAK,oBAAqBM,EAAS,EAElDC,SAAUA,KAERhf,QAAQC,IAAI,SAAS,IAI7B,KAGIgf,IAAwBhpC,EAAAA,EAAAA,IAAgB,KAC5C,MAAMkU,EAAS0D,EAAQ1D,OACC,IAAIiV,EAAgBjV,GAC5BoV,MAAM1R,GACtB2vB,IAAW,IAGP0B,IAAmBjpC,EAAAA,EAAAA,IAAgB,KACvCsjC,GAAW,CACTpvB,OAAQ0D,EAAQ1D,OAChB2D,SAAUD,EAAQja,KAEpB4pC,IAAW,IAGP2B,IAAalpC,EAAAA,EAAAA,IAAgB,KACjCwjC,GAAa,CAAErvB,UAAWyD,EAAQja,KAClC4pC,IAAW,IAGP4B,IAAYnpC,EAAAA,EAAAA,IAAgB,KAChCslC,IAAc,GACdE,IAAkB,EAAK,IAGnB4D,IAAcppC,EAAAA,EAAAA,IAAgB,KAClCyjC,GAAW,CAAEvvB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,GAAI0rC,SAAS,IACrE9B,IAAW,IAGP+B,IAAgBtpC,EAAAA,EAAAA,IAAgB,KAEpC,GADAunC,KACIlE,GAAOvY,SAAU,CACnB,MAAMqQ,EAAakI,EAAMvY,SAASne,KAAI,EAAGhP,QAASA,IAClD+lC,GAAgB,CAAEsE,WAAYpwB,EAAQ1D,OAAQinB,cAChD,MACEuI,GAAgB,CAAEsE,WAAYpwB,EAAQ1D,OAAQinB,WAAY,CAACvjB,EAAQja,KACrE,IAGI4rC,IAAoBvpC,EAAAA,EAAAA,IAAgB,KACxCunC,KACA3D,GAAY,CAAE4F,QAAS5xB,EAAQwG,QAAQorB,SAAW,IAG9CC,IAAsBzpC,EAAAA,EAAAA,IAAgB,KAC1CunC,KACA1D,GAAc,CAAE2F,QAAS5xB,EAAQwG,QAAQorB,SAAW,IAGhDE,IAAmB1pC,EAAAA,EAAAA,IAAgB,KACvCunC,KACA7C,GAAe,CAAExwB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,IAAK,IAG7DgsC,IAAkB3pC,EAAAA,EAAAA,IAAgB,KACtCunC,KACA5C,GAAU,CAAEzwB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,IAAK,IAGxDisC,IAAsB5pC,EAAAA,EAAAA,IAAgB,KAC1C,MAAM6pC,EAASxG,GAAOvY,SAClB,CACA3W,UAAWyD,EAAQja,GACnBmsC,gBAAiBzG,EAAMvY,SAASne,KAAI,EAAGhP,QAASA,IAChDosC,WAAW,GAEX,CAAE51B,UAAWyD,EAAQja,GAAIosC,WAAW,GAExCjG,GAAuB+F,GACvBtC,IAAW,IAGPyC,IAA6BhqC,EAAAA,EAAAA,IAAgB,KACjD+jC,GAAsB,CAAE7vB,OAAQ0D,EAAQ1D,OAAQvW,GAAIia,EAAQja,KAC5D4pC,IAAW,IAGP0C,IAA0BjqC,EAAAA,EAAAA,IAAiB2K,IAC/Cq5B,GAAkB,CAChB9vB,OAAQ0D,EAAQ1D,OAChBC,UAAWyD,EAAQja,GACnBgN,gBAEFsB,IAAS,IAGLi+B,IAAqBlqC,EAAAA,EAAAA,IAAgB,KACzCslC,IAAc,GACdn6B,GAAgB8+B,GAAwB,IAGpCE,IAAwBnqC,EAAAA,EAAAA,IAAgB,KAC5CunC,KACAnD,GAAgB,CAAElwB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,IAAK,IAG9DysC,IAA6BpqC,EAAAA,EAAAA,IAAgB,KACjDunC,KACAlD,GAAqB,CAAEnwB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,IAAK,IAGnE0sC,IAAqBrqC,EAAAA,EAAAA,IAAiBm7B,IAC1CqJ,GAAkB,CAAErJ,eACpBoM,IAAW,IAGP+C,IAAiBtqC,EAAAA,EAAAA,IAAgB,KACrCilC,GAAgB,CACd/wB,OAAQ0D,EAAQ1D,OAChBC,UAAWyD,EAAQja,GACnB4sC,oBAAqB1yB,IAAa2yB,EAAAA,GAClCC,sBAAsB,IAExBlD,IAAW,IAGPmD,IAAmB1qC,EAAAA,EAAAA,IAAgB,MACvCi6B,EAAAA,EAAAA,IAAoBriB,EAAQwG,QAAQ8a,QAASyR,aAC7CpD,IAAW,IAGPqD,IAAsB5qC,EAAAA,EAAAA,IAAgB,MACzCqjC,GAAOvY,UAAY,CAAClT,IAAU3G,SAASs1B,IACtC,MAAMC,GAAoBC,EAAAA,EAAAA,IAA4BF,GACjDC,IAEDjT,GACF2Q,GAAoB,CAAE2G,MAAOrE,IAE7BvC,GAAc,CAAE4G,MAAOrE,EAAmBsE,cAAevE,IAC3D,IAEFgB,IAAW,IAGPwD,IAAgB/qC,EAAAA,EAAAA,IAAgB,KACpC,MAAMgrC,GAAQC,EAAAA,EAAAA,IAAgBrzB,GAC9B6sB,GAAQ,CAAEyG,IAAKF,IACfzD,IAAW,IAGP4D,IAAuBnrC,EAAAA,EAAAA,IAAiBzD,IACxCw3B,KAAsB9b,EACxBO,GAAiB,CACfuB,eAAgB,eAGlB3B,GAAe,CACblE,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,GAAIpB,WAAU6uC,mBAAmB,IAGhF7D,IAAW,IAGP8D,IAAyBrrC,EAAAA,EAAAA,IAAgB,KAC7CqY,GAAqB,CACnBnE,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,GAAIuX,MAAO,IAExDqyB,IAAW,IAGP+D,IAA8BtrC,EAAAA,EAAAA,IAAgB,KAClDwU,GAAsB,CACpBN,OAAQ0D,EAAQ1D,OAChBC,UAAWyD,EAAQja,KAGrB4pC,IAAW,IAGPgE,IAA2BvrC,EAAAA,EAAAA,IAAiB68B,IAChDkI,GAA0B,CAAE7wB,OAAQ0D,EAAQ1D,OAAQC,UAAWyD,EAAQja,GAAIk/B,YAAW,IAGlF2O,IAAkBxrC,EAAAA,EAAAA,IAAgB,KACtC4kC,GAA0B,CACxB1wB,OAAQ0D,EAAQ1D,OAChBvW,GAAIia,EAAQja,KAEd4pC,IAAW,IAGPkE,IAAqBzrC,EAAAA,EAAAA,IAAgB,KACzC6kC,GAAoB,CAClB3wB,OAAQ0D,EAAQ1D,OAChBvW,GAAIia,EAAQja,KAEd4pC,IAAW,IAGPmE,IAAuB1rC,EAAAA,EAAAA,IAAgB,KAC3C8kC,GAAsB,CACpB5wB,OAAQ0D,EAAQ1D,OAChBC,UAAWyD,EAAQja,KAErB4pC,IAAW,IAGPoE,IAAmBtuC,EAAAA,EAAAA,KAAQ,KAAOgmC,EAAQA,EAAMvY,SAAW,CAAClT,IAAUjL,KAAI,EAAGhP,QAASA,KAAK,CAAC0lC,EAAOzrB,IAEnGg0B,IAAe5rC,EAAAA,EAAAA,IAAgB,KAC9B7F,IACLmrC,IAAc,GACdr5B,KACAk5B,GAAe,CACbjxB,OAAQ/Z,EAAKwD,GAAIw9B,WAAYwQ,KAC7B,IAGEE,IAAkB7rC,EAAAA,EAAAA,IAAgBiqB,UACtC,MAAM,MAAEmN,EAAK,SAAE/I,EAAQ,QAAEgJ,EAAO,MAAEC,EAAK,MAAEC,GAAU3f,EAAQwG,cACrDgnB,GAAmB,CAAElxB,OAAQ0D,EAAQ1D,SACvCkjB,GACF0U,EAAAA,GAAAA,IAAal0B,GACJyf,GACT0U,EAAAA,GAAAA,IAAen0B,GACNyW,GACT2d,EAAAA,GAAAA,IAAgBp0B,GACP0f,GACT2U,EAAAA,GAAAA,IAAar0B,GACJ2f,IACT2U,EAAAA,GAAAA,IAAat0B,GAEf2vB,IAAW,IAGb,GAAItI,EAGF,YAFAsI,KAKF,MAAM/7B,GAAmB,IAAIX,KAG7B,OAFAW,GAAiBC,YAAYD,GAAiBE,cAAgB,GAG5DjR,EAAAA,GAAAC,cAAA,OAAKsC,IAAKiR,GAAcvU,WAAWyB,EAAAA,EAAAA,GAAe,uBAAwBzB,KACxEe,EAAAA,GAAAC,cAACu2B,GAAkB,CACjBC,qBAAsBA,GACtB90B,mBAAoBA,EACpB+0B,aAAcA,EACdC,oBAAqBA,EACrBK,mBAAoBA,GACpB7Z,QAASA,EACT2Z,UAAWA,EACXtZ,qBAAsBA,EACtB8Z,cAAeA,GACfloB,OAAQw7B,GACR7T,iBAAkBA,EAClBE,eAAgBA,EAChBC,OAAQA,EACRC,WAAYA,EACZ8B,sBAAuBA,EACvBC,oBAAqBA,EACrB9B,WAAYA,EACZC,cAAeA,EACfE,SAAUA,EACVC,cAAeA,EACfC,mBAAoBA,EACpBC,SAAUyT,KAAyB1H,GACnC1L,UAAWA,EACXF,OAAQA,EACRI,UAAWA,EACXc,kBAAmBA,EACnBjB,SAAUA,EACVH,QAASA,EACTK,WAAYA,EACZE,eAAgBA,GAChBC,iBAAkBA,GAClBC,QAASA,GACTC,YAAaA,GACbC,UAAWA,GACXC,YAAaA,GACbC,WAAYA,GACZC,UAAWA,GACXC,aAAcA,GACdM,cAAeA,GACfL,aAAcA,GACdC,gBAAiBA,GACjBC,kBAAmBA,GACnBQ,sBAAuBA,GACvBtD,qBAAsBA,GACtBC,gBAAiBA,GACjBvR,eAAgBA,GAChB2U,gBAAiBA,EACjBN,cAAeA,GACfK,kBAAmBA,GACnBG,kBAAmBA,GACnB1B,UAAWA,GACXhB,KAAMA,EACNC,MAAOA,EACP6C,aAAc8U,GACdjV,QAAS2T,GACT1T,aAAcgU,GACd/T,eAAgB8U,GAChB5U,OAAQ8U,GACR7U,MAAO8U,GACP7U,QAAS8U,GACT7U,UAAW+U,GACX9U,SAAUgT,GACV9S,SAAUkX,GACVnX,cAAe8U,GACf5U,gBAAiB8U,GACjB7U,SAAUgV,GACV/U,OAAQmV,GACRlV,aAAcoV,GACdj+B,QAASs7B,GACTvS,WAAYsV,GACZ3U,eAAgB0U,GAChBpV,aAAcyV,GACdxV,WAAY0V,GACZzV,UAAW4V,GACX3V,aAAcsU,GACdrU,YAAaqQ,GACbpQ,aAAc6U,GACd3U,iBAAkB2V,GAClB1V,mBAAoB4V,GACpB3V,wBAAyB4V,GACzB/V,eAAgB6U,GAChBxU,qBAAsB2V,GACtB1V,YAAa2V,GACb1V,eAAgB2V,GAChB1V,iBAAkB2V,GAClB1V,YAAa6V,GACb5V,aAAcA,GACdC,QAASA,KAEXz7B,EAAAA,GAAAC,cAACs1B,EAAe,CACdnmB,OAAQ07B,GACRpxB,UAAWyD,EAAQja,GACnBuW,OAAQ0D,EAAQ1D,OAChBjI,QAASy7B,KAEXjtC,EAAAA,GAAAC,cAACyxC,EAAAA,EAAa,CACZtiC,OAAQ47B,GACRx5B,QAAS05B,GACTpuB,KAAMxd,GAAK,0BACXqyC,aAAcryC,GAAK,uBACnBsyC,eAAgB1C,KAEjB7X,GAAiBgU,GACd,I,8FEzyBV,MAmCA,EAnC4BwG,CAACC,EAAiBC,KAC5C,MAAM,iBAAEC,IAAqB1vC,EAAAA,EAAAA,OACtBkJ,EAAOymC,IAAYxnC,EAAAA,EAAAA,IAASsnC,GA8BnC,OA5BA9oC,EAAAA,EAAAA,KAAU,KACH8oC,IAIDA,EAAaG,WAAW,KAC1BD,EAASF,GAETI,EAAAA,MAAeC,EAAAA,IAAsBN,EAAOK,EAAAA,KAAcE,MACvDn9B,MAAMo9B,IACL,MAAMC,EAAMC,IAAIC,gBAAgBH,IAChCr9B,EAAAA,EAAAA,IAAas9B,GACVr9B,MAAK,KACJ+8B,EAAU,OAAMM,KAAO,GACvB,IAELthB,OAAM,KACL+gB,EAAiB,CACfF,QACAY,gBAAY9yC,EACZ+yC,qBAAiB/yC,EACjBgzC,WAAW,EACXx+B,aAAwB,SAAV09B,EAAmBe,EAAAA,IAA2BC,EAAAA,KAC5D,IAER,GACC,CAACf,EAAcD,IAEXC,EAAevmC,OAAQ5L,CAAS,C,kBCvBlC,SAASmzC,EAAmBC,GACjC,MAAkB,aAAdA,EAAKtwC,KACAswC,EAAKjE,QAGPiE,EAAKC,WAAWpwC,MAAMqwC,GAA0D,UAAdA,EAAKxwC,QAAmBqsC,OACnG,CAEO,SAASoE,EAAyBH,GACvC,MAAkB,aAAdA,EAAKtwC,KACAswC,EAAKI,kBAGPJ,EAAKz0B,UACd,CAQO,SAAS80B,EAAkBL,GAChC,GAAkB,mBAAdA,EAAKtwC,KAET,OAGK,SAAmCuwC,GACxC,MAAMK,EAAQL,EAAWpwC,MAAMqwC,GAA0D,UAAdA,EAAKxwC,OAC1E6wC,EAAWN,EAAWpwC,MAAMqwC,GAA6D,aAAdA,EAAKxwC,OAChF8wC,EAAUP,EAAWpwC,MAAMqwC,GAA4D,YAAdA,EAAKxwC,OAKpF,MAAO,CACL4wC,QACAG,gBANsBR,EAAWpwC,MAAMqwC,GACzB,oBAAdA,EAAKxwC,OAML8wC,UACAD,WAEJ,CAjBSG,CAA0BV,EAAKC,WACxC,C,iKCpBA,IAAIU,EAA6B,EAEjC,MAAMC,GAAwBC,EAAAA,EAAAA,KAAoB,KAChDF,EAA6B,CAAC,IAyChC,GAAe91C,EAAAA,EAAAA,KAtCuBgf,EACpCC,OACA7d,YACAwU,aACAlR,UAEA,MAAM,MAAExB,IAAUoZ,EAAAA,EAAAA,KAEZ25B,GAAWC,EAAAA,EAAAA,GAAsBj3B,GACjCk3B,GAAcC,EAAAA,EAAAA,KAEdC,OACHzgC,IAAcsY,EAAAA,EAAAA,MAA0BpN,EAAAA,EAAAA,aAA6B/e,IAAbk0C,GAA0BA,IAAah3B,IA6BhF62B,GAjDgB,KAmDC,IAA/BA,GACFC,IAGFD,IAEO,IAlCDQ,GAAavxC,EAAAA,EAAAA,KAAQ,IAClBsxC,EAoCX,SAAkCp3B,EAAcg3B,GAC9C,MAAMM,EAA8B,GAC9BC,EAAav3B,EAAK7Y,OAClBqwC,EAAiBR,GAAU7vC,QAAU,EAE3C,IAAK,IAAI0R,EAAI,EAAGA,GAAK0+B,EAAY1+B,IAAK,CACpC,MAAM4+B,EAAYF,EAAa1+B,EACzB6+B,EAAoBF,EAAiB3+B,EAEvCm+B,GAAYU,GAAqB,GAAK13B,EAAKy3B,KAAeT,EAASU,GACrEJ,EAASK,QACPz0C,EAAAA,GAAAC,cAAA,OAAKhB,UC5F2E,YD6F9Ee,EAAAA,GAAAC,cAAA,OAAKhB,UC7FgG,YD6FlE6d,EAAKy3B,IAAc,IACtDv0C,EAAAA,GAAAC,cAAA,OAAKhB,UC9FqJ,YD8FpH60C,EAASU,IAC/Cx0C,EAAAA,GAAAC,cAAA,OAAKhB,UC/F2Q,YD+F1O6d,EAAKy3B,IAAc,MAI7DH,EAASK,QAAQz0C,EAAAA,GAAAC,cAAA,YAAO6c,EAAKy3B,IAAc,IAE/C,CAEA,OAAOH,CACT,CA3D2BM,CAAyB53B,EAAMg3B,GAAYh3B,GACjE,CAACo3B,EAAeJ,EAAUh3B,IAc7B,OAZA7T,EAAAA,EAAAA,KAAU,KACR,IAAKirC,EAAe,OAEpB,MAAMhtB,EAAYC,OAAOje,YAAW,KAClC8qC,GAAa,GAhCI,KAmCnB,MAAO,KACL7sB,OAAOhe,aAAa+d,EAAU,CAC/B,GACA,CAACgtB,EAAep3B,IAGjB9c,EAAAA,GAAAC,cAAA,QAAMsC,IAAKA,EAAKtD,WAAWyB,EAAAA,EAAAA,GAAezB,GAAYwU,GC7DnC,YD6D+D3S,IAAKC,EAAQ,WAAQnB,GACpGu0C,EACI,G,mCE/DX,SAAgB,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,QAAU,WAAW,iBAAiB,WAAW,cAAgB,WAAW,IAAM,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,WAAW,WAAW,QAAU,WAAW,QAAU,WAAW,SAAW,WAAW,YAAc,W,kBCDrX,IAAIQ,EACAC,E,2BAEJ,MAAMC,EAAwC,CAC5CC,MAAM,EACNC,WAAW,EACXC,IAAI,EACJC,SAAS,EACTC,MAAM,EACNC,WAAW,EACXC,OAAO,EACPC,YAAY,EACZ,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,KAAK,GAsBDtqC,EAAkBM,IACtB,MAAMoI,EAAS,WAAYpI,EAAIA,EAAEoI,OALTpI,IAChB,mBAAoBA,EAAIA,EAAEiqC,eAAe,GAAG1iC,QAAU,EAIpB2iC,CAAUlqC,GAEpD,IACGipC,IAEGA,EAAatoC,SAASX,EAAEvD,SAExBwsC,EAAalsC,WAAa,GAAKqL,GAAU,GAEzC6gC,EAAalsC,WAAcksC,EAAansC,aAAemsC,EAAapsC,cAAiBuL,GAAU,EACnG,CACA,GAAI8gC,GAA4BlpC,EAAEvD,OAAuBC,QAAQwsC,GAA0B,OAC3FlpC,EAAEN,gBACJ,GAGF,SAASyqC,EAA4BnqC,GAC/BmpC,EAAanpC,EAAEhF,OArCrB,SAAmByB,GACjB,KAAKA,GAAYA,aAAkB2tC,aAAc,OAAO,EACxD,MAAM5pC,EAAU/D,EACV4sB,EAAU7oB,EAAQ6oB,QAAQ3B,cAChC,GAAgB,aAAZ2B,EAAwB,OAAO,EACnC,GAAgB,UAAZA,EAAqB,OAAO,EAChC,MAAMryB,EAAOwJ,EAAQ8f,aAAa,QAClC,QAAKtpB,GACc,CACjB,OAAQ,WAAY,SAAU,QAAS,MAAO,MAC9C,SAAU,OAAQ,WAAY,iBAAkB,OAAQ,QAAS,QAEjD2lB,QAAQ3lB,EAAK0wB,gBAAkB,CACnD,CAwB8B2iB,CAAUrqC,EAAEvD,SACtCuD,EAAEN,gBAEN,CAEO,SAAS82B,EAAiBxvB,EAAyBsjC,GAQxD,OAPArB,EAAejiC,EACfkiC,EAA0BoB,EAE1BpiB,SAAS7f,iBAAiB,QAAS3I,EAAgB,CAAE4I,SAAS,IAC9D4f,SAAS7f,iBAAiB,YAAa3I,EAAgB,CAAE4I,SAAS,IAClE4f,SAASqiB,UAAYJ,EAEdK,CACT,CAEO,SAASA,IACdvB,OAAe/0C,EACfg1C,OAA0Bh1C,EAC1Bg0B,SAAS3f,oBAAoB,QAAS7I,GACtCwoB,SAAS3f,oBAAoB,YAAa7I,GAE1CwoB,SAASqiB,UAAY,IACvB,C,qICjEO,SAASE,EAA8BC,GAC5C,MAAMpC,GAAcC,EAAAA,EAAAA,KAIpB,OAFAhrC,EAAAA,EAAAA,KAAU,KAAMotC,EAAAA,EAAAA,IAAsBD,EAAUpC,IAAc,CAACoC,EAAUpC,IAErEoC,IAAaE,EAAAA,KACRC,EAAAA,EAAAA,MAA2BC,EAAAA,KAEhCJ,IAAaK,EAAAA,KACRC,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,IAAcH,EAAAA,MAAgBp1B,QAAOzL,KAAMihC,EAAAA,EAAAA,IAAUjhC,MAE1EygC,IAAaS,EAAAA,KACRC,EAAAA,EAAAA,KAAYH,EAAAA,EAAAA,IAAcH,EAAAA,MAAgBp1B,QAAOzL,KAAMihC,EAAAA,EAAAA,IAAUjhC,OAGnEghC,EAAAA,EAAAA,IAAcP,EACvB,CAEO,SAASW,IACd,MAAM/C,GAAcC,EAAAA,EAAAA,KAIpB,OAFAhrC,EAAAA,EAAAA,KAAU,KAAM+tC,EAAAA,EAAAA,IAA0BhD,IAAc,CAACA,KAElDiD,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMlD,GAAcC,EAAAA,EAAAA,KAIpB,OAFAhrC,EAAAA,EAAAA,KAAU,KAAMkuC,EAAAA,EAAAA,IAAsBnD,IAAc,CAACA,KAE9CoD,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMrD,GAAcC,EAAAA,EAAAA,KAIpB,OAFAhrC,EAAAA,EAAAA,KAAU,KAAMquC,EAAAA,EAAAA,IAAiCtD,IAAc,CAACA,KAEzDuC,EAAAA,EAAAA,KACT,C,+LCtDA,QAAuB,WAAvB,EAAmM,WAAnM,EAAsQ,WCiBhQr9B,EAAgB,EAAIjY,EAAAA,EAuF1B,GAAepD,EAAAA,EAAAA,KAzEsC05C,EACnDz1C,WACAya,SACA2gB,UACAsa,oBACAp3C,QACAmpB,WACAwR,mBACAC,qBACAC,8BAGA,MAAM14B,GAAMC,EAAAA,EAAAA,IAAuB,MAC7BiQ,GAAclN,EAAAA,EAAAA,IAAgB,KACZ,SAAlBzD,EAASY,KAKbq4B,EAAiBj5B,GAJfk5B,KAIwB,KAGtB,kBACJrgB,EAAiB,wBACjBC,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBzY,EAAuB,SAAlBT,EAASY,UAAiB9C,OAAWA,OAAWA,GAAW,GAW3F,OATAqJ,EAAAA,EAAAA,KAAU,KACJ0R,IACFsgB,MAEAngB,IACAC,IACF,GACC,CAACD,EAAwBmgB,EAAyBlgB,EAAuBJ,IAG1E3a,EAAAA,GAAAC,cAAA,OACEhB,WAAWyB,EAAAA,EAAAA,GACTsF,EDzEmC,WC2EnCuW,GAA4B,SAAlBza,EAASY,MAAmBsD,GACrCwxC,GAAqBta,GD5E2F,WC6EjHsa,GD7EwD,YC+E1Dj1C,IAAKA,EACLnC,MAAOA,EACPhB,QAASqT,EACT+J,YAAa5B,EACb6B,cAAe5B,GAEI,SAAlB/Y,EAASY,KACR1C,EAAAA,GAAAC,cAAC4Y,EAAAA,EAAY,CACXhS,OAAQiS,EAAAA,EAAe2+B,aACvBn3C,KAAM4Y,EACNnS,QAAQ,IAGV/G,EAAAA,GAAAC,cAACmG,EAAAA,EAAW,CACV/C,WAAYvB,EAASuB,WACrB/C,KAAM4Y,IAGTqQ,GACCvpB,EAAAA,GAAAC,cAACC,EAAAA,EAAI,CAACjB,UAAW+G,EAAa7F,KAAK,eAEjC,I,qCCrFV,MAAM+Y,EAAgB,EAAIjY,EAAAA,EA2E1B,GAAepD,EAAAA,EAAAA,KAhEgC65C,EAC7C51C,WACAo7B,UACAsa,oBACAj7B,SACAgN,WACAwR,uBAEA,MAAM4c,GAAkBnzC,EAAAA,EAAAA,GAAU,UAAS1C,EAAS81C,iBAAiB10C,MAAOg6B,GAAWsa,GACjF3qC,GAAYrI,EAAAA,EAAAA,GAAU,WAAU1C,EAAS+1C,iBAAiB30C,MAAOg6B,GAAWsa,GAC5EM,GAAiBtzC,EAAAA,EAAAA,GAAU,WAAU1C,EAAS6K,YAAYzJ,MAAOs0C,IAChEhyC,EAAmBC,IAAuBE,EAAAA,EAAAA,MAE1CoyC,EAAY,CAAGC,IAAqBryC,EAAAA,EAAAA,IAAQ,IAC5CsyC,EAAaC,EAAUC,IAAcxyC,EAAAA,EAAAA,KAM5C,OACE3F,EAAAA,GAAAC,cAAA,OACEhB,WAAWyB,EAAAA,EAAAA,GAAesF,EAAauW,GAAUvW,GACjD5G,QAPJ,WACE27B,EAAiBj5B,EAASA,SAC5B,EAMIs2C,aAAclb,IAAY6a,EAAcG,OAAWt4C,GAElD43C,GACCx3C,EAAAA,GAAAC,cAAA,OACEhB,UFtD0O,WEuD1OgO,IAAK6qC,EACL3qC,IAAKrL,EAASA,SAAS4B,SACvB0J,WAAW,KAGb5H,IAAsBgyC,GACtBx3C,EAAAA,GAAAC,cAACwG,EAAAA,EAAe,CACdC,IAAK5E,EAAS81C,iBAAiB10C,GAC/B2D,OAAQ8wC,EACR7wC,KAAMixC,EACNhxC,QAAM,EACNzG,KAAM4Y,EACNjS,QAAS+wC,EACTxxC,aAAW,KAGbuxC,IAAgBP,GAChBx3C,EAAAA,GAAAC,cAACwG,EAAAA,EAAe,CACdC,IAAK5E,EAAS+1C,iBAAiB30C,GAC/B2D,OAAQgG,EACR/F,KAAMmxC,EACNlxC,QAAM,EACNzG,KAAM4Y,EACNlS,OAAQvB,EACRwB,QAASkxC,EACT3xC,aAAW,IAGd+iB,GACCvpB,EAAAA,GAAAC,cAACC,EAAAA,EAAI,CAACjB,UAAW+G,EAAa7F,KAAK,eAEjC,IC9BJk4C,GAAKC,EAAAA,EAAAA,GAAuB,oBAwLlC,GAAez6C,EAAAA,EAAAA,KApLwB0kC,EACrCC,wBACA9L,eACAC,sBACAI,mBACA0L,mBACAxL,iBACAH,YACAoG,UACA7D,wBACAp6B,YACAue,uBACA8b,oBACAif,kBACAC,eACAC,kBACAzhB,qBACAxlB,UACAupB,mBACAC,qBACAC,0BACAyH,iBAEA,MAAM,iBAAE3kB,IAAqBzb,EAAAA,EAAAA,MAEvBC,GAAMC,EAAAA,EAAAA,IAAuB,MAC7BlD,GAAOC,EAAAA,EAAAA,KAEPm5C,EAAqBpf,IAAsB9b,IAAyB+6B,EAEpEI,EAA4B9zC,QAAQoyB,GACrCwL,GAAoBA,EAAiBx+B,QAAUgzB,GAE9Ct1B,GAAqBiB,EAAAA,EAAAA,KAAQ,KACjC,MAAMtB,EACAq3C,EAAkClW,GAAkBvwB,KAAKpQ,GAAaA,EAASA,WAC/E02C,EAAqBC,EACrBnf,EAA0B3C,EACC,SAA3BI,GAAkBr0B,KAAwBq0B,EAAiB6hB,QACxDpW,GAAuBtwB,KAAKpQ,GAAaA,EAASA,WAGrD+2C,EAAyCv3C,GAAW4Q,KAAKpQ,IAC7D,MAAMg3C,EAAqC,WAAlBh3C,EAASY,KAC5BC,EAAoB6/B,GAAuB3/B,MAAMC,IAAMC,EAAAA,EAAAA,IAAeD,EAAEhB,SAAUA,KAExF,OAAI02C,EAAqB71C,GAEnBm2C,GAAqBn2C,KAAsBA,GAAmBo2C,aAE/DjiB,GAAc6hB,GACX5hB,IAAqBiiB,EAAAA,EAAAA,IAAgBl3C,EAAUi1B,IAIhD+hB,EAAmBh3C,EAAWa,OAPrC,CAOsD,IACrDye,OAAOvc,UAAY,GAEhBo0C,GAAkBC,EAAAA,EAAAA,IAAcL,EAAmBniB,GAIzD,OAHIM,GACFiiB,EAAgBxE,QAAQ,CAAE/xC,KAAM,SAE3Bu2C,CAAe,GACrB,CACDzW,EAAuBC,EAAkB9L,EAAqBI,EAAkBuC,EAAmBxC,EACnGJ,EAAc8hB,EAAcC,EAAiBE,EAA2B3hB,IAGpEmiB,GAAoBv2C,EAAAA,EAAAA,KAAQ,IAEKw2C,IAA9Bz3C,EAAmBsC,OACtBtC,EACAA,EAAmBsQ,MAAM,EA3ER,IA4EpB,CAACtQ,IACE03C,EAAiBF,EAAkBl1C,OAAStC,EAAmBsC,OAE/Dq1C,GAAsB12C,EAAAA,EAAAA,KAAQ,KAClC,MAAM22C,EAAkB9W,GAAkBrhB,QAAO,EAAGo4B,sBAAkC55C,IAAhB45C,KAA8B,GACpG,OAAO,IAAInyB,IAAIkyB,EAAgBrnC,KAAI,EAAGpQ,cACpCq3C,EAAkBM,WAAW32C,GAAMA,IAAKC,EAAAA,EAAAA,IAAe,aAAcD,EAAIA,EAAEhB,SAAWgB,EAAGhB,OACxF,GACF,CAAC2gC,EAAkB0W,IAEhBO,GAAsBn0C,EAAAA,EAAAA,IAAgB,KAC1C,MAAMo0C,EAAQp3C,EAAIsF,SAASgL,yBAA2B,CAAEC,EAAG,EAAGE,EAAG,GACjE0vB,EAAW,CACT5vB,EAAG6mC,EAAM7mC,EACTE,EAAG2mC,EAAM3mC,GACT,IAGE4mC,GAAyBr0C,EAAAA,EAAAA,IAAgB,KAC7CiM,MACAuM,EAAiB,CACfuB,eAAgB,cAChB,IAGEu6B,GAAWj3C,EAAAA,EAAAA,KAAQ,KACvB,GAAI02B,EAAmB,CACrB,IAAK9b,EAAsB,CACzB,MACMs8B,EADOx6C,EAAK,2BACCy6C,MAAM,UACzB,OACE/5C,EAAAA,GAAAC,cAAA,YACG65C,EAAM,GACP95C,EAAAA,GAAAC,cAAC+5C,EAAAA,EAAI,CAACrsC,WAAS,EAACvO,QAASw6C,GACtBt6C,EAAK,2BAEPw6C,EAAM,GAGb,CAEA,OAAOx6C,EAAK,yBACd,CAEA,OAAIi5C,EACKj5C,EAAK,sBAGVk5C,EACKl5C,EAAK,6BADd,CAIgB,GACf,CAACke,EAAsB8b,EAAmBif,EAAiBj5C,EAAMk5C,IAEpE,GAAKW,EAAkBl1C,OAEvB,OACEjE,EAAAA,GAAAC,cAAA,OAAKhB,WAAWyB,EAAAA,EAAAA,GAAe23C,EAAG,KAAMp5C,GAAYsD,IAAKA,GACvDvC,EAAAA,GAAAC,cAAA,OAAKhB,UAAWo5C,EAAG,eAAgB/4C,EAAKyB,OAAS,WACjDf,EAAAA,GAAAC,cAAA,OAAKhB,UAAWo5C,EAAG,kBACjBr4C,EAAAA,GAAAC,cAAA,OAAKhB,UAAWo5C,EAAG,aAAc/4C,EAAKyB,OAAS,WAC/Cf,EAAAA,GAAAC,cAAA,OAAKhB,UAAWo5C,EAAG,UAChBwB,GAAY75C,EAAAA,GAAAC,cAAA,OAAKhB,UAAWo5C,EAAG,SAAUwB,GAC1C75C,EAAAA,GAAAC,cAAA,OAAKhB,UAAWo5C,EAAG,aAAcv3C,IAAKxB,EAAKyB,MAAQ,WAAQnB,GACxDu5C,EAAkBjnC,KAAI,CAACpQ,EAAU6T,IAChC,aAAc7T,EACZ9B,EAAAA,GAAAC,cAACy3C,EAAwB,CACvBhxC,KAAKmY,EAAAA,EAAAA,IAAe/c,EAASA,UAC7Bo7B,QAASA,EACTnC,iBAAkBA,EAClBj5B,SAAUA,EACV01C,mBAAoBne,EACpB9c,OAAQ+8B,EAAoB9xB,IAAI7R,GAChC4T,SAAUmvB,IAGZ14C,EAAAA,GAAAC,cAACs3C,EAA8B,CAC7B7wC,KAAKmY,EAAAA,EAAAA,IAAe/c,GACpBo7B,QAASA,EACTnC,iBAAkBA,EAClBC,mBAAoBA,EACpBC,wBAAyBA,EACzBn5B,SAAUA,EACV01C,mBAAoBne,EACpB9c,OAAQ+8B,EAAoB9xB,IAAI7R,GAChC4T,SAAUmvB,EACVt4C,MAAQ,uBAlKJ,IADG,EAmK2CuV,WAIvD0jC,GACCr5C,EAAAA,GAAAC,cAAC6L,EAAAA,EAAM,CACLmuC,MAAM,cACNh7C,UAAWo5C,EAAG,aACdj5C,QAASs6C,GAET15C,EAAAA,GAAAC,cAACC,EAAAA,EAAI,CAACC,KAAK,aAMjB,G,8FCjOV,MAAM+5C,EAAsB,IACtBC,EAAyBC,EAAAA,IACzBC,EAAe,GAEN,SAASC,GAAgB,WACtCC,EAAU,OACV9gC,EAAM,UACN+gC,EAAS,eACTC,EAAc,iBACdC,EAAgB,oBAChBC,EAAmB,YACnBC,EAAW,QACXC,EAAO,qBACPC,IAYA,MAAMC,GAAiBv4C,EAAAA,EAAAA,KAAQo4C,IAE/BI,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAAcF,EAAelzC,QAGnC,GAFAkzC,EAAelzC,SAAU,EAErB2yC,GAAaD,EAAW1yC,QAAS,CACnC,MAAMqzC,EAAoBX,EAAW1yC,QAAQO,QAAwB,gBAE/D+yC,EAAaT,EACbU,EAAiBN,GAAwBK,EAAa,MAAQ,cAE9DE,EAAOA,KACX,MAAMC,OAAiC17C,IAAnB66C,EACfU,EAAajB,EAAsBC,OAA0Bv6C,EAE5DoxB,GAASuqB,EAAAA,EAAAA,IAAc,CAC3BrzC,UAAWgzC,EACXhvC,QAASquC,EAAW1yC,QACpBu6B,SAAUgZ,EACVI,OAAQnB,EACRiB,cACAG,eAAgBhB,EAChBiB,2BAA4Bf,EAC5BgB,wBAAwB,IAG1B,GAAId,EAAS,CACX,MAAMe,EAAarB,EAAW1yC,QAASq5B,cAA+B,aAClE0a,IACF5wC,EAAAA,EAAAA,KAAgB,MACd6wC,EAAAA,EAAAA,IAAcD,EAAY,UAAU,GAG1C,CAEA,OAAO5qB,CAAM,EAGXiqB,GAEFa,EAAAA,EAAAA,IAAoBT,IAEpB95B,EAAAA,EAAAA,KAAe,MACbvW,EAAAA,EAAAA,IAAgBqwC,IAAQ,GAG9B,IACC,CACDd,EAAY9gC,EAAQ+gC,EAAWC,EAAgBC,EAAkBC,EAAqBE,EAASC,GAEnG,C,sTC/CA,SAAej9C,EAAAA,EAAAA,KAzBf,SAAiCsR,GAC/B,MAAM,QACJ4/B,EAAO,OAAEgN,EAAM,aAAEC,KAAiBnuB,GAChC1e,EAEEmD,EAAey8B,GAASkN,WAAWz7B,QACnC07B,EAAiBnN,IAAWh6B,EAAAA,EAAAA,IAAoBg6B,EAAS,QACzDoN,GAAiB33C,EAAAA,EAAAA,GACrBuqC,GAAUh6B,EAAAA,EAAAA,IAAoBg6B,EAAS,gBAAanvC,EACpDm8C,IAAWC,EACX5c,EAAAA,GAAeC,SAEXx4B,GAASrC,EAAAA,EAAAA,GAAS03C,EAAgBH,GAExC,OACE/7C,EAAAA,GAAAC,cAACm8C,EAAAA,EAAuBh6B,EAAA,CACtBvb,OAAQA,EACRmO,WAAYmnC,EACZ7pC,aAAcA,GAEVub,GAGV,G,wEClCA,MAAMwuB,EAAyB,IACzBC,EAAuB,IAEd,SAASC,EACtBC,EACAC,GAA2B,EAC3BC,EACAC,GAGA,MAAM5+C,GAAS4gB,EAAAA,EAAAA,MAEf,OAAOi+B,EAAAA,EAAAA,IAAQJ,GAAUt5C,IACvB,GAAIA,IAAOy5C,EACT,OAAOE,IAGT,MAAMn9C,GAAOskC,EAAAA,EAAAA,KAAWjmC,EAAQmF,GAChC,IAAKxD,EACH,OAAO,EAGT,IAAIo9C,EAAW,EAEf,MAAMC,GAAcC,EAAAA,EAAAA,KAAsBj/C,EAAQmF,GAalD,OAZI65C,IACFD,GAAYC,EAAY/sC,MAGtBysC,GAA4B/8C,EAAKu9C,aACnCH,GAAYT,GAGVK,GAAeA,EAAYv0B,SAASjlB,KACtC45C,EAAW1sC,KAAKC,MAAQisC,GAAwBI,EAAYz4C,OAASy4C,EAAYr0B,QAAQnlB,KAGpF45C,CAAQ,GACd,OACL,C,2FCtCO,MAAMI,EAAmE,CAC9EC,EAAG54B,EAAAA,GAAsBuP,KACzBspB,OAAQ74B,EAAAA,GAAsBuP,KAC9BupB,EAAG94B,EAAAA,GAAsBwP,OACzBupB,GAAI/4B,EAAAA,GAAsBwP,OAC1BwpB,IAAKh5B,EAAAA,GAAsByP,UAC3BwpB,EAAGj5B,EAAAA,GAAsByP,UACzBypB,EAAGl5B,EAAAA,GAAsB0P,OACzBypB,OAAQn5B,EAAAA,GAAsB0P,OAC9B0pB,IAAKp5B,EAAAA,GAAsB0P,OAC3B2pB,KAAMr5B,EAAAA,GAAsBs5B,KAC5BC,IAAKv5B,EAAAA,GAAsBw5B,IAC3BC,WAAYz5B,EAAAA,GAAsB05B,YAG9BC,EAAmB,EAEV,SAAS5oB,EACtBlB,EAAc+pB,GAAoB,EAAOC,GAAe,GAExD,MAAMC,EAAWzqB,SAAS3zB,cAAc,OACxCo+C,EAASnpB,UAAYkpB,EAAehqB,EAmDtC,SAAuBA,GACrB,IAAIkqB,EAAalqB,EAAKniB,MAAM,GAsD5B,OAnDAqsC,EAAaA,EAAWjrB,QAAQ,UAAW,KAG3CirB,EAAaA,EAAWjrB,QAAQ,4BAA6B,MAE7DirB,EAAaA,EAAWjrB,QAAQ,gBAAiB,MAGjDirB,EAAaA,EAAWjrB,QAAQ,qBAAsB,MACtDirB,EAAaA,EAAWjrB,QAAQ,SAAU,MAC1CirB,EAAaA,EAAWjrB,QAAQ,WAAY,IAG5CirB,EAAaA,EAAWjrB,QAAQ,sCAAuC,oCACvEirB,EAAaA,EAAWjrB,QAAQ,kCAAmC,iBACnEirB,EAAaA,EAAWjrB,QAAQ,uBAAwB,iBAGxDirB,EAAaA,EAAWjrB,QACtB,wEACA,mBAIGkrB,EAAAA,KAEHD,EAAaA,EAAWjrB,QAAQ,oCAAqC,SAEvEirB,EAAaA,EAAWjrB,QACtB,0FACA,wCAIFirB,EAAaA,EAAWjrB,QACtB,wEACA,aAEFirB,EAAaA,EAAWjrB,QACtB,wEACA,aAEFirB,EAAaA,EAAWjrB,QACtB,wEACA,aAEFirB,EAAaA,EAAWjrB,QACtB,wEACC,2BAA0B9O,EAAAA,GAAsBC,sBAG5C85B,CACT,CA1G0BE,CAApBL,EA4GN,SAA4B/pB,GAC1B,OAAOA,EAAKf,QAAQ,IAAIorB,OAAQ,qBAAoBC,EAAAA,YAA0B,MAAM,CAACC,EAAG7hC,EAAM8hC,IAEpF,YADIA,EAAKz2B,SAAS,OAASy2B,EAAOA,EAAKz2B,SAAS,KAAQ,UAASy2B,IAAU,WAAUA,QAClE9hC,SAE/B,CAjHwC+hC,CAAmBzqB,GAAuBA,GAChF0qB,EAAgBT,GAChB,MAAMvhC,EAAOuhC,EAASU,UAAUpS,OAAOtZ,QAAQ,WAAY,IAE3D,IAAI2rB,GADcX,EAASU,UAAU12B,QAAQvL,EAAK,IAE9CmiC,EAAoB,EACxB,MAAMv7B,EAA+B,GAErC,SAASw7B,EAAUC,GACjB,GAAIA,EAAK1qB,WAAaC,KAAK0qB,aAAc,OACzC,MAAM,MAAEC,EAAK,OAAEjqB,GAyGnB,SACE+pB,EACAG,EACAN,GAEA,MAAMt8C,EA6FR,SAA+By8C,GAC7B,GAAIA,aAAgBrJ,aAAeqJ,EAAKhzB,QAAQ6I,WAC9C,OAAOmqB,EAAKhzB,QAAQ6I,WAGtB,GAAIkoB,EAA0BiC,EAAKI,UACjC,OAAOrC,EAA0BiC,EAAKI,UAGxC,GAAsB,MAAlBJ,EAAKI,SAAkB,CACzB,MAAMroB,EAASioB,EACf,OAAIjoB,EAAO/K,QAAQ6I,aAAezQ,EAAAA,GAAsBi7B,YAC/Cj7B,EAAAA,GAAsBi7B,YAE3BtoB,EAAO/K,QAAQ6I,aAAezQ,EAAAA,GAAsBk7B,IAC/Cl7B,EAAAA,GAAsBk7B,IAE3BvoB,EAAOiH,KAAK+T,WAAW,WAClB3tB,EAAAA,GAAsBm7B,MAE3BxoB,EAAOiH,KAAK+T,WAAW,QAClB3tB,EAAAA,GAAsBo7B,MAE3BzoB,EAAOiH,OAASjH,EAAO0oB,YAClBr7B,EAAAA,GAAsBs7B,QAGxBt7B,EAAAA,GAAsBk7B,GAC/B,CAEA,MAAsB,SAAlBN,EAAKI,SACCJ,EAAqBhzB,QAAQ6I,WAGjB,QAAlBmqB,EAAKI,UACFJ,EAA0BhzB,QAAQ9oB,WAC9BkhB,EAAAA,GAAsBne,iBAFjC,CAOF,CAtIe05C,CAAsBX,GAEnC,IAAKz8C,IAASy8C,EAAKS,YACjB,MAAO,CACLP,MAAOL,EACP5pB,YAAQx1B,GAIZ,MAAMmgD,EAAWT,EAAQj3B,QAAQ82B,EAAKS,YAAaZ,GAG7CK,EAAQU,GAAY,EAAIA,EAAWf,EACnCljC,EAASwjC,EAAQU,UAAU,EAAGX,GAAOp7C,QACrC,OAAEA,GAAWq7C,EAAQU,UAAUX,EAAOA,EAAQF,EAAKS,YAAY37C,QAErE,GAAIvB,IAAS6hB,EAAAA,GAAsBs7B,QACjC,MAAO,CACLR,QACAjqB,OAAQ,CACN1yB,OACAoZ,SACA7X,SACAsuC,IAAM4M,EAA2BhhB,OAIvC,GAAIz7B,IAAS6hB,EAAAA,GAAsBi7B,YACjC,MAAO,CACLH,QACAjqB,OAAQ,CACN1yB,OACAoZ,SACA7X,SACAg8C,OAASd,EAA2BhzB,QAAQ8zB,SAKlD,GAAIv9C,IAAS6hB,EAAAA,GAAsBw5B,IACjC,MAAO,CACLsB,QACAjqB,OAAQ,CACN1yB,OACAoZ,SACA7X,SACAi8C,SAAWf,EAAwBhzB,QAAQ+zB,WAKjD,GAAIx9C,IAAS6hB,EAAAA,GAAsBne,YACjC,MAAO,CACLi5C,QACAjqB,OAAQ,CACN1yB,OACAoZ,SACA7X,SACAZ,WAAa87C,EAA0BhzB,QAAQ9oB,aAKrD,GAAIX,IAAS6hB,EAAAA,GAAsB47B,UAAW,CAC5C,MAAMC,EAAY3kC,OAAQ0jC,EAAqBhzB,QAAQi0B,WACvD,OAAI3kC,OAAO4kC,MAAMD,GACR,CACLf,QACAjqB,YAAQx1B,GAIL,CACLy/C,QACAjqB,OAAQ,CACN1yB,OACAoZ,SACA7X,SACAm8C,aAGN,CAEA,MAAO,CACLf,QACAjqB,OAAQ,CACN1yB,OACAoZ,SACA7X,UAGN,CAzM8Bq8C,CAAsBnB,EAAMriC,EAAMkiC,GAE5D,GAAI5pB,EACF4pB,EAAYK,EACZ37B,EAAS1N,KAAKof,QACT,GAAI+pB,EAAKS,YAAa,CAE3B,GAAc,IAAVP,GAA2C,KAA5BF,EAAKS,YAAYjT,OAClC,OAEFqS,GAAaG,EAAKS,YAAY37C,MAChC,CAEIk7C,EAAKoB,iBAAmBtB,GAAqBf,IAC/Ce,GAAqB,EACrBl6B,MAAM6mB,KAAKuT,EAAKqB,YAAYhqC,QAAQ0oC,GAExC,CAOA,OALAn6B,MAAM6mB,KAAKyS,EAASmC,YAAYhqC,SAAS2oC,IACvCF,EAAoB,EACpBC,EAAUC,EAAK,IAGV,CACLriC,OACA4G,SAAUA,EAASzf,OAASyf,OAAW9jB,EAE3C,CAEO,SAASk/C,EAAgBT,GAC9BA,EAASoC,iBAAiB,OAAOjqC,SAAS2oC,IACpCA,EAAKhzB,QAAQ9oB,WACf87C,EAAKS,YAAeT,EAA0BhyC,KAAO,GAErDgyC,EAAKuB,YAAYvB,EAAKhyC,KAAO,GAC/B,GAEJ,C,kDC1EA,MAAMwnB,EAAe,EAEN,SAASgM,IACtB,MAAM3B,EAAY7X,OAAO8X,eACzB,IAAI0hB,EAAoB3hB,GAAWmN,WAAanN,EAAUoN,WAAW,GAAG9X,qBAAkB10B,EAE1F,MAAMghD,EAA2B5hB,GAAW6hB,WAAa7hB,EAAU8hB,YAAc,GAC5EC,EAAuB/hB,EAAU6hB,UAAWG,EAAAA,KACjD,IAAKL,GAA6D,IAAxCA,EAAkBM,kBAC1C,OAGF,MAAMvgB,EAAa3b,MAAM6mB,KAAK+U,EAAkBO,UAC7C1iC,QAAO,CAACwS,EAAQmuB,IACXA,EAAK1qB,WAAaE,GAAgBwqB,EAAKvqB,UAAUvoB,SAAS,sBACrD0Y,MAAM6mB,KAAKuT,EAAKsB,iBAAiB,aACrCjiC,QAAO,CAACC,EAAK0iC,IAAc1iC,EAAIsJ,OAAOtM,OAAQ0lC,EAA0Bh1B,QAAQzS,aAAasX,GACvFmuB,EAAK1qB,WAAaE,GAAgBwqB,EAAKvqB,UAAUvoB,SAAS,WAC5D2kB,EAAOjJ,OAAOtM,OAAQ0jC,EAAqBhzB,QAAQzS,YAGrDsX,GACN,IAGL,KAAO2vB,EAAkBS,YACvBT,EAAkBU,YAAYV,EAAkBS,YAQlD,OANAT,OAAoB/gD,EAEfghD,GACHlgB,EAAW4gB,MAGN5gB,CACT,CAEA,SAASqgB,EAAuB70C,EAAejN,GAC7C,QAAIiN,EAAQuoB,WAAaE,IAAiBzoB,EAAwB0oB,UAAUvoB,SAASpN,OAI9EiN,EAAQwzB,YAAaqhB,EAAuB70C,EAAQwzB,WAAYzgC,EACzE,C,4DC5CA,MC6BA,EAjBoBsiD,EAClBL,WACAjiD,YACAG,UACAod,iBAGExc,EAAAA,GAAAC,cAAA,OACEhB,WAAWyB,EAAAA,EAAAA,GDpBM,WCoBsBtB,GDpBC,WCoB4BH,GACpEG,QAASA,EACTod,YAAaA,GAEZ0kC,E,sKCKP,IACIM,EACAC,EAFAC,GAAc,EAIH,SAASnG,EAAcoG,GACpCH,EAAcG,EACd,MAAMC,EAASC,EAAqBF,GAEpC,GAAIA,EAAKhG,uBACP,OAAOiG,GAGT52C,EAAAA,EAAAA,IAAgB42C,EAElB,CAEO,SAASE,IACTJ,KAILK,EAAAA,EAAAA,OAEAxgC,EAAAA,EAAAA,KAAe,MACbvW,EAAAA,EAAAA,IAAgB62C,EAAqBL,GAAc,IAEvD,CAEA,SAASK,EAAqBF,GAC5B,MAAM,UACJz5C,EAAS,QACTgE,EAAO,SACPk2B,EAAQ,OACRoZ,EAAS,EAAC,YACVF,EAAclB,EAAAA,IAAmB,eACjCqB,EAAc,2BACdC,GACEiG,EAEJ,IAAIK,EAAgBL,EAAKK,cAGvBvG,IAAmBwG,EAAAA,GAAeC,SAC9Bn2B,EAAAA,EAAAA,MAA0BpN,EAAAA,EAAAA,SAE9BqjC,EAAgB,GAGlB,MAAQz5C,aAAc45C,GAAkBj2C,GAChCzD,UAAW25C,EAAkB75C,aAAc85C,EAAe,aAAE75C,GAAiBN,EAC/Eo6C,GAAar2C,EAAAA,EAAAA,GAAqBC,EAAShE,GAAWqE,IAEtDg2C,EAAwB7G,GAA8BxzC,EAAUikB,QAAQq2B,aAC1E/mC,OAAOvT,EAAUikB,QAAQq2B,cACzBH,EAEJ,IAAII,EACJ,OAAQrgB,GACN,IAAK,QACHqgB,EAAYH,EAAa9G,GAAW5jC,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACH6qC,EAAYH,EAAaH,EAAgB3G,EAAU+G,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAWN,EAAgBI,EACtBD,EAAaH,EAAgB,EAAII,EAAwB,EACzDD,EAAa9G,EAItB,MAAMkH,EAwER,SACEx6C,EACAu6C,EACAnH,EAAclB,EAAAA,IACdqB,GAEA,MAAM,UAAEhzC,GAAcP,EAEtB,QAAuBtI,IAAnB67C,EAA8B,CAChC,MAAM3/B,EAAS2mC,EAAWh6C,EAE1B,GAAIqT,GAAUw/B,EACZ,OAAO7yC,GAAaqT,EAASw/B,GACxB,GAAIx/B,EAASw/B,EAClB,OAAO7yC,GAAaqT,EAASw/B,EAEjC,KAAO,IAAIG,IAAmBwG,EAAAA,GAAejN,GAC3C,OAAOyN,EAAWnH,EACb,GAAIG,IAAmBwG,EAAAA,GAAenN,KAC3C,OAAOhxC,KAAKwD,IAAI,EAAGm7C,EAAWnH,EAChC,CAEA,OAAO7yC,CACT,CA/FqBk6C,CAAoBz6C,EAAWu6C,EAAUnH,EAAaG,GAEzE,IAAIpvB,EAAOo2B,EAAWC,EACtB,GAAIr2B,EAAO,EAAG,CACZ,MAAMC,GAAiBo2B,EACvBr2B,EAAOvoB,KAAKwD,IAAI+kB,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgB9jB,GAAgBk6C,EAAaH,GACnDl2B,EAAOvoB,KAAK4K,IAAI2d,EAAMC,EACxB,CAEA,MAAMs2B,EAAU9+C,KAAK++C,IAAIx2B,GAEzB,MAAO,KACL,GAAIu2B,EAAU,EAKZ,YAJIR,IAAqBM,IACvBx6C,EAAUO,UAAYi6C,IAM1B,MAAMv6C,EAASu6C,EAAar2B,EAE5B,GAAsB,IAAlB21B,EAEF,YADA95C,EAAUO,UAAYN,GAIxB,MAAM8kB,EAAa21B,GAAWE,EAAAA,IAAuCC,EAAkBC,EACjFjnC,EAAWimC,GACfiB,EAAAA,IACGL,EAAUxI,EAAAA,KAAwB8I,EAAAA,IAAsBD,EAAAA,KAEvDr2B,EAAUxc,KAAKC,MAErBqxC,GAAc,EAEd,MAAMyB,EAA0B1B,EAChCA,GAAsBp5C,EAAAA,EAAAA,SAAoBzI,GAAW,GACrDujD,OAEAC,EAAAA,EAAAA,KAAc,KACZ,MAAMr2B,EAAIjpB,KAAK4K,KAAK0B,KAAKC,MAAQuc,GAAW7Q,EAAU,GAChDiR,EAAcX,GAAQ,EAAIY,EAAWF,IACrCs2B,EAAev/C,KAAK4E,MAAMP,EAAS6kB,GAazC,OAXA9kB,EAAUO,UAAY46C,EAEtB3B,EAAc30B,EAAI,GAAKs2B,IAAiBl7C,EAEnCu5C,IACHF,OAAc5hD,EAEd6hD,MACAA,OAAsB7hD,GAGjB8hD,CAAW,GACjB12C,EAAAA,GAAgB,CAEvB,CAEO,SAAS/C,IACd,OAAOy5C,CACT,CAEO,SAAS4B,IACd7B,IACAA,OAAsB7hD,CACxB,CA2BA,SAASmjD,EAAgBh2B,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAASi2B,EAAej2B,GACtB,OAAO,GAAM,EAAIA,IAAM,CACzB,C,mHC9MA,QAA6C,WCgF7C,GAAelvB,EAAAA,EAAAA,KAvDyBuJ,EACtCtF,WACAyhD,WACAtkD,YACAoI,eACAJ,cAEA,MAAMu8C,GAAcn/C,EAAAA,EAAAA,IAAmBvC,EAASuB,YAAY,GAEtDogD,GAAmBj/C,EAAAA,EAAAA,GAAU++C,OAAyB3jD,EAAd4jD,GAExCE,GAAkB9gD,EAAAA,EAAAA,KAAQ,IACzB+gD,EAAAA,GACE5+B,MAAM6mB,KAAK,CAAE3nC,OAfF,IAe2BiO,KAAI,IA4CrD,SAAgC7K,EAAe,IAC7C,MAAMyL,GAAKzL,EAAe,EAAIvD,KAAKE,SAAWqD,EAAe,IAAMvD,KAAKE,SAAW,GAAM,GAAK,GACxFgP,EAAI3L,EAAevD,KAAKE,SAAWqD,EAAe,EAExD,MAAQ,eAAcyL,MAAME,EAAI3L,KAAgByL,KAAKE,GACvD,CAjD2D4wC,CAAuBv8C,KADxC,IAErC,CAACA,IAEJ,GAAKo8C,GAAqBF,EAI1B,OACEvjD,EAAAA,GAAAC,cAAA,OACEhB,WAAWyB,EAAAA,EAAAA,GD/CM,WC+CsBzB,GACvCmB,OAAO0O,EAAAA,EAAAA,GAAWjK,QAAQwC,IAAkB,oBAAmBA,QAE9Dq8C,EAAMxxC,KAAI,CAACma,EAAM1W,KAChB,MAAMvV,EAAS,wBAAuBisB,OACtC,OAAIk3B,EAEAvjD,EAAAA,GAAAC,cAACmG,EAAAA,EAAW,CACV/C,WAAYvB,EAASuB,WACrBpE,UAAW+G,EACX5F,MAAOA,EACPyjD,qBAAmB,EACnBvjD,KAAM+G,EACNy8C,eAAsB,IAANnuC,EAAU1O,OAAUrH,IAMxCI,EAAAA,GAAAC,cAAA,OACEgN,IAAKw2C,EACLt2C,IAAI,GACJlO,UAAW+G,EACX5F,MAAOA,EACPgN,WAAW,EACX02C,eAAsB,IAANnuC,EAAU1O,OAAUrH,GACpC,IAGF,G,oECzEH,MAAMmkD,EAAuB,2EAEvBC,EAAS,CACpB,2CACA,mDAOW5yB,EAAwB5B,UACnC,IAAIy0B,QAAcC,EAAAA,EAAAA,IAAUC,EAAAA,GAAMJ,EAAsBC,EAAOzxB,KAAK,MAIpE,GAHK0xB,IACHA,QAAcC,EAAAA,EAAAA,IAAUC,EAAAA,GAAMJ,EAAsBC,EAAOzxB,KAAK,OAE9D0xB,EAAMG,WAAW3sC,MAAO,CAC1B,MAAM4sC,EAAeJ,EAAMK,YAAY7sC,MAAM8sC,kBAC7C,QAZoCC,KACtC,MAAMC,EAAcD,EAAOzK,MAAM,KAEjC,OADqBiK,EAAO5c,OAAOsd,GAAUD,EAAYt8B,SAASu8B,IAC/C,EASbC,CAAwBN,EAAaK,QAChCL,EAAaO,YAIxB,CACA,OAAO,CAAK,EAIPp1B,eAAemC,IACpB,MAAMsyB,QAAcC,EAAAA,EAAAA,IAAUC,EAAAA,GAAMJ,EAAsBC,EAAOzxB,KAAK,MAEtE,GAAK0xB,EAAMG,WAAW3sC,MAapB,OADA6X,QAAQC,IAAI,UACL,CACLs1B,QAASZ,EAAMK,YAAY7sC,MAAMqtC,kBACjC3zB,YAAa8yB,EAAMK,YAAY7sC,MAAM8sC,kBAAkBK,cAf9B,CAC3B,MAAMxmD,QAAa6lD,EAAMc,SACnBF,EAAUzmD,EAAK0mD,kBACf3zB,EAAc/yB,EAAKmmD,kBAAkBK,aAO3C,OALAt1B,QAAQC,IAAI,UACZD,QAAQC,IAAI,UAAWs1B,EAAQG,WAC/B11B,QAAQC,IAAI,SAAUs1B,EAAQI,YAC9B31B,QAAQC,IAAI,kBAAmB4B,GAExB,CAAE0zB,UAAS1zB,cACpB,CAOF,CAQChK,OAAe+9B,cAPa11B,UAC3B,MAAMy0B,QAAcC,EAAAA,EAAAA,IAAUC,EAAAA,GAAMJ,EAAsBC,EAAOzxB,KAAK,MAClE0xB,EAAMG,WAAW3sC,OACnBwsC,EAAMkB,SACR,EAcK,MAAMvzB,EAAmBA,EAC9BC,YACAC,UACAC,mBAAmBvB,KAAKC,iBAAiBC,kBAAkBH,SAC3DyB,SAAS,GACTC,iBAQO,IAAI1F,SAAQ,CAACC,EAASsD,KAC3B,MAAMuC,EAAYL,EAAO9f,KAAK8c,IACrB,CACLA,YAGE7jB,EAAQ,CACZinB,QAAS,qBACTvD,MAAO,CAAE0E,SAAU,IAAInjB,KAAKyhB,GAAYtB,SAAUwB,GAClDyB,IAAK,CAAED,SAAU,IAAInjB,KAAK0hB,GAAUvB,SAAUwB,GAC9CM,YACA+yB,UAAW,CACTC,YAAY,EACZC,UAAW,CACT,CAAEt1B,OAAQ,QAASu1B,QAAS,IAC5B,CAAEv1B,OAAQ,QAASu1B,QAAS,MAGhCC,eAAgB,CACdC,cAAe,CACbC,UAAY,QAAOt1C,KAAKC,QACxBs1C,sBAAuB,CAAEjjD,KAAM,mBAIrCqtB,MAAM,+IAAgJ,CACpJC,OAAQ,OACRC,QAAS,CACP21B,cAAgB,UAAS3zB,KAE3B/B,KAAMC,KAAKC,UAAUjlB,KACpB+J,MAAMm5B,GAAaA,EAASzd,SAAQ1b,MAAMyb,IAC3CnE,EAAQmE,EAAI,IACXM,OAAOC,IACRpB,EAAOoB,EAAI,GACX,G,4HCtGC,SAAS20B,EACd9nD,EAAW+nD,GAEX,GAA0B,SAAtBA,EAAapjD,KAAiB,OAAOojD,EAEzC,GAA0B,aAAtBA,EAAapjD,KAAqB,CACpC,MAAM,OACJ1E,EAAM,eAAE+nD,EAAc,OAAEC,EAAM,QAAE7oC,EAAO,cAAE8oC,GACvCH,EACE5nD,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQC,GAEhC,IAAKE,EAAM,OAEX,MAAO,CACLwE,KAAM,WACNxE,OACA6nD,iBACAC,SACA7oC,UACA8oC,gBAEJ,CAEA,GAA0B,cAAtBH,EAAapjD,KAAsB,CACrC,MAAM,OACJu9C,EAAM,MAAE7mC,EAAK,OAAE8B,EAAM,SAAEgrC,GACrBJ,EACE1nD,GAAOC,EAAAA,EAAAA,KAAWN,EAAQkiD,GAEhC,IAAK7hD,EAAM,OAEX,MAAO,CACLsE,KAAM,QACNyjD,QAAS,CACPzjD,KAAM,YACNtE,OACAgb,QACA8B,SACAgrC,YAGN,CAEA,GAA0B,UAAtBJ,EAAapjD,KAAkB,CACjC,MAAM,MACJ0W,EAAK,OAAE8B,EAAM,SAAEgrC,GACbJ,EAEJ,MAAO,CACLpjD,KAAM,QACNyjD,QAAS,CACPzjD,KAAM,QACN0W,QACA8B,SACAgrC,YAGN,CAEA,GAA0B,2BAAtBJ,EAAapjD,KAAmC,CAClD,MAAM,KAAE0jD,GAASN,EAEjB,MAAO,CACLpjD,KAAM,yBACN0jD,OAEJ,CAEA,GAA0B,YAAtBN,EAAapjD,KAAoB,CACnC,MAAMhD,GAAOskC,EAAAA,EAAAA,KAAWjmC,EAAQ+nD,EAAarsC,QAC7C,IAAK/Z,EACH,OAEF,MAAO,CACLgD,KAAM,UACNhD,OACAga,UAAWosC,EAAapsC,UAE5B,CAEA,GAA0B,qBAAtBosC,EAAapjD,KAA6B,CAC5C,MAAM,OACJ2jD,EAAM,OAAEpG,EAAM,QAAE9iC,GACd2oC,EACE1nD,GAAOC,EAAAA,EAAAA,KAAWN,EAAQkiD,GAEhC,IAAK7hD,EAAM,OAEX,MAAO,CACLsE,KAAM,mBACN2jD,SACAlpC,UACA/e,OAEJ,CAEA,GAA0B,aAAtB0nD,EAAapjD,KAAqB,CACpC,MAAM,QACJ4jD,EAAO,eAAEC,EAAc,OAAErrC,EAAM,SAAEgrC,EAAQ,OAAEnjB,EAAM,QAAE5lB,GACjD2oC,EAIJ,MAAO,CACLpjD,KAAM,WACNqgC,SACAojB,QAAS,CACPzjD,KAAM,WACNwY,SACAgrC,WACAxa,MAVU4a,EAAQp0C,KAAKhP,IAAO7E,EAAAA,EAAAA,KAAWN,EAAQmF,KAAKke,OAAOvc,SAW7D2hD,aAViBD,GAAiBviB,EAAAA,EAAAA,KAAWjmC,EAAQwoD,QAAkB3mD,EAWvEud,WAGN,CAEA,GAA0B,kBAAtB2oC,EAAapjD,KAA0B,CACzC,MAAM,OACJ+W,EAAM,qBAAEgtC,EAAoB,OAAEvrC,EAAM,SAAEgrC,EAAQ,UAAEQ,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBACvFC,EAAuB,iBAAEC,EAAgB,MAAE1tC,EAAK,MAAEsyB,GAChDoa,EACEpmD,GAAOskC,EAAAA,EAAAA,KAAWjmC,EAAQ0b,GAChC,IAAK/Z,EACH,OAEF,MAAMqnD,EAAqBN,GAAsBv0C,KAAKhP,IAAO8gC,EAAAA,EAAAA,KAAWjmC,EAAQmF,KAAKke,OAAOvc,SAE5F,MAAO,CACLnC,KAAM,gBACNyjD,QAAS,CACPzjD,KAAM,gBACNwY,SACAgrC,WACAxmD,OACAqnD,qBACAL,YACAC,oBACAC,YACAC,0BACAC,mBACA1tC,QACAsyB,SAGN,CAEA,GAA0B,aAAtBoa,EAAapjD,KAAqB,CACpC,MAAM,OACJ+W,EAAM,qBAAEgtC,EAAoB,OAAEvrC,EAAM,SAAEgrC,EAAQ,OAAEnjB,EAAM,UAAE2jB,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBAC/FC,EAAuB,iBAAEC,GACvBhB,EACEpmD,GAAOskC,EAAAA,EAAAA,KAAWjmC,EAAQ0b,GAChC,IAAK/Z,EACH,OAEF,MAAMqnD,EAAqBN,GAAsBv0C,KAAKhP,IAAO8gC,EAAAA,EAAAA,KAAWjmC,EAAQmF,KAAKke,OAAOvc,SAE5F,MAAO,CACLnC,KAAM,WACNqgC,SACAojB,QAAS,CACPzjD,KAAM,WACNwY,SACAgrC,WACAxmD,OACAqnD,qBACAL,YACAC,oBACAC,YACAC,0BACAC,oBAGN,CAEA,GAA0B,oBAAtBhB,EAAapjD,KAA4B,CAC3C,MAAM,eAAEskD,EAAc,0BAAEC,GAA8BnB,EAChDoB,EAAYC,EAA6BppD,EAAQipD,GACvD,IAAKE,EAAW,OAEhB,MAAO,CACLxkD,KAAM,kBACNskD,eAAgBE,EAChBD,4BAEJ,CAEA,GAA0B,qBAAtBnB,EAAapjD,KAA6B,CAC5C,MAAM,eAAEskD,EAAc,YAAEI,GAAgBtB,EAClCoB,EAAYC,EAA6BppD,EAAQipD,GACjD9oD,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQqpD,GAChC,IAAKF,IAAchpD,EAAM,OAEzB,MAAO,CACLwE,KAAM,mBACNskD,eAAgBE,EAChBG,UAAWnpD,EAEf,CAGF,CAEO,SAASipD,EACdppD,EAAWupD,GAEX,GAAuB,SAAnBA,EAAU5kD,KAAiB,OAAO4kD,EAEtC,GAAuB,SAAnBA,EAAU5kD,KAAiB,CAC7B,MAAMhD,GAAOskC,EAAAA,EAAAA,KAAWjmC,EAAQupD,EAAU7tC,QAC1C,IAAK/Z,EAAM,OAEX,MAAO,CACLgD,KAAM,OACNhD,OACA6nD,QAASD,EAAUC,QAEvB,CAGF,CAEO,SAASC,EACdtpD,GAEA,MAAkB,aAAdA,EAAKwE,KACA,CACL4qB,WAAY,OACZH,cAAc,EACdC,SAAU,2CACVC,YAAa,8CACbI,YAAa,GAIC,eAAdvvB,EAAKwE,KACA,CACL4qB,WAAY,OACZH,cAAc,EACdC,SAAU,4CACVC,YAAa,+CACbI,YAAa,GAIC,aAAdvvB,EAAKwE,KACA,CACL4qB,WAAY,OACZH,cAAc,EACdC,SAAU,8CACVC,YAAa,iDACbo6B,sBAAuB,WAIT,eAAdvpD,EAAKwE,KACA,CACL4qB,WAAY,OACZH,cAAc,EACdC,SAAU,gDACVC,YAAa,mDACbI,YAAa,EACbF,qBAAqB,GAIP,QAAdrvB,EAAKwE,KACA,CACL4qB,WAAY,OACZH,cAAc,EACdC,SAAU,4CACVC,YAAa,+CACbI,YAAa,GAIC,QAAdvvB,EAAKwE,KACA,CACL4qB,WAAY,OACZH,cAAc,EACdC,SAAU,+CACVC,YAAa,kDACbI,YAAa,GAIV,CACLH,WAAY,OACZH,cAAc,EACdC,SAAU,4CACVC,YAAa,4CACbI,YAAa,EAEjB,CAEO,SAASi6B,EAA6BpoD,EAAcqoD,GACzD,MAAMzsC,EAASysC,EAAYzsC,OAASysC,EAAYC,MAAQ,IACxD,OAAI1sC,EAAS,EACH,KAAI5b,EAAKuoD,OAAO/jD,KAAK++C,IAAI3nC,MAG3B,KAAI5b,EAAKuoD,OAAO3sC,IAC1B,CAEO,SAAS4sC,EAAkBxoD,EAAcqoD,GAC9C,OAAOroD,EAAKuoD,OAAOF,EAAYzsC,OAASysC,EAAYC,MAAQ,IAC9D,CAEO,SAASG,EAA4B5qC,GAC1C,MAAM,OAAEjS,GAAWiS,EAAQwG,QAE3B,GAAqB,cAAjBzY,GAAQxI,KAAsB,OAElC,MAAM,cAAEslD,EAAa,MAAE5uC,GAAUlO,EAEjC,MAAO,CACLhI,GAAI8kD,EACJ5uC,MAAO,CACL8B,OAAQ9B,EACRwuC,MAAO,GAET1pD,KAAM,CACJwE,KAAM,OACNQ,GAAIia,EAAQgD,WAAahD,EAAQ1D,OAAU0D,EAAQ8qC,UAAY9qC,EAAQ1D,QAEzEzJ,KAAMmN,EAAQnN,KACdk4C,QAAQ,EACRC,SAAUhrC,EAAQgD,iBAAcvgB,EAEpC,CAEO,SAASwoD,EAAqCjrC,GACnD,MAAM,OAAEjS,GAAWiS,EAAQwG,QAE3B,GAAqB,eAAjBzY,GAAQxI,KAAuB,OAEnC,MAAM,cAAEslD,EAAa,MAAE5uC,EAAK,YAAEivC,GAAgBn9C,EAE9C,MAAO,CACLhI,GAAI8kD,EACJ5uC,MAAO,CACL8B,OAAQ9B,EACRwuC,MAAO,GAET1pD,KAAM,CACJwE,KAAM,OACNQ,GAAImlD,GAENr4C,KAAMmN,EAAQnN,KACds4C,eAAgBnrC,EAAQja,GAE5B,CAEO,SAASqlD,EAAwBC,EAA4BC,GAClE,OAAOC,EAAAA,EAAAA,GAAqBF,EAAKC,EACnC,C,iPCrXA,MC6EA,GAAe5qD,EAAAA,EAAAA,KAvDM8qD,EACnBv5C,SACA1Q,QACA+iB,WACAhY,cACAm/C,aACAh9C,YACAi9C,eAAe,GACfr3C,UACArH,eAEA,MAAM7K,GAAOC,EAAAA,EAAAA,MAENud,EAAMgsC,IAAWr+C,EAAAA,EAAAA,IAASo+C,GAE3BE,GAAmBxjD,EAAAA,EAAAA,IAAiBmG,IACxCo9C,EAAQp9C,EAAEvD,OAAOqD,MAAM,IAGnBw9C,GAAezjD,EAAAA,EAAAA,IAAgB,KACnC4E,EAAS2S,EAAK,IAGhB,OACE9c,EAAAA,GAAAC,cAACqxB,EAAAA,EAAK,CACJryB,UAAU,SACVP,MAAOA,EACP0Q,OAAQA,EACRoC,QAASA,EACTy3C,QAAM,GAELpkD,QAAQ4c,IACPzhB,EAAAA,GAAAC,cAAA,OAAKhB,UDtDc,YCuDhBwiB,GAGLzhB,EAAAA,GAAAC,cAAC2qB,EAAAA,EAAS,CACRnhB,YAAaA,EACb+B,MAAOsR,EACPrR,SAAUs9C,EACVn9C,UAAWA,EACXs9C,2BAAyB,IAE3BlpD,EAAAA,GAAAC,cAAA,OAAKhB,UAAU,uBACbe,EAAAA,GAAAC,cAAC6L,EAAAA,EAAM,CAAC7M,UAAU,wBAAwBG,QAAS4pD,GAChDJ,GAActpD,EAAK,SAEtBU,EAAAA,GAAAC,cAAC6L,EAAAA,EAAM,CAAC7M,UAAU,wBAAwBkqD,QAAM,EAAC/pD,QAASoS,GACvDlS,EAAK,YAGJ,I,qCCjDZ,MAAM4Z,EAAgB,KAAOjY,EAAAA,EAiK7B,GAAepD,EAAAA,EAAAA,KA7IQqiB,EACrBpe,WACAod,MACA9d,cACA+d,WACA7F,eACAra,YACAua,kBACA4vC,YACA31C,aACA2M,kBACAhe,sBACAhD,UACAihB,eAEA,MAAM,qBAAEgpC,IAAyB/mD,EAAAA,EAAAA,MAE3BC,GAAMC,EAAAA,EAAAA,IAA0B,MAEhCs5B,GAAUt5B,EAAAA,EAAAA,IAAuB,MAEjClD,GAAOC,EAAAA,EAAAA,MACN+pD,EAAoBC,EAAkBC,IAAqB7jD,EAAAA,EAAAA,MAE5D,MAAEjH,EAAK,MAAE+b,GAAUyE,GAAO,CAAC,EAC3BuqC,EAAU5kD,QAAQnG,GAAU0qD,GAAa3uC,GAEzChI,GAAclN,EAAAA,EAAAA,IAAgB,KAClCnG,IAAU0C,EAAS,IAGf4nD,GAAoBnkD,EAAAA,EAAAA,IAAgB,KACxC8a,IAAWve,EAAS,IAGhB6nD,GAAkBpkD,EAAAA,EAAAA,IAAiBqkD,IACvCP,EAAqB,CACnBvnD,WACApD,MAAOkrD,IAETJ,GAAmB,KAGf,kBACJ7uC,EAAiB,kBACjBkvC,EAAiB,wBACjBjvC,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBzY,GAAM6d,OAAiBxgB,OAAWA,OAAWA,GAAW,GAE7EqhC,GAAoB17B,EAAAA,EAAAA,IAAgB,IAAMhD,EAAIsF,UAC9Cs5B,GAAiB57B,EAAAA,EAAAA,IAAgB,IAAMquB,SAAS1D,OAChDkR,GAAiB77B,EAAAA,EAAAA,IAAgB,IAAMu2B,EAAQj0B,UAC/Cw5B,GAAY97B,EAAAA,EAAAA,IAAgB,KAAM,CAAGukD,YAAY,EAAM9nB,6BAA6B,MAE1F,IAAIonB,GAAuB,IAAV3uC,EAIjB,OACEza,EAAAA,GAAAC,cAAC6L,EAAAA,EAAM,CACL7M,WAAWyB,EAAAA,EAAAA,GACTsF,EAAAA,EAAOC,KACPD,EAAAA,EAAOkZ,IACP5F,GAAgBtT,EAAAA,EAAOmW,IACvBgD,GAAYnZ,EAAAA,EAAOuW,OACnB4C,GAAY3F,EACZ/F,GAAczN,EAAAA,EAAOgG,SACrB/M,GAEFqB,KAAK,OACLlB,QAASqT,EACT+J,YAAa5B,EACb6B,cAAe5B,EACftY,IAAKA,GAELvC,EAAAA,GAAAC,cAAC4B,EAAAA,EAAqB,CACpB5C,UAAW+G,EAAAA,EAAO4W,cAClBxb,YAAaA,EACbU,SAAUA,EACVK,UApGW,EAqGX7B,KAAM4Y,EACN9W,oBAAqBA,IAEtBqnD,GACCzpD,EAAAA,GAAAC,cAAA,QAAMhB,UAAW+G,EAAAA,EAAO+jD,SACrBrrD,GAASsB,EAAAA,GAAAC,cAAA,YAAOvB,GAChB0qD,GAAappD,EAAAA,GAAAC,cAAA,YAAOwa,IAGzBza,EAAAA,GAAAC,cAAA,OACEhB,UAAW+G,EAAAA,EAAOgkD,KAClBj7C,MAAM,KACN/G,OAAO,KACPgH,QAAQ,aAERhP,EAAAA,GAAAC,cAAA,QAAMhB,UAAW+G,EAAAA,EAAOikD,SAAU/6C,EAAE,8JAErCkR,GACCpgB,EAAAA,GAAAC,cAAC0oD,EAAY,CACXv5C,OAAQk6C,EACR19C,UA1He,GA2HflN,MAAOY,EAAK4f,GAAKxgB,MAAQ,oBAAsB,oBAC/C+iB,SAAUniB,EAAK,wBACfmK,YAAanK,EAAK,4BAClBupD,aAAc3pC,GAAKxgB,MACnB8S,QAASg4C,EACTr/C,SAAUw/C,IAGbvpC,GAAmBypC,GAClB7pD,EAAAA,GAAAC,cAACoiC,EAAAA,EAAI,CACH9/B,IAAKu5B,EACL1sB,OAAQuL,EACRuc,OAAQ2yB,EACR5oB,kBAAmBA,EACnBE,eAAgBA,EAChBC,eAAgBA,EAChBC,UAAWA,EACX6oB,WAAS,EACTJ,YAAU,EACVt4C,QAASsJ,EACTwf,oBAAqBvf,GAErB/a,EAAAA,GAAAC,cAAC21B,EAAAA,EAAQ,CAACn3B,KAAK,aAAaW,QAASqT,GAClCnT,EAAK,wBAERU,EAAAA,GAAAC,cAAC21B,EAAAA,EAAQ,CAACn3B,KAAK,WAAWW,QAASmqD,GAChCjqD,EAAK4f,GAAKxgB,MAAQ,oBAAsB,qBAE3CsB,EAAAA,GAAAC,cAAC21B,EAAAA,EAAQ,CAACn3B,KAAK,cAAcwkC,aAAW,EAAC7jC,QAASsqD,GAC/CpqD,EAAK,uBAIL,G,mCCrLb,SAAgB,KAAO,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,UAAY,WAAW,eAAiB,W","sources":["webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/icons.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/schedule-meeting.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/google-api.ts","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import { SVGProps } from \"react\";\nimport React from \"../../../lib/teact/teact\";\n\nexport const SummarizeIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M9.277 7.215a.567.567 0 0 1-.563-.563c0-.307.255-.562.563-.562h3.937a.562.562 0 1 1 0 1.125H9.277ZM4.943 7.62l-.563-.563a.566.566 0 0 1 0-.795.566.566 0 0 1 .795 0l.165.165 1.29-1.29a.566.566 0 0 1 .795 0 .566.566 0 0 1 0 .795L5.738 7.62a.562.562 0 0 1-.795 0ZM9.277 12.465a.567.567 0 0 1-.563-.563c0-.307.255-.562.563-.562h3.937a.562.562 0 1 1 0 1.125H9.277ZM4.943 12.87l-.563-.563a.566.566 0 0 1 0-.795.566.566 0 0 1 .795 0l.165.165 1.29-1.29a.566.566 0 0 1 .795 0 .566.566 0 0 1 0 .795L5.738 12.87a.562.562 0 0 1-.795 0Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6.75 17.063c-4.072 0-5.813-1.74-5.813-5.813v-4.5C.938 2.678 2.678.937 6.75.937h4.5c4.072 0 5.813 1.74 5.813 5.813v4.5c0 4.072-1.74 5.813-5.813 5.813h-4.5ZM2.062 6.75v4.5c0 3.457 1.23 4.688 4.688 4.688h4.5c3.457 0 4.688-1.23 4.688-4.688v-4.5c0-3.458-1.23-4.688-4.688-4.688h-4.5c-3.458 0-4.688 1.23-4.688 4.688Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport const AIReplyIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M4.865 8.487c.158.408.533.675.975.675.442 0 .825-.267.975-.675l.592-1.6a.165.165 0 0 1 .116-.117l1.6-.592c.409-.158.675-.533.675-.975 0-.441-.266-.825-.675-.975l-1.6-.591a.2.2 0 0 1-.116-.117l-.592-1.6a1.036 1.036 0 0 0-.975-.675c-.442 0-.825.267-.975.675l-.592 1.6a.165.165 0 0 1-.116.117l-1.6.591a1.036 1.036 0 0 0-.675.975c0 .442.266.825.675.975l1.6.592a.2.2 0 0 1 .116.117l.592 1.6ZM4.59 5.595l-1.058-.392 1.058-.391c.4-.15.708-.459.858-.859l.392-1.058.392 1.058c.15.392.466.709.858.85l1.058.392-1.058.392c-.4.15-.708.458-.858.858L5.84 7.503l-.392-1.058a1.464 1.464 0 0 0-.858-.85Zm-.208 12.942a.63.63 0 0 0 .625.625h1.25l-.009.008c1.059 0 1.642 0 2.209-.233.566-.234.975-.642 1.725-1.392l6.791-6.792.039-.038c.45-.458.708-.72.87-1.044a2.259 2.259 0 0 0 0-2.017c-.152-.327-.403-.578-.849-1.023l-.06-.06-.039-.038c-.458-.452-.72-.709-1.044-.87a2.26 2.26 0 0 0-2.017 0c-.327.151-.578.402-1.023.847l-.06.061-1.233 1.233-5.55 5.55c-.742.742-1.159 1.159-1.392 1.725-.233.567-.233 1.15-.233 2.209v1.249Zm1.258-.625v-.617c0-.933 0-1.392.142-1.733.141-.342.466-.667 1.125-1.325l5.116-5.117.792.792a.629.629 0 0 0 .883 0 .629.629 0 0 0 0-.884l-.791-.791.791-.792c.375-.375.6-.6.75-.675.284-.142.625-.142.909 0 .15.075.375.3.75.675.375.375.6.6.675.75.141.283.141.625 0 .908-.075.15-.3.375-.675.75l-6.792 6.792c-.7.7-1 .992-1.325 1.125-.342.142-.808.142-1.733.142H5.64Z\"\n    />\n  </svg>\n);\n\nexport const MeetingIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M5.438 3.75V1.5c0-.308.255-.563.562-.563.308 0 .563.255.563.563v2.25A.567.567 0 0 1 6 4.313a.567.567 0 0 1-.563-.563ZM11.438 3.75V1.5c0-.308.255-.563.562-.563.307 0 .563.255.563.563v2.25a.567.567 0 0 1-.563.563.567.567 0 0 1-.563-.563ZM6.09 10.815a.774.774 0 0 1-.247-.157.775.775 0 0 1-.218-.533c0-.097.022-.195.06-.285a.866.866 0 0 1 .158-.247.774.774 0 0 1 .247-.158.766.766 0 0 1 .817.158.789.789 0 0 1 .218.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.568.568 0 0 1-.068.135c-.022.038-.06.075-.09.113a.789.789 0 0 1-.532.217.747.747 0 0 1-.285-.06ZM8.715 10.815a.774.774 0 0 1-.248-.157.775.775 0 0 1-.217-.533c0-.097.023-.195.06-.285a.866.866 0 0 1 .157-.247.774.774 0 0 1 .248-.158.752.752 0 0 1 .818.158.789.789 0 0 1 .217.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.567.567 0 0 1-.067.135c-.023.038-.06.075-.09.113a.789.789 0 0 1-.533.217.746.746 0 0 1-.285-.06ZM11.34 10.815a.774.774 0 0 1-.248-.157l-.09-.113a.567.567 0 0 1-.067-.135.477.477 0 0 1-.045-.135 1.129 1.129 0 0 1-.015-.15c0-.195.082-.39.217-.532a.774.774 0 0 1 .248-.158.75.75 0 0 1 .818.158.789.789 0 0 1 .217.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.567.567 0 0 1-.067.135c-.023.038-.06.075-.09.113a.789.789 0 0 1-.533.217.746.746 0 0 1-.285-.06ZM6.09 13.44a.866.866 0 0 1-.247-.158.789.789 0 0 1-.218-.532c0-.098.022-.195.06-.285a.7.7 0 0 1 .158-.248c.277-.277.787-.277 1.064 0a.789.789 0 0 1 .218.533c0 .195-.082.39-.218.532a.789.789 0 0 1-.532.218.747.747 0 0 1-.285-.06ZM8.467 13.282a.789.789 0 0 1-.217-.532c0-.098.023-.195.06-.285a.7.7 0 0 1 .157-.248c.278-.277.788-.277 1.066 0a.7.7 0 0 1 .157.248c.037.09.06.187.06.285 0 .195-.082.39-.217.532A.789.789 0 0 1 9 13.5a.789.789 0 0 1-.533-.218ZM11.092 13.282a.7.7 0 0 1-.157-.247.747.747 0 0 1-.06-.285c0-.098.023-.195.06-.285a.7.7 0 0 1 .157-.248.749.749 0 0 1 .818-.157c.045.015.09.037.135.067.037.023.075.06.113.09a.789.789 0 0 1 .217.533c0 .195-.082.39-.217.532a.789.789 0 0 1-.533.218.789.789 0 0 1-.533-.218ZM2.625 7.38a.567.567 0 0 1-.563-.563c0-.307.256-.562.563-.562h12.75c.307 0 .563.255.563.562a.567.567 0 0 1-.563.563H2.625Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 17.063c-2.737 0-4.313-1.575-4.313-4.313V6.375c0-2.737 1.576-4.313 4.313-4.313h6c2.738 0 4.313 1.576 4.313 4.313v6.375c0 2.738-1.575 4.313-4.313 4.313H6ZM2.812 6.374v6.375c0 2.145 1.043 3.188 3.188 3.188h6c2.145 0 3.188-1.043 3.188-3.188V6.375c0-2.145-1.043-3.188-3.188-3.188H6c-2.145 0-3.188 1.043-3.188 3.188Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n)\n\nexport const AISettingIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M18.333 5.417h-5M5 5.417H1.667\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M8.333 8.333a2.917 2.917 0 1 1 0-5.833 2.917 2.917 0 0 1 0 5.833Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M18.333 14.584H15M6.667 14.584h-5\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M11.667 17.5a2.917 2.917 0 1 1 0-5.833 2.917 2.917 0 0 1 0 5.833Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n)\n\nexport const RealTimeAIIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"m10 7-.516 1.394c-.676 1.828-1.014 2.742-1.681 3.409-.667.667-1.581 1.005-3.409 1.681L3 14l1.394.516c1.828.676 2.742 1.015 3.409 1.681.667.666 1.005 1.581 1.681 3.409L10 21l.516-1.394c.676-1.828 1.015-2.742 1.681-3.409.666-.667 1.581-1.005 3.409-1.681L17 14l-1.394-.516c-1.828-.676-2.742-1.014-3.409-1.681-.667-.667-1.005-1.581-1.681-3.409L10 7Zm8-4-.221.597c-.29.784-.435 1.176-.72 1.461-.286.286-.678.431-1.462.72L15 6l.598.221c.783.29 1.175.435 1.46.72.286.286.431.678.72 1.462L18 9l.221-.597c.29-.784.435-1.176.72-1.461.286-.286.678-.431 1.462-.72L21 6l-.598-.221c-.783-.29-1.175-.435-1.46-.72-.286-.286-.431-.678-.72-1.462L18 3Z\"\n    />\n  </svg>\n)\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","/* eslint-disable no-null/no-null */\n/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport { Modal } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ICreateMeetResponse } from './google-api';\n\nimport eventEmitter, { Actions } from '../lib/EventEmitter';\nimport { checkGoogleAuthStatus, createGoogleMeet, loginWithGoogle } from './google-api';\n\nfunction formatTimeRange(startISO:string, endISO:string) {\n  const startDate = new Date(startISO);\n  const endDate = new Date(endISO);\n\n  const dayFormatter = new Intl.DateTimeFormat('en-US', {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  const timeFormatter = new Intl.DateTimeFormat('en-US', {\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true,\n  });\n\n  // 格式化时间（去掉空格和 AM/PM 小写）\n  const formatTime = (date:Date) => {\n    return timeFormatter.format(date)\n      .toLowerCase()\n      .replace(' ', '');\n  };\n\n  const dateStr = dayFormatter.format(startDate);\n  const startTimeStr = formatTime(startDate);\n  const endTimeStr = formatTime(endDate);\n\n  return `${dateStr} ${startTimeStr}-${endTimeStr}`;\n}\n\nclass ScheduleMeeting {\n  private chatId:string;\n\n  constructor(chatId:string) {\n    this.chatId = chatId;\n  }\n\n  public start(originalMessage: ApiMessage) {\n    let email: string[] | null = null;\n    let date: string | null = null;\n\n    let timeout: NodeJS.Timeout;\n\n    const cleanup = () => {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      eventEmitter.off(Actions.NewTextMessage, handler);\n      clearTimeout(timeout);\n      console.log('[🔁 清理监听器]');\n    };\n    const handler = async ({ message }:{ message: ApiMessage }) => {\n      if (message.content.text && message.chatId === this.chatId && !message.isOutgoing) {\n        const { text } = message.content.text;\n        const toolCheckRes = await ScheduleMeeting.getMeetParamsByAITools(text);\n        if (toolCheckRes.email) email = toolCheckRes.email;\n        if (toolCheckRes.date) date = toolCheckRes.date;\n        if (!email && !date) {\n          this.sendMessage('I\\'d like to schedule a meeting with you. Could you tell me what time would be good for you to have the meeting? Also, could I get your email address?');\n          return;\n        } else if (!email) {\n          this.sendMessage('Could you please share your email address?');\n          return;\n        } else if (!date) {\n          this.sendMessage('Could you tell me what time would be good for you to have the meeting?');\n          return;\n        }\n        if (email && date) {\n          cleanup();\n          console.log('[✅ 工作流完成]:', { date, email });\n          this.handleGoogleAuthCheck({ date, email });\n        }\n      }\n    };\n\n    // 注册监听器\n    eventEmitter.on(Actions.NewTextMessage, handler);\n\n    // 超时自动清理\n    timeout = setTimeout(() => {\n      cleanup();\n      console.log('已超过五分钟未完成输入，工作流已结束。');\n    }, 1000 * 60 * 5);\n\n    // this.sendMessage('你好，请告诉我你的约会时间和邮箱。');\n    handler({ message: originalMessage });\n  }\n\n  private static getMeetParamsByAITools(message:string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch('https://telegpt-three.vercel.app/tool-check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          messages: [{\n            id: uuidv4(),\n            content: message,\n            role: 'user',\n          }],\n          timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n        }),\n      }).then((res) => res.json()).then((toolResults) => {\n        let email: string[] | null = null;\n        let date: string | null = null;\n        if (toolResults && toolResults.length > 0) {\n          toolResults.forEach((toolCall: any) => {\n            if (toolCall.toolName === 'parseTime') {\n              date = toolCall.result;\n            } else if (toolCall.toolName === 'extractEmail') {\n              email = toolCall.result;\n            }\n          });\n          resolve({\n            date,\n            email,\n          });\n        } else {\n          resolve({});\n        }\n      }).catch((err) => {\n        reject(err);\n      });\n    });\n  }\n\n  private async handleGoogleAuthCheck({ date, email }:{ date:string;email:string[] }) {\n    const accessToken = await checkGoogleAuthStatus();\n    if (accessToken) {\n      this.handleCreateGoogleMeet({ date, email, accessToken });\n    } else {\n      Modal.confirm({\n        title: 'Google authorization',\n        content: 'This service requires access to your Google Calendar.',\n        okText: 'Confirm',\n        cancelText: 'Cancel',\n        onOk: () => {\n          // eslint-disable-next-line @typescript-eslint/no-shadow\n          loginWithGoogle().then(({ accessToken }) => {\n            this.handleCreateGoogleMeet({ date, email, accessToken });\n          });\n        },\n        onCancel() {\n          console.log('用户点击了取消');\n        },\n      });\n    }\n  }\n\n  public handleCreateGoogleMeet({ date, email, accessToken }:{ date:string;email:string[];accessToken:string }) {\n    this.sendMessage('I\\'ll send you the meeting invitation later.');\n    createGoogleMeet({\n      startDate: new Date(date),\n      endDate: new Date(new Date(date).getTime() + 30 * 60 * 1000),\n      selectedTimezone: Intl.DateTimeFormat().resolvedOptions().timeZone, // Add timezone\n      emails: email,\n      googleToken: accessToken as string,\n    }).then((createMeetResponse:ICreateMeetResponse) => {\n      console.log('createMeetResponse', createMeetResponse);\n      if (createMeetResponse) {\n        const eventMessage = `Event details \\n📝 Title\\n${createMeetResponse.summary}\\n👥 Guests\\n${createMeetResponse.attendees.map((attendee) => attendee.email).join('\\\\n')}\\n📅 Time\\n${formatTimeRange(createMeetResponse.start.dateTime,createMeetResponse.end.dateTime)}\\n${createMeetResponse.start.timeZone}\\n🔗 Meeting link\\n${createMeetResponse.hangoutLink}\n            `;\n        this.sendMessage(eventMessage);\n      }\n    });\n  }\n\n  private sendMessage(message:string) {\n    getActions().sendMessage({\n      messageList: {\n        chatId: this.chatId,\n        threadId: '-1',\n        type: 'thread',\n      },\n      text: message,\n    });\n  }\n}\n\nexport default ScheduleMeeting;\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import copy from 'copy-to-clipboard';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { selectChatTranslations } from '../../../../global/selectors';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n    const global = getGlobal();\n    const { id: messageId, chatId } = message;\n    const chatTranslations = selectChatTranslations(global, chatId);\n    const { autoTranslateLanguage } = global.settings.byKey;\n    const messageTranslation = autoTranslateLanguage && messageId\n      ? chatTranslations?.byLangCode[autoTranslateLanguage]?.[messageId] : undefined;\n    const { isPending, text: translatedText } = messageTranslation || {};\n    if (translatedText && !isPending) {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            copy(translatedText.text);\n          }\n          afterEffect?.();\n        },\n      });\n    } else {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          const messageIds = getMessageIdsForSelectedText();\n          if (messageIds?.length && onCopyMessages) {\n            onCopyMessages(messageIds);\n          } else if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            const clipboardText = renderMessageText(\n              { message, shouldRenderAsHtml: true },\n            );\n            if (clipboardText) {\n              copyHtmlToClipboard(\n                clipboardText.join(''),\n                getMessageTextWithSpoilers(message, statefulContent)!,\n              );\n            }\n          }\n\n          afterEffect?.();\n        },\n      });\n    }\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport ScheduleMeetingIcon from '../../chatAssistant/assets/schedule-meeting.png';\nimport SmartReplyIcon from '../../chatAssistant/assets/smart-reply.png';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\nimport SerenaPath from '../../chatAssistant/assets/serena.png';\nimport { AIReplyIcon, MeetingIcon, SummarizeIcon } from \"../../chatAssistant/utils/icons\"\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onSmartReply?: NoneToVoidFunction;\n  onScheduleMeet?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  onSummarize?: NoneToVoidFunction;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canSmartReply,\n  canScheduleMeeting,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onSmartReply,\n  onScheduleMeet,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  onSummarize,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n  const canAISummarize = message.content?.photo || message.content?.document || message.content?.webPage || message.content?.voice || message.content?.audio;\n  const canSerenaAI = canAISummarize || canScheduleMeeting || canSmartReply\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n\n        {canSerenaAI && <MenuItem\n          customIcon={(\n            <img\n              src={SerenaPath}\n              className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n              alt=\"\"\n            />\n            )}\n          submenu={\n            <>\n              {canScheduleMeeting && (\n                <MenuItem\n                  customIcon={(\n                    <div className=\"mr-[1.25rem]\">\n                      <MeetingIcon/>\n                    </div>\n                  )}\n                  onClick={onScheduleMeet}\n                >\n                  {lang('Schedule Meeting')}\n                </MenuItem>\n              )}\n              {canAISummarize && <MenuItem\n                customIcon={(\n                  <div className=\"mr-[1.25rem]\">\n                    <SummarizeIcon/>\n                  </div>\n                )}\n                onClick={onSummarize}\n              >\n                {lang('Summarize')}\n              </MenuItem>}\n              {canSmartReply && <MenuItem\n                customIcon={(\n                  <div className=\"mr-[1.25rem]\">\n                    <AIReplyIcon/>\n                  </div>\n                )}\n                onClick={onSmartReply}\n              >\n                {lang('AI Reply')}\n              </MenuItem>}\n            </>\n          }\n        >\n          {lang('SerenaAI')}\n        </MenuItem>}\n\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {/* {canSmartReply && (\n          <MenuItem\n            customIcon={(\n              <img\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                src={SmartReplyIcon}\n                alt=\"\"\n              />\n            )}\n            onClick={onSmartReply}\n          >\n            {lang('Smart Reply')}\n          </MenuItem>\n        )} */}\n        {/* {canScheduleMeeting && (\n          <MenuItem\n            customIcon={(\n              <img\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                src={ScheduleMeetingIcon}\n                alt=\"\"\n              />\n            )}\n            onClick={onScheduleMeet}\n          >\n            {lang('Schedule a Meeting')}\n          </MenuItem>\n        )} */}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageText,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { chatAIGenerate } from '../../chatAssistant/utils/chat-api';\nimport ScheduleMeeting from '../../chatAssistant/utils/schedule-meeting';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport eventEmitter from '../../chatAssistant/lib/EventEmitter';\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\nimport { audioSummary, documentSummary, photoSummary, voiceSummary, webPageSummary } from \"../../chatAssistant/utils/ai-analyse-message\"\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?:boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canSmartReply,\n  canScheduleMeeting,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openChatAIWithInfo\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text!.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSmartReply = useLastCallback(async () => {\n    closeMenu();\n    if (message.content.text?.text) {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n      });\n      const vectorSearchResults = await knowledgeEmbeddingStore.similaritySearch({\n        query: message.content.text?.text,\n      });\n      type Metadata = { answer: string }; // Define the type for metadata\n      const similarResult = vectorSearchResults.similarItems[0] as { metadata: Metadata; score: number } | undefined;\n      if (similarResult && similarResult.score > 0.8) {\n        eventEmitter.emit('update-input-text', similarResult.metadata.answer);\n      } else {\n        eventEmitter.emit('update-input-spiner', true);\n        chatAIGenerate({\n          data: {\n            messages: [\n              {\n                role: 'system',\n                content: '你是一个多语种智能助手。接收用户消息后，自动识别其使用的语言，并用相同的语言进行自然、得体的回复。你应该理解消息的语境，确保回复简洁、友好且符合语言习惯。',\n                id: '1',\n              },\n              {\n                role: 'user',\n                content: `请回复下面的消息: ${message.content.text?.text}`,\n                id: '2',\n              },\n            ],\n          },\n          onResponse: (response) => {\n            eventEmitter.emit('update-input-text', response);\n          },\n          onFinish: () => {\n            // eslint-disable-next-line no-console\n            console.log('Finish');\n          },\n        });\n      }\n    }\n  });\n\n  const handleScheduleMeeting = useLastCallback(() => {\n    const chatId = message.chatId;\n    const scheduleMeeting = new ScheduleMeeting(chatId);\n    scheduleMeeting.start(message);\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  const handleSummarize = useLastCallback(async () => {\n    const { photo, document, webPage, voice, audio } = message.content\n    await openChatAIWithInfo({ chatId: message.chatId });\n    if (photo) {\n      photoSummary(message)\n    } else if (webPage) {\n      webPageSummary(message)\n    } else if (document) {\n      documentSummary(message)\n    } else if (voice) {\n      voiceSummary(message)\n    } else if (audio) {\n      audioSummary(message)\n    }\n    closeMenu();\n  })\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canSmartReply={canSmartReply}\n        canScheduleMeeting={canScheduleMeeting}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onSmartReply={handleSmartReply}\n        onScheduleMeet={handleScheduleMeeting}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        onSummarize={handleSummarize}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation;\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n    const hasTextContent = hasMessageText(message);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canSmartReply: !isPinned && !isScheduled && canReplyGlobally && canSendText && hasTextContent,\n      canScheduleMeeting: !isOwn && hasTextContent,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { filterAITag, filterPresetTag } from \"../components/chatAssistant/ai-chatfolders/tag-filter\"\nimport { isChatBot } from \"../components/chatAssistant/ai-chatfolders/util\"\nimport { AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, UNREAD_FOLDER_ID } from \"../config\"\nimport { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  if (folderId === UNREAD_FOLDER_ID) {\n    return getUnreadChatsByFolderId()[ALL_FOLDER_ID]\n  }\n  if (folderId === PRESET_FOLDER_ID) {\n    return filterPresetTag(getOrderedIds(ALL_FOLDER_ID)?.filter(i => !isChatBot(i)))\n  }\n  if (folderId === AI_FOLDER_ID) {\n    return filterAITag(getOrderedIds(ALL_FOLDER_ID)?.filter(i => !isChatBot(i)))\n  }\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport { gapi, loadAuth2 } from 'gapi-script';\n\nexport const GOOGLE_APP_CLIENT_ID = '847573679345-qq64ofbqhv7gg61e04dbrk8b92djf1fb.apps.googleusercontent.com';\nexport const GOOGLE_API_KEY = 'AIzaSyAtEl_iCCVN7Gv-xs1kfpcGCfD9IYO-UhU';\nexport const SCOPES = [\n  'https://www.googleapis.com/auth/calendar',\n  'https://www.googleapis.com/auth/calendar.events',\n];\nexport const checkHasAllNeededScopes = (scopes:string) => {\n  const scopesArray = scopes.split(' ');\n  const hasAllScopes = SCOPES.every((scope) => scopesArray.includes(scope));\n  return hasAllScopes;\n};\nexport const checkGoogleAuthStatus = async () => {\n  let auth2 = await loadAuth2(gapi, GOOGLE_APP_CLIENT_ID, SCOPES.join(' '));\n  if (!auth2) {\n    auth2 = await loadAuth2(gapi, GOOGLE_APP_CLIENT_ID, SCOPES.join(' '));\n  }\n  if (auth2.isSignedIn.get()) {\n    const authResponse = auth2.currentUser.get().getAuthResponse();\n    if (checkHasAllNeededScopes(authResponse.scope)) {\n      return authResponse.access_token;\n    } else {\n      return false;\n    }\n  }\n  return false;\n};\n\n// 初始化并登录\nexport async function loginWithGoogle() {\n  const auth2 = await loadAuth2(gapi, GOOGLE_APP_CLIENT_ID, SCOPES.join(' '));\n\n  if (!auth2.isSignedIn.get()) {\n    const user = await auth2.signIn();\n    const profile = user.getBasicProfile();\n    const accessToken = user.getAuthResponse().access_token;\n\n    console.log('✅ 登录成功');\n    console.log('👤 用户名:', profile.getName());\n    console.log('📧 邮箱:', profile.getEmail());\n    console.log('🔑 AccessToken:', accessToken);\n\n    return { profile, accessToken };\n  } else {\n    console.log('🔁 已登录');\n    return {\n      profile: auth2.currentUser.get().getBasicProfile(),\n      accessToken: auth2.currentUser.get().getAuthResponse().access_token,\n    };\n  }\n}\nexport const signOutGoogle = async () => {\n  const auth2 = await loadAuth2(gapi, GOOGLE_APP_CLIENT_ID, SCOPES.join(' '));\n  if (auth2.isSignedIn.get()) {\n    auth2.signOut();\n  }\n};\n\n(window as any).signOutGoogle = signOutGoogle;\n\nexport interface ICreateMeetResponse {\n  summary: string;\n  start: { dateTime: string; timeZone: string };\n  end: { dateTime: string; timeZone: string };\n  attendees: { email: string }[];\n  reminders: { useDefault: boolean; overrides: { method: string; minutes: number }[] };\n  conferenceData: { createRequest: { requestId: string; conferenceSolutionKey: { type: string } } };\n  hangoutLink:string;\n}\nexport const createGoogleMeet = ({\n  startDate,\n  endDate,\n  selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone,\n  emails = [],\n  googleToken,\n}:{\n  startDate:Date;\n  endDate:Date;\n  selectedTimezone:string;\n  emails:string[];\n  googleToken:string;\n}):Promise<ICreateMeetResponse> => {\n  return new Promise((resolve, reject) => {\n    const attendees = emails.map((email) => {\n      return {\n        email,\n      };\n    });\n    const event = {\n      summary: 'Meeting Invitation',\n      start: { dateTime: new Date(startDate), timeZone: selectedTimezone },\n      end: { dateTime: new Date(endDate), timeZone: selectedTimezone },\n      attendees,\n      reminders: {\n        useDefault: false,\n        overrides: [\n          { method: 'email', minutes: 30 },\n          { method: 'popup', minutes: 10 },\n        ],\n      },\n      conferenceData: {\n        createRequest: {\n          requestId: `test-${Date.now()}`,\n          conferenceSolutionKey: { type: 'hangoutsMeet' },\n        },\n      },\n    };\n    fetch('https://www.googleapis.com/calendar/v3/calendars/primary/events?conferenceDataVersion=1&alt=json&key=AIzaSyAtEl_iCCVN7Gv-xs1kfpcGCfD9IYO-UhU', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${googleToken}`,\n      },\n      body: JSON.stringify(event),\n    }).then((response) => response.json()).then((res) => {\n      resolve(res);\n    }).catch((err) => {\n      reject(err);\n    });\n  });\n};\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'premiumGiftStars') {\n    const {\n      months, userId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'premiumGiftStars',\n      months,\n      message,\n      user,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};"],"names":["memo","withGlobal","global","peerId","forceShowSelf","peer","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","undefined","iconElement","titleElement","titleText","React","createElement","Icon","name","style","Avatar","size","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","dir","isRtl","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","ref","useRef","isCustom","type","availableReaction","useMemo","find","r","isSameReaction","centerIconId","centerIcon","id","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","Math","floor","random","length","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","key","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","Fragment","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","current","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","useEffect","setTimeout","clearTimeout","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","value","onChange","e","MIN_PASSWORD_LENGTH","maxLength","role","Button","ripple","disabled","getOffsetToContainer","element","offsetTop","offsetLeft","contains","offsetParent","top","left","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","shiftX","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","min","newTailPosition","hasFloatingBadge","isProgressFull","buildStyle","width","viewBox","fill","d","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","date","isWhenOnline","scheduledAt","getTime","Date","now","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","AvatarList","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","MediaSpoiler","isVisible","withAnimation","thumbDataUri","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","x","clientX","y","clientY","shiftY","setAttribute","usePrevious","prevRef","lastRef","useHorizontalScroll","containerRef","isDisabled","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","i","angle","cos","sin","sizeFactor","push","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","forEach","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","get","MAX_EFFECT_COUNT","IS_IOS","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","chatId","messageId","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","useLang","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","count","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","animatedEmoji","AnimatedCounter","text","formatIntegerCompact","paidCounter","counter","Reactions","message","threadId","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","getGlobal","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","toString","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","isOutgoing","withContextMenu","onRemove","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","PickerItem","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","SummarizeIcon","_extends","xmlns","fillRule","clipRule","AIReplyIcon","MeetingIcon","AISettingIcon","stroke","strokeLinecap","strokeLinejoin","strokeWidth","RealTimeAIIcon","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","content","contentNotSupportedText","getMessageText","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","timeoutId","window","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","indexOf","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","Promise","resolve","isStopped","set","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","ScheduleMeeting","constructor","this","start","originalMessage","timeout","email","eventEmitter","off","Actions","NewTextMessage","handler","console","log","async","toolCheckRes","getMeetParamsByAITools","sendMessage","handleGoogleAuthCheck","on","reject","fetch","method","headers","body","JSON","stringify","messages","uuidv4","timeZone","Intl","DateTimeFormat","resolvedOptions","res","json","toolResults","toolCall","toolName","result","catch","err","accessToken","checkGoogleAuthStatus","handleCreateGoogleMeet","Modal","confirm","okText","cancelText","onOk","loginWithGoogle","createGoogleMeet","startDate","endDate","selectedTimezone","emails","googleToken","createMeetResponse","eventMessage","summary","attendees","attendee","join","startISO","endISO","dayFormatter","weekday","month","day","timeFormatter","hour","minute","hour12","formatTime","format","toLowerCase","replace","formatTimeRange","dateTime","end","hangoutLink","messageList","div","document","ALLOWED_QUOTE_ENTITIES","Bold","Italic","Underline","Strike","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","appendChild","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","classList","currentElement","parentElement","tagName","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","MenuItem","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","topReactions","defaultTagReactions","poll","story","isPrivate","enabledReactions","isWithPaidReaction","reactionsLimit","anchor","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canSmartReply","canScheduleMeeting","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","canPlayAnimatedEmojis","isInSavedMessages","onReply","onSmartReply","onScheduleMeet","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCloseAnimationEnd","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","onSummarize","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","menuRef","scrollableRef","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","canAISummarize","photo","webPage","voice","audio","canSerenaAI","areItemsHidden","hideItems","isReady","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","href","afterEffect","options","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","selection","getSelection","label","mediaLoader","ApiMediaFormat","BlobUrl","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","chatTranslations","selectChatTranslations","autoTranslateLanguage","settings","byKey","messageTranslation","byLangCode","isPending","translatedText","execCommand","copy","messageIds","getMessageIdsForSelectedText","clipboardText","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","getTriggerElement","querySelector","getRootElement","getMenuElement","getLayout","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","shouldAvoidNegativePosition","menuElMinWidth","disableScrolling","handleOpenMessageReactionPicker","position","Menu","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","customIcon","SerenaPath","submenu","messagesCount","option","withPreventDefaultOnMouseDown","destructive","MenuSeparator","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","selectChat","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","hasTextContent","hasMessageText","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","openChatAIWithInfo","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","users","uniqueReactors","from","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","rangeCount","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","trim","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","replyToPeerId","fromChatId","handleSmartReply","similarResult","knowledgeEmbeddingStore","similaritySearch","query","similarItems","score","emit","metadata","answer","chatAIGenerate","data","onResponse","response","onFinish","handleScheduleMeeting","handleOpenThread","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","sticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","handleSummarize","photoSummary","webPageSummary","documentSummary","voiceSummary","audioSummary","ConfirmDialog","confirmLabel","confirmHandler","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","url","URL","createObjectURL","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","isTextBox","_excludedClosestSelector","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","UNREAD_FOLDER_ID","getUnreadChatsByFolderId","ALL_FOLDER_ID","PRESET_FOLDER_ID","filterPresetTag","getOrderedIds","isChatBot","AI_FOLDER_ID","filterAITag","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","ReactionSelectorCustomReaction","noAppearAnimation","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","isInStoryViewer","isForEffects","effectReactions","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","color","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","priority","lastMessage","selectChatLastMessage","isVerified","ENTITY_CLASS_BY_NODE_NAME","B","STRONG","I","EM","INS","U","S","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","node","COMMENT_NODE","index","rawText","nodeName","MentionName","Url","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","childNodes","querySelectorAll","replaceWith","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","removeChild","pop","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","GOOGLE_APP_CLIENT_ID","SCOPES","auth2","loadAuth2","gapi","isSignedIn","authResponse","currentUser","getAuthResponse","scopes","scopesArray","scope","checkHasAllNeededScopes","access_token","profile","getBasicProfile","signIn","getName","getEmail","signOutGoogle","signOut","reminders","useDefault","overrides","minutes","conferenceData","createRequest","requestId","conferenceSolutionKey","Authorization","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","hash","months","userIds","boostChannelId","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","customPeerAvatarColor","formatStarsTransactionAmount","starsAmount","nanos","number","formatStarsAmount","getStarsTransactionFromGift","transactionId","senderId","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","withPortal","tagText","tail","tailFill","autoClose"],"sourceRoot":""}